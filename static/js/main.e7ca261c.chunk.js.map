{"version":3,"sources":["constants.ts","images/rifWhite.svg","images/powered-by-iov.svg","pages/start/ConnectWalletComponent.tsx","images/rifGray.svg","components/ConnectedBar.tsx","pages/safeInteraction/Navigation.tsx","helpers/localStorage/utils.ts","components/Modal.tsx","config/index.ts","helpers/safeServiceClient.ts","helpers/transactionListener.ts","images/loading.svg","components/ViewExplorerButton.tsx","components/LoadingComponent.tsx","pages/safeInteraction/transactions/ApprovedModal.tsx","pages/safeInteraction/transactions/ExecutedModal.tsx","pages/safeInteraction/transactions/PublishedModal.tsx","components/CopyValueButton.tsx","components/ValueWithButtons.tsx","images/refresh.svg","pages/safeInteraction/transactions/TransactionDetailComponent.tsx","pages/safeInteraction/transactions/TransactionMenu.tsx","pages/safeInteraction/transactions/TransactionTabHelperText.tsx","pages/safeInteraction/transactions/index.tsx","pages/safeInteraction/Dashboard.tsx","components/ThresholdDropdown.tsx","pages/safeInteraction/policies/ChangeThresholdModal.tsx","pages/safeInteraction/policies/AddOwnerModal.tsx","pages/safeInteraction/policies/RemoveOwnerModal.tsx","pages/safeInteraction/policies/SwapOwnerModal.tsx","images/delete.svg","images/swap.svg","images/edit.svg","pages/safeInteraction/policies/index.tsx","pages/safeInteraction/assets/TransferValueModal.tsx","pages/safeInteraction/assets/TransferTokenModal.tsx","pages/safeInteraction/assets/index.tsx","components/TransactionCreatedModal.tsx","pages/safeInteraction/index.tsx","pages/connectToSafe/CreateSafeComponent.tsx","pages/connectToSafe/ConnectToSafeComponent.tsx","helpers/localStorage/safe.ts","pages/connectToSafe/index.tsx","components/FooterComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TransactionStatus","Screens","Web3Provider","rLogin","setRLoginResponse","handleError","className","src","rifSafeLogo","alt","onClick","connect","then","rLoginResponse","Promise","all","provider","request","method","response","parseInt","catch","poweredByLogo","ConnectedBar","walletAddress","chainId","rifGray","slice","length","id","chainIdtoString","LocalStorageKeys","Navigation","changeActive","handleLogout","selected","NavigationItem","name","toString","toLowerCase","style","textTransform","DASHBOARD","TRANSACTIONS","ASSETS","POLICY","map","Modal","handleClose","children","getContracts","rinkeby","testnet","local","toEthereumChecksum","address","toChecksumAddress","getSafeServiceUrl","safe","getChainId","safeTransactionService","getTransactions","safeNonce","url","SafeServiceClient","getSafeService","safeService","getMultisigTransactions","getAddress","value","results","transaction","transactionResponse","SafeTransaction","to","data","safeTxGas","baseGas","gasPrice","nonce","operation","gasToken","refundReceiver","isReject","status","PENDING","isExecuted","EXECUTED","REJECTED","confirmations","hash","safeTxHash","convertToBundle","sort","a","b","createOrUpdateTransaction","bundle","resolve","reject","getSigner","safeServiceUrl","signerAddress","Error","bodyWithoutSignature","contractTransactionHash","sender","signature","signatures","get","body","safeAddress","axios","post","headers","error","transactionListener","web3Provider","tx","checkInterval","setInterval","getTransactionReceipt","clearInterval","err","ViewExplorerButton","href","target","rel","xmlns","width","height","viewBox","fill","fillRule","d","LoadingComponent","text","loadingImage","ApprovedModal","ExecutedModal","PublishedModal","CopyButton","copyTextField","useRef","type","current","select","document","execCommand","defaultValue","ref","position","left","ValueWithButtons","CopyValueButton","TransactionDetailComponent","transactionBundle","approveTransaction","executeTransaction","rejectTransaction","useState","showDetails","setShowDetails","setSignatures","threshold","setThreshold","isRefreshing","setIsRefreshing","formatted","setFormatted","useEffect","getApprovals","InputDataDecoder","safeAbi","decodeData","erc20Abi","getThreshold","safeThreshold","forEach","confirmation","addSignature","EthSignSignature","owner","offChainSigners","Array","from","keys","isOnChain","getOwnersWhoApprovedTx","signers","onChainSigners","finally","handleApprove","onChain","walletHasSigned","filter","canExecute","colSpan","refreshIcon","disabled","JSON","stringify","approval","TransactionMenu","handleClick","MenuItem","TransactionTabHelperText","count","screen","TransactionsPanel","updateTransactionBundle","addTransaction","transactions","showApprovedModal","setShowApprovedModal","approvedOffChainModal","setApprovedOffChainModal","showExecutedModal","setShowExecutedModal","showPublishedModal","setShowPublishedModal","currentSubTab","setCurrentSubTab","currentTransactions","setCurrentTransactions","setSafeNonce","changeCurrentTab","tran","getNonce","createRejectionTransaction","rejectTx","approveTransactionHash","approveTransactionOffChain","getTransactionHash","result","getProvider","receipt","transactionHash","signTransaction","handleExecutionTransaction","currentNonce","isPending","hasDuplicate","t","undefined","Dashboard","balance","setBalance","setNonce","getBalance","ThresholdDropdown","onChange","numberOfOwners","options","index","push","evt","number","ChangeThresholdModal","currentThreshold","handleSubmit","newThreshold","setNewThreshold","AddOwnerModal","newOwner","setNewOwner","isAddress","RemoveOwnerModal","removeAddress","SwapOwnerModal","oldAddress","PolicyComponent","owners","setOwners","addNewOwner","setAddNewOwner","changeThreshold","setChangeThreshold","removeOwner","setRemoveOwner","swapOwner","setSwapOwner","getOwners","afterTransaction","deleteIcon","swapIcon","editIcon","getChangeThresholdTx","getAddOwnerTx","getRemoveOwnerTx","getSwapOwnerTx","TransferValueModal","createTransaction","amount","setTransaction","formattedData","TransferTokenModal","token","symbol","AssetsComponent","showTransfer","setShowTransfer","showTokenTransfer","setShowTokenTransfer","tokens","setTokens","getSafeBalance","getERC2Balance","decimals","contractAddress","rifToken","signer","Contract","balanceOf","updateToken","Math","pow","newTokenList","find","findToken","console","log","ERC20TransactionBuilder","create","txBuilder","bigAmount","BigNumber","mul","transfer","TransactionCreatedModal","closeModal","changeScreen","SafeInteraction","selectedTab","setSelectedTab","showTransactionInfo","setShowTransactionInfo","appNonce","setAppNonce","bundles","setTransactions","incomingTransaction","incomingTxBundle","nonceSorted","sortAndSetTransactions","list","CreateSafeComponent","connectAddress","createSafe","addresses","setAddresses","changeAddressValue","changeIndex","replace","updateList","item","_item","items","loopOptions","errorList","ConnectToSafeComponent","connectToSafe","pastSafes","setSafeAddress","setJsonKey","key","serializer","localStorage","setItem","setKey","getParsedItem","parser","content","getItem","parse","warn","safeParse","getSafeAddressKey","SAFES","getSafeAddresses","ChooseSafe","handleSetSafe","isCreate","setIsCreate","isLoading","setIsLoading","setPastSafes","contracts","ethers","providers","EthersSafeFactory","proxyFactoryAddress","safeSingletonAddress","EthersSafe","FooterComponent","version","RLogin","cacheProvider","supportedChains","App","setError","setSafe","setAddress","setChainId","message","on","accounts","safeAddressKey","safes","includes","saveSafeAddressToLocalStorage","disconnect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e7ca261c.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\n\nexport enum TransactionStatus {\n  PENDING = 'Pending',\n  EXECUTED = 'Executed',\n  REJECTED = 'Rejected'\n}\n\nexport enum Screens {\n  DASHBOARD = 'DASHBOARD',\n  TRANSACTIONS = 'TRANSACTIONS',\n  ASSETS = 'ASSETS',\n  POLICY = 'POLICY'\n}\n","export default __webpack_public_path__ + \"static/media/rifWhite.85d0f2d8.svg\";","export default __webpack_public_path__ + \"static/media/powered-by-iov.a0397e40.svg\";","import React from 'react'\nimport { RLoginButton } from '@rsksmart/rlogin'\nimport rifSafeLogo from '../../images/rifWhite.svg'\nimport poweredByLogo from '../../images/powered-by-iov.svg'\n\ninterface Interface {\n  rLogin: any\n  setRLoginResponse: (response: any, address: string, chainId: number) => void\n  handleError: (error: Error) => void\n}\n\nconst Web3Provider: React.FC<Interface> = ({ rLogin, setRLoginResponse, handleError }) => {\n  const handleLogin = () =>\n    rLogin.connect()\n      .then((rLoginResponse: any) => {\n        Promise.all([\n          rLoginResponse.provider.request({ method: 'eth_accounts' }),\n          rLoginResponse.provider.request({ method: 'eth_chainId' })\n        ]).then((response: any) => {\n          setRLoginResponse(rLoginResponse, response[0][0], parseInt(response[1]))\n        })\n      })\n      .catch(handleError)\n\n  return (\n    <section className=\"login\">\n      <div className=\"logo\">\n        <img src={rifSafeLogo} alt=\"RIF\" />\n        Safe and Vault Sample App\n      </div>\n      <h2>Login with your wallet</h2>\n      <p><RLoginButton onClick={handleLogin}>Connect with rLogin!</RLoginButton></p>\n      <img src={poweredByLogo} alt=\"Powered by IOV Labs\" />\n      <p className=\"legal\">Copyright © 2021 IOV Labs. All rights reserved.</p>\n    </section>\n  )\n}\n\nexport default Web3Provider\n","export default __webpack_public_path__ + \"static/media/rifGray.3588d3de.svg\";","import React from 'react'\nimport rifGray from '../images/rifGray.svg'\n\ninterface Interface {\n  chainId: number | null\n  walletAddress: string | null\n}\n\nconst ConnectedBar: React.FC<Interface> = ({ walletAddress, chainId }) => {\n  const chainIdtoString = (id: number) => {\n    switch (id) {\n      case 4: return 'Rinkeby Testnet'\n      case 31: return 'RSK Testnet'\n      case 30: return 'RSK Mainnet'\n      default: return 'Local'\n    }\n  }\n  return (\n    <section className=\"header\">\n      <ul className=\"inline\">\n        <li className=\"logo\">\n          <img src={rifGray} alt=\"RIF Safe\" />\n          Safe and Vault Sample App\n        </li>\n        {walletAddress && (\n          <li className=\"address\">\n            {`${walletAddress.slice(0, 8)}...${walletAddress.slice(walletAddress.length - 6)}`}\n          </li>\n        )}\n        <li className=\"chainId\"><span>{chainId && chainIdtoString(chainId)}</span></li>\n      </ul>\n    </section>\n  )\n}\n\nexport default ConnectedBar\n","import React from 'react'\nimport { Screens } from '../../constants'\n\ninterface Interface {\n  handleLogout: () => void\n  changeActive: (screen: Screens) => void\n  selected: Screens\n}\n\nconst Navigation: React.FC<Interface> = ({ changeActive, handleLogout, selected }) => {\n  const NavigationItem: React.FC<{ name: Screens }> = ({ name }) => {\n    const toString = name.toString().toLowerCase()\n    return (\n      <li>\n        <button\n          style={{ textTransform: 'capitalize' }}\n          className={selected === name ? `selected ${toString}` : toString}\n          onClick={() => changeActive(name)}\n        >{toString}</button>\n      </li>\n    )\n  }\n\n  return (\n    <ul className=\"navigation\">\n      {[Screens.DASHBOARD, Screens.TRANSACTIONS, Screens.ASSETS, Screens.POLICY]\n        .map((name: Screens) =>\n          <NavigationItem key={name} name={name} />\n        )}\n      <li className=\"logout\"><button onClick={handleLogout}>Disconnect Wallet</button></li>\n    </ul>\n  )\n}\n\nexport default Navigation\n","export enum LocalStorageKeys {\n    SAFES = 'SAFES'\n  }\n\nexport const setKey = (key: string, value: string) => localStorage.setItem(key, value)\n\nexport const removeKey = (key: string) => localStorage.removeItem(key)\n\nexport const setJsonKey = (key: string, value: any, serializer?: (value: any) => string) => {\n  const serializedValue = serializer ? serializer(value) : JSON.stringify(value)\n  setKey(key, serializedValue)\n}\n\nexport const safeParse = <T>(content: string): T[] | null => {\n  try {\n    return JSON.parse(content)\n  } catch (error) {\n    console.warn('Error on parsing localstorage content', content)\n    return null\n  }\n}\n\nexport const getParsedItem = <T>(key: string, parser?: (content: string) => T[]): T[] | null => {\n  const content = localStorage.getItem(key)\n  if (!content) {\n    return null\n  }\n  return parser ? parser(content) : safeParse(content)\n}\n","import React, { ReactNode } from 'react'\n\ninterface Interface {\n  handleClose?: () => void\n  children: ReactNode\n}\n\nconst Modal: React.FC<Interface> = ({ handleClose, children }) => {\n  return (\n    <div className=\"modal\">\n      <div className=\"modalBody\">\n        <div className=\"modalHeader\">\n          {handleClose && <button className=\"close\" onClick={handleClose}>x</button>}\n        </div>\n        <div className=\"modalContent\">\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","import local from './local.json'\nimport testnet from './testnet.json'\nimport rinkeby from './rinkeby.json'\n\nexport const getContracts = (chainId: number) => {\n  switch (chainId) {\n    case 4: return rinkeby\n    case 31: return testnet\n    default: return local\n  }\n}\n","import { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport SafeServiceClient, { SafeMultisigTransactionListResponse, SafeMultisigTransactionResponse } from '@gnosis.pm/safe-service-client'\nimport { toChecksumAddress } from '@rsksmart/rsk-utils'\nimport { getContracts } from '../config'\nimport { TransactionStatus } from '../constants'\nimport { TransactionBundle } from '../pages/safeInteraction'\nimport axios from 'axios'\n\n// the transaction service requires the Ethereum checksum\nconst toEthereumChecksum = (address: string) => toChecksumAddress(address)\n\nconst getSafeServiceUrl = (safe: Safe) => safe.getChainId().then((chainId: number) => getContracts(chainId).safeTransactionService)\n\n// create the safe service client:\nconst getSafeService = (safe: Safe) => getSafeServiceUrl(safe).then(url => new SafeServiceClient(url))\n\n// Convert the response from the transaction service to our Sample Apps \"TransactionBundle\"\nconst convertToBundle = (transactionResponse: SafeMultisigTransactionResponse, safeNonce: number) => {\n  const transaction = new SafeTransaction({\n    to: transactionResponse.to,\n    value: transactionResponse.value,\n    data: transactionResponse.data || '0x',\n    safeTxGas: transactionResponse.safeTxGas,\n    baseGas: transactionResponse.baseGas,\n    gasPrice: parseInt(transactionResponse.gasPrice),\n    nonce: transactionResponse.nonce,\n    operation: transactionResponse.operation,\n    gasToken: transactionResponse.gasToken,\n    refundReceiver: transactionResponse.refundReceiver || ''\n  })\n\n  const isReject = (\n    transactionResponse.to.toLowerCase() === transactionResponse.safe.toLowerCase() &&\n    transactionResponse.value === '0' &&\n    !transactionResponse.data)\n\n  // Transaction Status\n  let status = TransactionStatus.PENDING\n  if (transactionResponse.isExecuted) {\n    status = TransactionStatus.EXECUTED\n  } else if (transactionResponse.nonce < safeNonce) {\n    status = TransactionStatus.REJECTED\n  }\n  const { confirmations } = transactionResponse\n\n  const response: TransactionBundle = {\n    transaction,\n    hash: transactionResponse.safeTxHash,\n    status,\n    isReject,\n    confirmations\n  }\n\n  return response\n}\n\nexport const getTransactions = (safe: Safe, safeNonce: number) =>\n  getSafeService(safe).then((safeService: SafeServiceClient) =>\n    safeService.getMultisigTransactions(toEthereumChecksum(safe.getAddress()))\n      .then((value: SafeMultisigTransactionListResponse) => {\n        if (value.results.length === 0) return []\n\n        // convert the response into a bundles\n        const bundleArray = value.results.map((transaction: SafeMultisigTransactionResponse) =>\n          convertToBundle(transaction, safeNonce))\n\n        // sort by nonce\n        return bundleArray.sort((a: TransactionBundle, b: TransactionBundle) =>\n          (a.transaction.data.nonce > b.transaction.data.nonce) ? 1 : -1)\n      }))\n\nexport const createOrUpdateTransaction = (\n  bundle: TransactionBundle,\n  safe: Safe\n) => new Promise((resolve, reject) =>\n  Promise.all([getSafeServiceUrl(safe), safe.getSigner()?.getAddress()]).then(([safeServiceUrl, signerAddress]) => {\n    if (!signerAddress) {\n      return reject(new Error('The current safe has no signed associated.'))\n    }\n    const bodyWithoutSignature = {\n      ...bundle.transaction.data,\n      to: toEthereumChecksum(bundle.transaction.data.to),\n      contractTransactionHash: bundle.hash,\n      sender: signerAddress\n    }\n    const signature = bundle.transaction.signatures?.get(signerAddress.toLowerCase())\n    const body = signature ? { ...bodyWithoutSignature, signature: signature.data } : bodyWithoutSignature\n\n    const safeAddress = toEthereumChecksum(safe.getAddress())\n    const url = `${safeServiceUrl}/api/v1/safes/${safeAddress}/multisig-transactions/`\n    axios.post(url, body, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(() => resolve(true))\n      .catch((error) => {\n        reject(error)\n      })\n  }))\n","import { Provider, TransactionReceipt } from '@ethersproject/providers'\n\nexport const transactionListener = (web3Provider: Provider, tx: string) =>\n  new Promise((resolve, reject) => {\n    const checkInterval = setInterval(() =>\n      web3Provider.getTransactionReceipt(tx)\n        .then((response: TransactionReceipt) => {\n          if (response) {\n            clearInterval(checkInterval)\n            response.status && response.status === 1 ? resolve(response) : reject(new Error('Transaction Failed'))\n          }\n        })\n        .catch((err: Error) => reject(err))\n    , 2000)\n  })\n","export default __webpack_public_path__ + \"static/media/loading.06d7c63f.svg\";","import React from 'react'\n\ninterface Interface {\n  address?: string\n  tx?: string\n}\n\nconst ViewExplorerButton: React.FC<Interface> = ({ address, tx }) => {\n  const url = address ? `address/${address.toLowerCase()}` : `tx/${tx}`\n  return (\n    <a\n      href={`http://explorer.testnet.rsk.co/${url}`}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      className=\"icon explorerLink\"\n    >\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0H16V16H0z\"></path><path className=\"icon-color\" fillRule=\"nonzero\" d=\"M13 13v-2c0-.552.448-1 1-1s1 .448 1 1v2c0 1.105-.895 2-2 2H3c-1.105 0-2-.895-2-2V3c0-1.105.895-2 2-2h2c.552 0 1 .448 1 1s-.448 1-1 1H3v10h10z\"></path><path className=\"icon-color\" d=\"M11.586 3H9c-.552 0-1-.448-1-1s.448-1 1-1h5c.276 0 .526.112.707.293.181.18.293.43.293.707v5c0 .552-.448 1-1 1s-1-.448-1-1V4.414l-6.243 6.243c-.39.39-1.023.39-1.414 0-.39-.39-.39-1.024 0-1.414L11.586 3z\"></path></g></svg>\n    </a>\n  )\n}\n\nexport default ViewExplorerButton\n","import React from 'react'\nimport loadingImage from '../images/loading.svg'\nimport ViewExplorerButton from './ViewExplorerButton'\n\ninterface Interface {\n  text?: string\n  hash?: string\n}\n\nconst LoadingComponent: React.FC<Interface> = ({ text, hash }) => {\n  return (\n    <div className=\"loading\">\n      <p><img src={loadingImage} alt=\"Loading...\" /></p>\n      {(text || hash) && (\n        <p>\n          {text}\n          {hash && <> View it on the explorer <ViewExplorerButton tx={hash} /></>}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default LoadingComponent\n","import React from 'react'\nimport LoadingComponent from '../../../components/LoadingComponent'\nimport Modal from '../../../components/Modal'\nimport ViewExplorerButton from '../../../components/ViewExplorerButton'\n\ninterface Interface {\n  handleClose: () => void\n  hash: string\n}\n\nconst ApprovedModal: React.FC<Interface> = ({ hash, handleClose }) => {\n  if (hash === 'LOADING') {\n    return (\n      <Modal>\n        <LoadingComponent text=\"Adding the signature to the transaction.\" />\n      </Modal>\n    )\n  }\n\n  return (\n    <Modal handleClose={handleClose}>\n      <h2>Transaction Approved</h2>\n      <p>Your signature has been added to this transaction! This is the hash of the transaction:</p>\n      <p>\n        <span className=\"readonly\">{hash}</span>\n        <ViewExplorerButton tx={hash} />\n      </p>\n      <p><button onClick={handleClose}>Close modal</button></p>\n    </Modal>\n  )\n}\n\nexport default ApprovedModal\n","import React from 'react'\nimport LoadingComponent from '../../../components/LoadingComponent'\nimport Modal from '../../../components/Modal'\nimport ViewExplorerButton from '../../../components/ViewExplorerButton'\n\ninterface Interface {\n  handleClose: () => void\n  status: { hash?: string, status?: string }\n}\n\nconst ExecutedModal: React.FC<Interface> = ({ handleClose, status }) => {\n  if (status.status === 'LOADING') {\n    return (\n      <Modal>\n        <LoadingComponent text=\"Executing the transaction.\" hash={status.hash} />\n      </Modal>\n    )\n  }\n\n  return (\n    <Modal handleClose={handleClose}>\n      <h2>Transaction executed</h2>\n      <p>This is the hash of the transaction:</p>\n      <p>\n        <span className=\"readonly\">{status.hash}</span>\n        <ViewExplorerButton tx={status.hash} />\n      </p>\n      <p><button onClick={handleClose}>Close modal</button></p>\n    </Modal>\n  )\n}\n\nexport default ExecutedModal\n","import React from 'react'\nimport Modal from '../../../components/Modal'\n\ninterface Interface {\n  handleClose: () => void\n}\n\nconst PublishedModal: React.FC<Interface> = ({ handleClose }) => {\n  return (\n    <Modal handleClose={handleClose}>\n      <h2>Transaction Published</h2>\n      <p>The transaction has been published to the service for others to see.</p>\n    </Modal>\n  )\n}\n\nexport default PublishedModal\n","import React, { useRef } from 'react'\n\ninterface CopyButtonInterface {\n  value: string\n}\n\nconst CopyButton: React.FC<CopyButtonInterface> = ({ value }) => {\n  const copyTextField = useRef<HTMLInputElement>(null)\n\n  const handleClick = () => {\n    copyTextField.current && copyTextField.current.select()\n    document.execCommand('copy')\n  }\n\n  return (\n    <span className=\"copyButton\">\n      <button type=\"button\" className=\"icon\" onClick={handleClick}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0H16V16H0z\"></path><path className=\"icon-color\" fillRule=\"nonzero\" d=\"M10 10h3V3H8v1c1.105 0 2 .895 2 2v4zM6 4V3c0-1.105.895-2 2-2h5c1.105 0 2 .895 2 2v7c0 1.105-.895 2-2 2h-3v1c0 1.105-.895 2-2 2H3c-1.105 0-2-.895-2-2V6c0-1.105.895-2 2-2h3zM3 6v7h5V6H3z\"></path></g></svg>\n      </button>\n\n      <input\n        type=\"text\"\n        className=\"copyText\"\n        defaultValue={value}\n        ref={copyTextField}\n        style={{ position: 'absolute', left: '-10000px' }}\n      />\n    </span>\n  )\n}\n\nexport default CopyButton\n","import React from 'react'\nimport CopyValueButton from './CopyValueButton'\nimport ViewExplorerButton from './ViewExplorerButton'\n\ninterface Interface {\n  value: string\n}\n\nconst ValueWithButtons: React.FC<Interface> = ({ value }) => {\n  return (\n    <>\n      {value}\n      <CopyValueButton value={value} />\n      <ViewExplorerButton address={value} />\n    </>\n  )\n}\n\nexport default ValueWithButtons\n","export default __webpack_public_path__ + \"static/media/refresh.7a8b3bf4.svg\";","import { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport React, { useEffect, useState } from 'react'\nimport ValueWithButtons from '../../../components/ValueWithButtons'\nimport refreshIcon from '../../../images/refresh.svg'\n\nimport safeAbi from '@gnosis.pm/safe-core-sdk/dist/src/abis/SafeAbiV1-2-0.json'\nimport erc20Abi from '../assets/erc20.json'\nimport InputDataDecoder from 'ethereum-input-data-decoder'\nimport { TransactionBundle } from '..'\nimport CopyValueButton from '../../../components/CopyValueButton'\nimport { TransactionStatus } from '../../../constants'\nimport { EthSignSignature } from '@gnosis.pm/safe-core-sdk/dist/src/utils/signatures/SafeSignature'\n\ninterface Interface {\n  safe: Safe\n  transactionBundle: TransactionBundle\n  walletAddress: string\n  approveTransaction?: (transaction: TransactionBundle, onChain: boolean) => Promise<any>\n  executeTransaction?: (transactionBundle: TransactionBundle) => void\n  rejectTransaction?: (transaction: SafeTransaction) => void\n  handleError?: (error: Error) => void\n}\n\ninterface SignatureType {\n  signature: string,\n  isOnChain: boolean\n}\n\nconst TransactionDetailComponent: React.FC<Interface> = ({\n  safe, transactionBundle, walletAddress, handleError, approveTransaction, executeTransaction, rejectTransaction\n}) => {\n  const { transaction, hash, confirmations } = transactionBundle\n\n  const [showDetails, setShowDetails] = useState<boolean>(false)\n  const [signatures, setSignatures] = useState<SignatureType[]>([])\n  const [threshold, setThreshold] = useState<number>(0)\n  const [isRefreshing, setIsRefreshing] = useState<boolean>(false)\n  const [formatted, setFormatted] = useState<any>(null)\n\n  useEffect(() => {\n    // get transaction approvals\n    getApprovals()\n\n    // try to decode the data\n    const formatted = new InputDataDecoder(safeAbi).decodeData(transaction.data.data)\n    if (formatted.method) {\n      setFormatted(formatted)\n    } else {\n      setFormatted(new InputDataDecoder(erc20Abi).decodeData(transaction.data.data))\n    }\n\n    safe.getThreshold().then((safeThreshold: number) => setThreshold(safeThreshold))\n  }, [transaction])\n\n  const getApprovals = () => {\n    setIsRefreshing(true)\n\n    if (confirmations) {\n      confirmations.forEach((confirmation) => {\n        transaction.addSignature(new EthSignSignature(confirmation.owner, confirmation.signature))\n      })\n    }\n    const offChainSigners = Array.from(transaction.signatures.keys()).map((signature: string) => ({ signature, isOnChain: false }))\n\n    safe.getOwnersWhoApprovedTx(hash)\n      .then((signers: string[]) => {\n        const onChainSigners = signers.map((signature: string) => ({ signature, isOnChain: true }))\n        setSignatures([...offChainSigners, ...onChainSigners])\n      })\n      .catch(handleError)\n      .finally(() => setIsRefreshing(false))\n  }\n\n  const getTransactionName = () => {\n    if (transactionBundle.isReject) {\n      return 'Rejection Transaction'\n    } else if (transaction.data.data === '0x') {\n      return 'Send Value'\n    } else if (formatted.method) {\n      return formatted.method\n    } else {\n      return 'Transaction'\n    }\n  }\n\n  const handleApprove = (onChain: boolean) =>\n    approveTransaction && approveTransaction(transactionBundle, onChain)\n      .then(() => getApprovals())\n\n  const handleReject = () =>\n    rejectTransaction && rejectTransaction(transaction)\n\n  const walletHasSigned = signatures.filter((value: SignatureType) => value.signature.toLowerCase() === walletAddress.toLowerCase()).length === 1\n  const canExecute = threshold > signatures.length\n\n  return (\n    <div className=\"transaction\">\n      <table>\n        <thead>\n          <tr>\n            <th colSpan={2}>{formatted && getTransactionName()}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <th>to:</th>\n            <td>\n              {transaction.data.to === safe.getAddress() && <em>(Safe) </em>}\n              <ValueWithButtons value={transaction.data.to} />\n            </td>\n          </tr>\n          {transactionBundle.status === TransactionStatus.PENDING && (\n            <tr>\n              <th>approvals:</th>\n              <td>\n                {isRefreshing ? 'loading...' : `${signatures.length} out of ${threshold}`}\n                <button className=\"icon\" onClick={getApprovals}>\n                  <img src={refreshIcon} alt=\"refresh\" />\n                </button>\n              </td>\n            </tr>\n          )}\n          {transaction.data.value !== '0' && (\n            <tr>\n              <th>value:</th>\n              <td><p>{transaction.data.value}</p></td>\n            </tr>\n          )}\n          <tr>\n            <th>nonce:</th>\n            <td><p>{transaction.data.nonce}</p></td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div className=\"buttons\">\n        <button onClick={() => setShowDetails(!showDetails)}>{showDetails ? 'hide ' : 'show '}details</button>\n        {approveTransaction && (\n          <>\n            <button\n              disabled={walletHasSigned}\n              onClick={() => handleApprove(true)}>approve on-chain</button>\n            <button\n              disabled={walletHasSigned}\n              onClick={() => handleApprove(false)}>approve off-chain</button>\n          </>\n        )}\n        {!transactionBundle.isReject && rejectTransaction && <button\n          onClick={handleReject}\n        >create rejection</button>}\n        {executeTransaction && <button\n          disabled={canExecute}\n          onClick={() => executeTransaction(transactionBundle)}>execute</button>}\n      </div>\n\n      {showDetails && (\n        <table><tbody>\n          <tr>\n            <th>Transaction Hash</th>\n            <td>\n              <p>{hash}<CopyValueButton value={hash} /></p>\n            </td>\n          </tr>\n          {transaction.data.data !== '0x' && (\n            <>\n              <tr>\n                <th>Raw Data</th>\n                <td><p className=\"data\">{transaction.data.data}</p></td>\n              </tr>\n              <tr>\n                <th>Decoded Data</th>\n                <td>\n                  <pre>{JSON.stringify(formatted, null, 2)}</pre>\n                </td>\n              </tr>\n            </>\n          )}\n          <tr>\n            <th>Approvals:</th>\n            <td>\n              {signatures.length === 0 ? <p><em>No signatures</em></p> : (\n                <>\n                  <ol >\n                    {signatures.map((approval: SignatureType) =>\n                      <li key={approval.signature}>\n                        <ValueWithButtons value={approval.signature} />\n                        {`(${approval.isOnChain ? 'on' : 'off'}-chain)`}\n                        {walletAddress.toLowerCase() === approval.signature.toLowerCase() && <em>(Connected Account)</em>}\n                      </li>)}\n                  </ol>\n                </>\n              )}\n            </td>\n          </tr>\n        </tbody></table>\n      )}\n    </div>\n  )\n}\n\nexport default TransactionDetailComponent\n","import React from 'react'\nimport { TransactionStatus } from '../../../constants'\n\ninterface Interface {\n  selected: TransactionStatus,\n  handleClick: (tab: TransactionStatus) => void\n}\n\nconst TransactionMenu: React.FC<Interface> = ({ handleClick, selected }) => {\n  const MenuItem: React.FC<{name: TransactionStatus}> = ({ name }) =>\n    <li>\n      <button\n        onClick={() => handleClick(name)}\n        className={selected === name ? 'selected' : ''}\n      >{name}</button></li>\n\n  return (\n    <ul className=\"inline\">\n      <MenuItem name={TransactionStatus.PENDING} />\n      <MenuItem name={TransactionStatus.EXECUTED} />\n      <MenuItem name={TransactionStatus.REJECTED} />\n    </ul>\n  )\n}\n\nexport default TransactionMenu\n","import React from 'react'\nimport { TransactionStatus } from '../../../constants'\n\ninterface Interface {\n  screen: TransactionStatus\n  count: number\n}\n\nconst TransactionTabHelperText: React.FC<Interface> = ({ count, screen }) => {\n  if (count === 0) {\n    return (\n      <p><em>No {screen.toString()} transactions</em></p>\n    )\n  }\n\n  switch (screen) {\n    case TransactionStatus.PENDING:\n      return (\n        <p>Transactions must be executed in nonce order. Please execute the first transaction before interacting with the next. If you do not want to execute the next transaction, create and execute a rejection transaction which will move to the next nonce.</p>\n      )\n    case TransactionStatus.REJECTED:\n      return (\n        <p>These transactions have a corresponding &quot;Executed&quot; transaction with the same nonce.</p>\n      )\n  }\n\n  return (<></>)\n}\n\nexport default TransactionTabHelperText\n","import { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport { rejectTx, executeTransaction } from '@rsksmart/safe-transactions-sdk'\nimport { ContractTransaction } from 'ethers'\nimport React, { useEffect, useState } from 'react'\nimport { TransactionBundle } from '..'\nimport Modal from '../../../components/Modal'\nimport { TransactionStatus } from '../../../constants'\nimport { createOrUpdateTransaction } from '../../../helpers/safeServiceClient'\nimport { transactionListener } from '../../../helpers/transactionListener'\nimport ApprovedModal from './ApprovedModal'\nimport ExecutedModal from './ExecutedModal'\nimport PublishedModal from './PublishedModal'\nimport TransactionDetailComponent from './TransactionDetailComponent'\nimport TransactionMenu from './TransactionMenu'\nimport TransactionTabHelperText from './TransactionTabHelperText'\n\ninterface Interface {\n  safe: Safe\n  handleError: (err: Error) => void\n  addTransaction: (transaction: SafeTransaction, isReject: boolean) => void\n  updateTransactionBundle: (transaction: TransactionBundle) => void\n  transactions: TransactionBundle[]\n  walletAddress: string\n}\n\nconst TransactionsPanel: React.FC<Interface> = ({ safe, handleError, updateTransactionBundle, addTransaction, walletAddress, transactions }) => {\n  const [showApprovedModal, setShowApprovedModal] = useState<string | null>(null)\n  const [approvedOffChainModal, setApprovedOffChainModal] = useState<boolean>(false)\n  const [showExecutedModal, setShowExecutedModal] = useState<{ status: string, hash?: string } | null>(null)\n  const [showPublishedModal, setShowPublishedModal] = useState<boolean>(false)\n\n  const [currentSubTab, setCurrentSubTab] = useState<TransactionStatus>(TransactionStatus.PENDING)\n  const [currentTransactions, setCurrentTransactions] = useState<TransactionBundle[]>([])\n\n  const [safeNonce, setSafeNonce] = useState<number>(0)\n\n  const changeCurrentTab = (name: TransactionStatus) => {\n    setCurrentSubTab(name)\n    setCurrentTransactions(transactions.filter((tran: TransactionBundle) => tran.status === name))\n  }\n\n  useEffect(() => {\n    changeCurrentTab(TransactionStatus.PENDING)\n    safe.getNonce().then((nonce: number) => setSafeNonce(nonce))\n  }, [transactions])\n\n  const createRejectionTransaction = (transaction: SafeTransaction) =>\n    rejectTx(safe, transaction)\n      .then((transaction: SafeTransaction) => addTransaction(transaction, true))\n\n  // Approve/Sign a transaction\n  const approveTransaction = (transaction: TransactionBundle, onChain: boolean) =>\n    onChain ? approveTransactionHash(transaction) : approveTransactionOffChain(transaction)\n\n  // Sign transaction \"on-chain\"\n  const approveTransactionHash = (bundle: TransactionBundle) => {\n    setShowApprovedModal('LOADING')\n\n    return safe.getTransactionHash(bundle.transaction)\n      .then((hash: string) =>\n        safe.approveTransactionHash(hash)\n          .then((result: ContractTransaction) => transactionListener(safe.getProvider(), result.hash))\n          .then((receipt: any) => setShowApprovedModal(receipt.transactionHash)))\n      .catch((err: Error) => {\n        setShowApprovedModal(null)\n        handleError(err)\n      })\n  }\n\n  const approveTransactionOffChain = (bundle: TransactionBundle) =>\n    safe.signTransaction(bundle.transaction)\n      .then(() => {\n        updateTransactionBundle(bundle)\n        createOrUpdateTransaction(bundle, safe).then(() => {\n          setApprovedOffChainModal(true)\n        })\n      })\n      .catch(handleError)\n\n  // Execute transaction\n  const handleExecutionTransaction = (bundle: TransactionBundle) => {\n    executeTransaction(safe, bundle.transaction)\n      .then((result: ContractTransaction) => {\n        setShowExecutedModal({ status: 'LOADING', hash: result.hash })\n        return transactionListener(safe.getProvider(), result.hash)\n      })\n      .then((receipt: any) => {\n        setShowExecutedModal({ status: 'COMPLETE', hash: receipt.transactionHash })\n        updateTransactionBundle({ ...bundle, status: TransactionStatus.EXECUTED })\n      })\n      .catch((err: Error) => {\n        setShowExecutedModal(null)\n        handleError(err)\n      })\n  }\n\n  return (\n    <>\n      <section className=\"panel\">\n        <h2>Transactions</h2>\n\n        <TransactionMenu\n          selected={currentSubTab}\n          handleClick={changeCurrentTab}\n        />\n\n        <h3>{`${currentSubTab.toString()} Transactions:`}</h3>\n\n        <TransactionTabHelperText count={currentTransactions.length} screen={currentSubTab} />\n\n        {currentTransactions.map((transaction: TransactionBundle) => {\n          const currentNonce = safeNonce === transaction.transaction.data.nonce\n          const isPending = currentSubTab === TransactionStatus.PENDING\n          const hasDuplicate = currentTransactions.filter((t: TransactionBundle) => t.transaction.data.nonce === transaction.transaction.data.nonce).length > 1\n\n          return <TransactionDetailComponent\n            key={transaction.hash}\n            safe={safe}\n            transactionBundle={transaction}\n            walletAddress={walletAddress}\n            handleError={handleError}\n            approveTransaction={currentSubTab === TransactionStatus.PENDING ? approveTransaction : undefined}\n            executeTransaction={(isPending && currentNonce) ? handleExecutionTransaction : undefined}\n            rejectTransaction={(isPending && currentNonce && !hasDuplicate) ? createRejectionTransaction : undefined}\n          />\n        })}\n      </section>\n\n      {showApprovedModal && <ApprovedModal hash={showApprovedModal} handleClose={() => setShowApprovedModal(null)} />}\n      {showExecutedModal && <ExecutedModal status={showExecutedModal} handleClose={() => setShowExecutedModal(null)} />}\n      {showPublishedModal && <PublishedModal handleClose={() => setShowPublishedModal(false)} />}\n      {approvedOffChainModal && <Modal handleClose={() => setApprovedOffChainModal(false)}>\n        <h2>Signature Added</h2>\n        <p>Since this is a sample app, this signature will be saved in local state only. It will not be saved if the app refreshed.</p>\n      </Modal>}\n    </>\n  )\n}\n\nexport default TransactionsPanel\n","import { Safe } from '@gnosis.pm/safe-core-sdk'\nimport React, { useEffect, useState } from 'react'\nimport ValueWithButtons from '../../components/ValueWithButtons'\nimport refreshIcon from '../../images/refresh.svg'\n\ninterface Interface {\n  safe: Safe\n}\n\nconst Dashboard: React.FC<Interface> = ({ safe }) => {\n  const [balance, setBalance] = useState<number>(0)\n  const [nonce, setNonce] = useState<number | null>(null)\n\n  useEffect(() => {\n    getBalance()\n    getNonce()\n  }, [safe])\n\n  const getBalance = () => safe.getBalance().then((balance: any) => setBalance(balance))\n  const getNonce = () => safe.getNonce().then((nonce: number) => setNonce(nonce))\n\n  return (\n    <section className=\"panel\">\n      <h2>Safe Dashboard</h2>\n      <table>\n        <tbody>\n          <tr>\n            <th>Safe Address</th>\n            <td><ValueWithButtons value={safe.getAddress()} /></td>\n          </tr>\n          <tr className=\"text\">\n            <th>Balance</th>\n            <td>\n              {(balance / 1000000000000000000).toString()}\n              <button onClick={getBalance} className=\"icon\"><img src={refreshIcon} alt=\"Refresh\" /></button>\n            </td>\n          </tr>\n          {nonce !== null && (\n            <tr className=\"text\">\n              <th>Nonce</th>\n              <td>\n                {nonce.toString()}\n                <button onClick={getNonce} className=\"icon\"><img src={refreshIcon} alt=\"Refresh\" /></button>\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </section>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\n\ninterface Interface {\n  value: number\n  onChange: (value: number) => void\n  numberOfOwners: number\n}\n\nconst ThresholdDropdown: React.FC<Interface> = ({ value, onChange, numberOfOwners }) => {\n  const options = []\n  for (let index = 1; index <= numberOfOwners; index++) {\n    options.push(index)\n  }\n\n  const handleChange = (evt: any) => onChange(parseInt(evt.target.value))\n\n  return (\n    <select value={value} onChange={handleChange}>\n      {options.map((number: number) => <option key={number} value={number}>{number}</option>)}\n    </select>\n  )\n}\n\nexport default ThresholdDropdown\n","import React, { useState } from 'react'\nimport ThresholdDropdown from '../../../components/ThresholdDropdown'\n\ninterface Interface {\n  numberOfOwners: number\n  currentThreshold: number\n  handleSubmit: (newThreshold: number) => void\n}\n\nconst ChangeThresholdModal: React.FC<Interface> = ({ numberOfOwners, currentThreshold, handleSubmit }) => {\n  const [newThreshold, setNewThreshold] = useState<number>(currentThreshold)\n\n  const options = []\n  for (let index = 1; index <= numberOfOwners; index++) {\n    options.push(index)\n  }\n\n  return (\n    <div>\n      <h3>Change threshold</h3>\n      <p>Change the number of approvers for a transaction to be executed</p>\n      <label>New threshold:</label>\n      <ThresholdDropdown\n        numberOfOwners={numberOfOwners}\n        value={newThreshold}\n        onChange={(value: number) => setNewThreshold(value)}\n      />\n\n      <p><button onClick={() => handleSubmit(newThreshold)}>Change threshold</button></p>\n    </div>\n  )\n}\n\nexport default ChangeThresholdModal\n","import { isAddress } from '@ethersproject/address'\nimport React, { useState } from 'react'\nimport ThresholdDropdown from '../../../components/ThresholdDropdown'\n\ninterface Interface {\n  numberOfOwners: number\n  handleSubmit: (newOwner: string, newThreshold: number) => void\n  handleError: (err: Error) => void\n}\n\nconst AddOwnerModal: React.FC<Interface> = ({ handleSubmit, handleError, numberOfOwners }) => {\n  const [newOwner, setNewOwner] = useState<string>('')\n  const [newThreshold, setNewThreshold] = useState<number>(numberOfOwners)\n\n  const validateAddress = () => {\n    isAddress(newOwner.toLowerCase())\n      ? handleSubmit(newOwner.toLowerCase(), newThreshold)\n      : handleError(new Error('Value is not an address.'))\n  }\n\n  return (\n    <div>\n      <h3>Add new owner</h3>\n      <label>\n        Address</label>\n      <input type=\"text\" className=\"newOwner\" value={newOwner} onChange={evt => setNewOwner(evt.target.value)} />\n\n      <label>New Threshold</label>\n      <ThresholdDropdown\n        numberOfOwners={numberOfOwners}\n        value={newThreshold}\n        onChange={(value: number) => setNewThreshold(value)}\n      />\n\n      <p><button onClick={validateAddress}>Update</button></p>\n    </div>\n  )\n}\n\nexport default AddOwnerModal\n","import React, { useState } from 'react'\nimport ThresholdDropdown from '../../../components/ThresholdDropdown'\n\ninterface Interface {\n  numberOfOwners: number\n  handleSubmit: (address: string, threshold: number) => void\n  removeAddress: string\n}\n\nconst RemoveOwnerModal: React.FC<Interface> = ({ numberOfOwners, handleSubmit, removeAddress }) => {\n  const [threshold, setThreshold] = useState<number>(numberOfOwners - 1)\n\n  return (\n    <div>\n      <h3>Remove owner</h3>\n      <p>Are you sure you want to remove this owner?</p>\n      <span className=\"readonly\">{removeAddress}</span>\n\n      <p>\n        <label>New threshold:</label>\n        <ThresholdDropdown\n          numberOfOwners={numberOfOwners - 1}\n          value={threshold}\n          onChange={(value: number) => setThreshold(value)} />\n      </p>\n\n      <p><button onClick={() => handleSubmit(removeAddress.toLowerCase(), threshold)}>Remove</button></p>\n    </div>\n  )\n}\n\nexport default RemoveOwnerModal\n","import { isAddress } from '@ethersproject/address'\nimport React, { useState } from 'react'\n\ninterface Interface {\n  handleError: (err: Error) => void\n  handleSubmit: (oldOwner: string, newOwner: string) => void\n  oldAddress: string\n}\n\nconst SwapOwnerModal: React.FC<Interface> = ({ oldAddress, handleError, handleSubmit }) => {\n  const [newOwner, setNewOwner] = useState<string>('')\n\n  const validateAddress = () =>\n    isAddress(newOwner)\n      ? handleSubmit(oldAddress, newOwner.toLowerCase())\n      : handleError(new Error('Address is not valid'))\n\n  return (\n    <div>\n      <h3>Swap Owner</h3>\n      <p>Swap address for a new one.</p>\n      <label>Old Address:</label>\n      <span className=\"readonly\">{oldAddress}</span>\n      <label>New Owner</label>\n      <input type=\"text\" className=\"newAddress\" value={newOwner} onChange={evt => setNewOwner(evt.target.value)} />\n\n      <p><button onClick={validateAddress}>Swap Address</button></p>\n    </div>\n  )\n}\n\nexport default SwapOwnerModal\n","export default __webpack_public_path__ + \"static/media/delete.8970c03e.svg\";","export default __webpack_public_path__ + \"static/media/swap.29d1f400.svg\";","export default __webpack_public_path__ + \"static/media/edit.d3af4af9.svg\";","import React, { useEffect, useState } from 'react'\nimport { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport ValueWithButtons from '../../../components/ValueWithButtons'\nimport ChangeThresholdModal from './ChangeThresholdModal'\nimport AddOwnerModal from './AddOwnerModal'\nimport RemoveOwnerModal from './RemoveOwnerModal'\nimport SwapOwnerModal from './SwapOwnerModal'\nimport Modal from '../../../components/Modal'\nimport deleteIcon from '../../../images/delete.svg'\nimport swapIcon from '../../../images/swap.svg'\nimport editIcon from '../../../images/edit.svg'\n\ninterface Interface {\n  safe: Safe\n  handleError: (err: Error) => void\n  addTransaction: (transaction: SafeTransaction) => void\n}\n\nconst PolicyComponent: React.FC<Interface> = ({ safe, addTransaction, handleError }) => {\n  // Safe variables:\n  const [owners, setOwners] = useState<string[]>([])\n  const [threshold, setThreshold] = useState<number>(0)\n\n  // UI components:\n  const [addNewOwner, setAddNewOwner] = useState<boolean>(false)\n  const [changeThreshold, setChangeThreshold] = useState<boolean>(false)\n  const [removeOwner, setRemoveOwner] = useState<null | string>(null)\n  const [swapOwner, setSwapOwner] = useState<null | string>(null)\n\n  useEffect(() => {\n    safe.getOwners().then((owners: string[]) => setOwners(owners))\n    safe.getThreshold().then((result: number) => setThreshold(result))\n  }, [safe])\n\n  // Create transaction for changing the thresold:\n  const changeThresholdFunction = (newThreshold: number) =>\n    safe.getChangeThresholdTx(newThreshold)\n      .then((transaction: SafeTransaction) => {\n        addTransaction(transaction)\n        afterTransaction()\n      })\n      .catch(handleError)\n\n  // Add an owner and update threshold:\n  const addOwnerFunction = (newOwner: string, newThreshold: number) =>\n    safe.getAddOwnerTx(newOwner, newThreshold)\n      .then((transaction: SafeTransaction) => {\n        addTransaction(transaction)\n        afterTransaction()\n      })\n      .catch(handleError)\n\n  // remove an owner and update the threshold:\n  const removeOwnerFunction = (removeOwner: string, newThreshold: number) =>\n    safe.getRemoveOwnerTx(removeOwner, newThreshold)\n      .then((transaction: SafeTransaction) => {\n        addTransaction(transaction)\n        afterTransaction()\n      })\n      .catch(handleError)\n\n  // swap one owner for another:\n  const swapOwnerFunction = (swapOwner: string, newOwner: string) =>\n    safe.getSwapOwnerTx(swapOwner, newOwner)\n      .then((transaction: SafeTransaction) => {\n        addTransaction(transaction)\n        afterTransaction()\n      })\n      .catch(handleError)\n\n  // close ALL modals\n  const afterTransaction = () => {\n    setAddNewOwner(false)\n    setChangeThreshold(false)\n    setRemoveOwner(null)\n    setSwapOwner(null)\n  }\n\n  return (\n    <section className=\"section panel\">\n      <h2>Safe Policy</h2>\n      <table>\n        <tbody>\n          <tr>\n            <th>Owners</th>\n            <td>\n              <ul>\n                {owners.map((owner: string) => (\n                  <li key={owner} >\n                    <ValueWithButtons value={owner} />\n                    <button className=\"icon delete\" onClick={() => setRemoveOwner(owner)}>\n                      <img src={deleteIcon} alt=\"delete address\" />\n                    </button>\n                    <button className=\"icon\" onClick={() => setSwapOwner(owner)}>\n                      <img src={swapIcon} alt=\"swap address\" />\n                    </button>\n                  </li>\n                ))}\n              </ul>\n              <button onClick={() => setAddNewOwner(true)}>+ Add Owner</button>\n            </td>\n          </tr>\n          <tr className=\"text\">\n            <th>Threshold</th>\n            <td>\n              {threshold}\n              <button className=\"icon\" onClick={() => setChangeThreshold(true)}>\n                <img src={editIcon} alt=\"edit threshold\" />\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      {changeThreshold && <Modal handleClose={() => setChangeThreshold(false)}><ChangeThresholdModal numberOfOwners={owners.length} currentThreshold={threshold} handleSubmit={changeThresholdFunction} /></Modal>}\n      {addNewOwner && <Modal handleClose={() => setAddNewOwner(false)}><AddOwnerModal numberOfOwners={owners.length} handleSubmit={addOwnerFunction} handleError={handleError} /></Modal>}\n      {removeOwner && <Modal handleClose={() => setRemoveOwner(null)}><RemoveOwnerModal removeAddress={removeOwner} numberOfOwners={owners.length} handleSubmit={removeOwnerFunction} /></Modal>}\n      {swapOwner && <Modal handleClose={() => setSwapOwner(null)}><SwapOwnerModal oldAddress={swapOwner} handleSubmit={swapOwnerFunction} handleError={handleError} /></Modal>}\n    </section>\n  )\n}\n\nexport default PolicyComponent\n","import { isAddress } from '@ethersproject/address'\nimport React, { useState } from 'react'\n\ninterface Interface {\n  createTransaction: (recipient: string, amount: number, data: string) => void\n  handleError: (error: Error | null) => void\n}\n\nconst TransferValueModal: React.FC<Interface> = ({ createTransaction, handleError }) => {\n  const [transaction, setTransaction] = useState<{amount: number, address: string, data: string}>({ amount: 10000, address: '', data: '' })\n\n  const validateTransaction = () => {\n    handleError(null)\n\n    if (!isAddress(transaction.address)) {\n      return handleError(new Error('Recipient is not an address.'))\n    }\n\n    const formattedData = transaction.data === '' ? '0x' : transaction.data\n    createTransaction(\n      transaction.address.toLowerCase(),\n      transaction.amount,\n      formattedData\n    )\n  }\n\n  return (\n    <>\n      <h3>Create Transaction</h3>\n      <p>\n        <label>Recepient address:</label>\n        <input type=\"text\" className=\"to\" value={transaction.address} onChange={evt => setTransaction({ ...transaction, address: evt.target.value })} />\n      </p>\n      <p>\n        <label>Amount:</label>\n        <input type=\"number\" className=\"amount\" value={transaction.amount} onChange={evt => setTransaction({ ...transaction, amount: parseInt(evt.target.value) })} />\n      </p>\n      <p>\n        <label>\n          Data: (optional field used for advanced transactions)\n        </label>\n        <textarea className=\"data\" value={transaction.data} onChange={evt => setTransaction({ ...transaction, data: evt.target.value })} />\n      </p>\n      <button className=\"submit\" onClick={validateTransaction}>Create Transaction</button>\n    </>\n  )\n}\n\nexport default TransferValueModal\n","import { isAddress } from '@ethersproject/address'\nimport React, { useState } from 'react'\nimport { Erc20Token } from '.'\n\ninterface Interface {\n  token: Erc20Token\n  handleError: (err: Error | null) => void\n  createTransaction: (token: Erc20Token, amount: number, to: string) => void\n}\n\nconst TransferTokenModal: React.FC<Interface> = ({ token, createTransaction, handleError }) => {\n  const [transaction, setTransaction] = useState<{amount: number, address: string}>({ amount: 0, address: '' })\n\n  const validateTransaction = () => {\n    handleError(null)\n\n    if (!isAddress(transaction.address)) {\n      return handleError(new Error('Recipient is not an address.'))\n    }\n\n    if (transaction.amount > token.amount || transaction.amount < 1) {\n      return handleError(new Error(`Amount should be between 1 and ${token.amount}.`))\n    }\n\n    return createTransaction(token, transaction.amount, transaction.address.toLowerCase())\n  }\n\n  return (\n    <div>\n      <h2>Transfer ERC20 Token: {token.symbol}</h2>\n      <p>\n        <label>You have:</label>\n        <span className=\"readonly\">{token.amount}</span>\n      </p>\n      <p>\n        <label>Amount to sent:</label>\n        <input type=\"number\" className=\"amount\" value={transaction.amount} onChange={evt => setTransaction({ ...transaction, amount: parseInt(evt.target.value) })} />\n      </p>\n      <p>\n        <label>Recipient address:</label>\n        <input type=\"string\" className=\"recipient\" value={transaction.address} onChange={evt => setTransaction({ ...transaction, address: evt.target.value })} />\n      </p>\n      <p>\n        <button className=\"submit\" onClick={validateTransaction}>\n          Create Transaction\n        </button>\n      </p>\n    </div>\n  )\n}\n\nexport default TransferTokenModal\n","import { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport { ERC20TransactionBuilder } from '@rsksmart/safe-transactions-sdk'\nimport { BigNumber, Contract } from 'ethers'\nimport React, { useEffect, useState } from 'react'\nimport Modal from '../../../components/Modal'\nimport TransferValueModal from './TransferValueModal'\nimport erc20Abi from './erc20.json'\nimport refreshIcon from '../../../images/refresh.svg'\nimport TransferTokenModal from './TransferTokenModal'\nimport { getContracts } from '../../../config'\n\ninterface Interface {\n  safe: Safe\n  handleError: (err: Error | null) => void\n  addTransaction: (transaction: SafeTransaction) => void\n}\n\nexport interface Erc20Token {\n  symbol: string\n  decimals: number\n  amount: number\n  contractAddress: string\n}\n\nconst AssetsComponent: React.FC<Interface> = ({ safe, addTransaction, handleError }) => {\n  const [showTransfer, setShowTransfer] = useState<boolean>(false)\n  const [showTokenTransfer, setShowTokenTransfer] = useState<Erc20Token | null>(null)\n\n  const [balance, setBalance] = useState<string>('0')\n  const [tokens, setTokens] = useState<any[]>([])\n\n  useEffect(() => {\n    getSafeBalance()\n\n    safe.getChainId().then((chainId: number) =>\n      getERC2Balance({ symbol: 'tRIF', decimals: 18, amount: 0, contractAddress: getContracts(chainId).rifToken }))\n  }, [safe])\n\n  const getSafeBalance = () => safe.getBalance().then((balance: BigNumber) => setBalance(balance.toString()))\n\n  const getERC2Balance = (token: Erc20Token) => {\n    const signer = safe.getSigner()\n    const contract = new Contract(token.contractAddress, erc20Abi, signer)\n    contract.balanceOf(safe.getAddress())\n      .then((result: BigNumber) => result.toString())\n      .then((result: string) => {\n        const updateToken = { ...token, amount: parseInt(result) / Math.pow(10, 18) }\n        const isListed = tokens.find((findToken: Erc20Token) => findToken.symbol === token.symbol)\n\n        const newTokenList = isListed\n          ? tokens.map((findToken: Erc20Token) => findToken.symbol === token.symbol ? updateToken : findToken)\n          : [...tokens, updateToken]\n\n        setTokens(newTokenList)\n      })\n      .catch((err: Error) => console.log('error', err))\n  }\n\n  // Create transaction to send rbtc or data\n  const createTransaction = (to: string, amount: number, data: string) => {\n    handleError(null)\n    safe.createTransaction({\n      to,\n      value: amount.toString(),\n      data\n    })\n      .then((transaction: SafeTransaction) => addTransaction(transaction))\n      .catch(handleError)\n      .finally(() => setShowTransfer(false))\n  }\n\n  // Create transaction to send an ERC20 token:\n  const createTokenTransaction = (token: Erc20Token, amount: number, to: string) => {\n    handleError(null)\n\n    ERC20TransactionBuilder.create(safe, token.contractAddress).then((txBuilder: ERC20TransactionBuilder) => {\n      const bigAmount = BigNumber.from(amount).mul(BigNumber.from(10).pow(token.decimals))\n\n      txBuilder.transfer(to, bigAmount)\n        .then((transaction: SafeTransaction) => addTransaction(transaction))\n        .catch(handleError)\n        .finally(() => setShowTokenTransfer(null))\n    })\n  }\n\n  return (\n    <>\n      <div className=\"panel\">\n        <h2>Assets</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Asset</th>\n              <th>Amount</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td><p>rBTC</p></td>\n              <td>\n                <p>\n                  {(parseInt(balance) / 1000000000000000000).toString()}\n                  <button className=\"icon\" onClick={getSafeBalance}>\n                    <img src={refreshIcon} alt=\"refresh balance\" />\n                  </button>\n                  <button className=\"icon\" onClick={() => setShowTransfer(true)}>transfer</button>\n                </p>\n              </td>\n            </tr>\n            {tokens.map((token: any) => (\n              <tr key={token.contractAddress}>\n                <td><p>{token.symbol}</p></td>\n                <td>\n                  {token.amount}\n                  <button className=\"icon\" onClick={() => getERC2Balance(token)}>\n                    <img src={refreshIcon} alt=\"refresh balance\" />\n                  </button>\n                  <button className=\"icon\" onClick={() => setShowTokenTransfer(token)}>\n                    transfer\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      {showTransfer && (\n        <Modal handleClose={() => setShowTransfer(false)}>\n          <TransferValueModal\n            createTransaction={createTransaction}\n            handleError={handleError}\n          />\n        </Modal>\n      )}\n      {showTokenTransfer && (\n        <Modal handleClose={() => setShowTokenTransfer(null)}>\n          <TransferTokenModal\n            token={showTokenTransfer}\n            handleError={handleError}\n            createTransaction={createTokenTransaction}\n          />\n        </Modal>\n      )}\n    </>\n  )\n}\n\nexport default AssetsComponent\n","import React from 'react'\nimport Modal from './Modal'\n\ninterface Interface {\n  closeModal: () => void\n  changeScreen: () => void\n}\n\nconst TransactionCreatedModal: React.FC<Interface> = ({ closeModal, changeScreen }) => {\n  return (\n    <Modal handleClose={closeModal}>\n      <h2>Transaction Created</h2>\n      <p>A transaction has been created and added to the transaction panel. You can sign the transaction there, and when enough signatures are collected, execute it.</p>\n      <p>\n        <button onClick={changeScreen}>View Transactions</button>\n      </p>\n    </Modal>\n  )\n}\n\nexport default TransactionCreatedModal\n","import React, { useState, useEffect } from 'react'\nimport { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport Navigation from './Navigation'\nimport TransactionsPanel from './transactions'\nimport Dashboard from './Dashboard'\nimport PolicyComponent from './policies'\nimport AssetsComponent from './assets'\nimport TransactionCreatedModal from '../../components/TransactionCreatedModal'\nimport { Screens, TransactionStatus } from '../../constants'\nimport { createOrUpdateTransaction, getTransactions } from '../../helpers/safeServiceClient'\nimport { SafeMultisigConfirmationResponse } from '../../helpers/missingTypes'\n\ninterface Interface {\n  safe: Safe\n  walletAddress: string\n  handleLogout: () => void\n  handleError: (err: Error | null) => void\n}\n\n// Wrapper for transaction to keep track of the status, and hash to be used as an identifier\nexport interface TransactionBundle {\n  transaction: SafeTransaction\n  hash: string\n  status: TransactionStatus\n  isReject: boolean\n  confirmations?: SafeMultisigConfirmationResponse[]\n}\n\nconst SafeInteraction: React.FC<Interface> = ({ safe, walletAddress, handleError, handleLogout }) => {\n  // UI Only\n  const [selectedTab, setSelectedTab] = useState<Screens>(Screens.DASHBOARD)\n  const [showTransactionInfo, setShowTransactionInfo] = useState<boolean>(false)\n  const changeActive = (screen: Screens) => setSelectedTab(screen)\n\n  // Keep track of the Apps transaction nonce, starting with the safe's nonce\n  const [appNonce, setAppNonce] = useState(0)\n\n  useEffect(() => {\n    safe.getNonce().then((nonce: number) => {\n      setAppNonce(nonce)\n\n      // get transactions from the service\n      getTransactions(safe, nonce)\n        .then((bundles: TransactionBundle[]) => {\n          setTransactions(bundles)\n          // update the app's nonce\n          bundles.length !== 0 &&\n            setAppNonce(bundles[bundles.length - 1].transaction.data.nonce + 1)\n        })\n        .catch(handleError)\n    })\n  }, [safe])\n\n  // Transaction Management, all transactions:\n  const [transactions, setTransactions] = useState<TransactionBundle[]>([])\n\n  const sortAndSetTransactions = (transactions: TransactionBundle[]) => {\n    const nonceSorted = transactions.sort((a: TransactionBundle, b: TransactionBundle) => (a.transaction.data.nonce - b.transaction.data.nonce))\n    setTransactions(nonceSorted)\n  }\n\n  // Add a new PENDING transaction to the list\n  const addTransaction = (incomingTransaction: SafeTransaction, isReject?: boolean) => {\n    // set the correct nonce if there are pending transactions:\n    const transaction = !isReject\n      ? new SafeTransaction({ ...incomingTransaction.data, nonce: appNonce })\n      : incomingTransaction\n\n    // get the hash to be used as an identifier\n    safe.getTransactionHash(transaction)\n      .then((hash: string) => {\n        const incomingTxBundle = { status: TransactionStatus.PENDING, transaction, hash, isReject: isReject || false }\n        // store the new transaction locally\n        createOrUpdateTransaction(incomingTxBundle, safe).then(() => {\n          // create new transaction list\n          const newTransactionList = [...transactions, incomingTxBundle]\n\n          // set the sorted transactions\n          sortAndSetTransactions(newTransactionList)\n          setShowTransactionInfo(true)\n\n          // increase the app's nonce by 1 if it isn't a reject transaction\n          !isReject && setAppNonce(appNonce + 1)\n        })\n      })\n  }\n\n  // update a transaction bundle\n  const updateTransactionBundle = (transactionBundle: TransactionBundle) => {\n    let list = transactions.map((bundle: TransactionBundle) =>\n      bundle.hash === transactionBundle.hash ? transactionBundle : bundle)\n\n    // if the status is EXECUTED, then also update other transactions with the same nonce to REJECTED:\n    if (transactionBundle.status === TransactionStatus.EXECUTED) {\n      list = list.map((bundle: TransactionBundle) =>\n        (bundle.transaction.data.nonce === transactionBundle.transaction.data.nonce &&\n          bundle.status === TransactionStatus.PENDING)\n          ? { ...bundle, status: TransactionStatus.REJECTED }\n          : bundle\n      )\n    }\n\n    setTransactions(list)\n  }\n\n  const closeModalAndSwitchScreen = () => {\n    setShowTransactionInfo(false)\n    setSelectedTab(Screens.TRANSACTIONS)\n  }\n\n  return (\n    <section className=\"selectedSafe\">\n      <Navigation handleLogout={handleLogout} changeActive={changeActive} selected={selectedTab} />\n      {selectedTab === Screens.DASHBOARD && <Dashboard safe={safe} />}\n      {selectedTab === Screens.TRANSACTIONS && (\n        <TransactionsPanel\n          safe={safe}\n          transactions={transactions}\n          handleError={handleError}\n          addTransaction={addTransaction}\n          updateTransactionBundle={updateTransactionBundle}\n          walletAddress={walletAddress} />\n      )}\n      {selectedTab === Screens.ASSETS && <AssetsComponent safe={safe} handleError={handleError} addTransaction={addTransaction} />}\n      {selectedTab === Screens.POLICY && <PolicyComponent safe={safe} addTransaction={addTransaction} handleError={handleError} />}\n\n      {showTransactionInfo && <TransactionCreatedModal closeModal={() => setShowTransactionInfo(false)} changeScreen={closeModalAndSwitchScreen} />}\n    </section>\n  )\n}\n\nexport default SafeInteraction\n","import React, { useState } from 'react'\nimport { isAddress } from '@ethersproject/address'\n\ninterface Interface {\n  connectAddress: string | null\n  handleError: (error: Error) => void\n  createSafe: (addresses: string[], threshold: number) => void\n}\n\nconst CreateSafeComponent: React.FC<Interface> = ({ connectAddress, createSafe, handleError }) => {\n  const [addresses, setAddresses] = useState<string[]>([connectAddress ? connectAddress.toLowerCase() : ''])\n  const [threshold, setThreshold] = useState<number>(1)\n\n  const changeAddressValue = (evt: any) => {\n    const changeIndex = parseInt(evt.target.id.replace('address', ''))\n    const updateList = addresses.map((item: string, index: number) => index === changeIndex ? evt.target.value.toLowerCase() : item)\n    setAddresses(updateList)\n  }\n\n  const removeAddress = (changeIndex: number) => {\n    const updateList = addresses.filter((_item: string, index: number) => index !== changeIndex)\n    setAddresses(updateList)\n  }\n\n  const validateSafeSettings = () => {\n    const errorList: number[] = []\n    addresses.forEach((address: string, index: number) => {\n      if (!isAddress(address)) {\n        errorList.push(index + 1)\n      }\n    })\n\n    if (errorList.length !== 0) {\n      handleError(new Error(`Incorrect Addresses for: ${errorList.toString()}`))\n      return false\n    }\n\n    createSafe(addresses, threshold)\n  }\n\n  const loopOptions = (length: number) => {\n    const items = []\n    for (let index = 0; index < length; index++) {\n      items.push(<option key={index} value={index + 1}>{index + 1}</option>)\n    }\n    return items\n  }\n\n  return (\n    <div>\n      <h4>Create a new safe</h4>\n      <p>\n        A safe can have any number of owners associated with it. Your connected address has been added as the first account.<br/>\n        Click the <em>Add address</em> button to add additional addresses, and the <em>delete button</em> to remove addresses.\n      </p>\n\n      <ul>\n        {addresses.map((address: string, index: number) => (\n          <li key={index}>\n            <label>Address {index + 1}: </label>\n            <input type=\"text\"\n              id={`address${index}`}\n              value={address}\n              onChange={changeAddressValue}\n              className={`address${index}`}\n            />\n            <button className={`removeAddress${index}`} onClick={() => removeAddress(index)}>delete</button>\n          </li>\n        ))}\n      </ul>\n      <button className=\"addAddress\" onClick={() => setAddresses([...addresses, ''])}>Add address</button>\n\n      <p>Transactions require the confirmation of at least{' '}\n        <select className=\"threshold\" value={threshold.toString()} onChange={evt => setThreshold(parseInt(evt.target.value))}>\n          {loopOptions(addresses.length)}\n        </select>\n        signatures.\n      </p>\n      <button className=\"submit\" disabled={addresses.length === 0} onClick={validateSafeSettings}>Create Safe</button>\n    </div>\n  )\n}\n\nexport default CreateSafeComponent\n","import React, { useState } from 'react'\n\ninterface Interface {\n  connectToSafe: (safeAddress: string) => void\n  pastSafes: string[]\n}\n\nconst ConnectToSafeComponent: React.FC<Interface> = ({ connectToSafe, pastSafes }) => {\n  const [safeAddress, setSafeAddress] = useState<string>('')\n\n  return (\n    <div>\n      <h3>Connect to an existing safe</h3>\n      <label>Safe address</label>\n      <input className=\"safeAddress\" type=\"text\" value={safeAddress} onChange={evt => setSafeAddress(evt.target.value)} />\n      <button className=\"connect\" onClick={() => connectToSafe(safeAddress)}>Connect</button>\n\n      {pastSafes && pastSafes.length !== 0 && (\n        <>\n          <h4>Past Safes:</h4>\n          <ul>\n            {pastSafes.map((address: string) => (\n              <li key={address}>\n                <button\n                  className=\"icon\"\n                  onClick={() => connectToSafe(address)}>{address}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default ConnectToSafeComponent\n","import { getParsedItem, LocalStorageKeys, setJsonKey } from './utils'\n\nconst getSafeAddressKey = (chainId: number) =>\n  `${LocalStorageKeys.SAFES}_${chainId.toString()}`\n\nexport const getSafeAddresses = (chainId: number) => {\n  return getParsedItem<string>(getSafeAddressKey(chainId)) || []\n}\n\nexport const saveSafeAddressToLocalStorage = (\n  safeAddress: string,\n  chainId: number\n) => {\n  const safeAddressKey = getSafeAddressKey(chainId)\n  const safes = getSafeAddresses(chainId)\n  if (!safes) {\n    return setJsonKey(safeAddressKey, [safeAddress.toLowerCase()])\n  }\n\n  return !safes.includes(safeAddress.toLowerCase())\n    ? setJsonKey(safeAddressKey, [...safes, safeAddress.toLowerCase()])\n    : null\n}\n","import React, { useState, useEffect } from 'react'\nimport EthersSafe, { Safe } from '@gnosis.pm/safe-core-sdk'\nimport { EthersSafeFactory } from '@rsksmart/safe-factory-sdk'\nimport { ethers } from 'ethers'\n\nimport CreateSafeComponent from './CreateSafeComponent'\nimport ConnectToSafeComponent from './ConnectToSafeComponent'\nimport { getContracts } from '../../config'\nimport LoadingComponent from '../../components/LoadingComponent'\nimport { getSafeAddresses } from '../../helpers/localStorage'\n\ninterface Interface {\n  web3Provider: any\n  chainId: number\n  handleSetSafe: (safe: Safe | EthersSafe) => any\n  handleError: (error: Error) => void\n  address: string | null\n}\n\nconst ChooseSafe: React.FC<Interface> = ({ web3Provider, chainId, handleSetSafe, handleError, address }) => {\n  // UI variables\n  const [isCreate, setIsCreate] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [pastSafes, setPastSafes] = useState<string[]>([])\n\n  useEffect(() => { setPastSafes(getSafeAddresses(chainId)) }, [])\n\n  // Create a new safe:\n  const createSafe = (addresses: string[], threshold: number) => {\n    setIsLoading(true)\n\n    const contracts = getContracts(chainId)\n    const provider = new ethers.providers.Web3Provider(web3Provider)\n\n    const signer = provider.getSigner()\n\n    const safeFactory = new EthersSafeFactory(\n      signer,\n      contracts.proxyFactoryAddress.toLowerCase(),\n      contracts.safeSingletonAddress.toLowerCase()\n    )\n\n    safeFactory.createSafe({ owners: addresses, threshold })\n      .then(handleSetSafe)\n      .catch(handleError)\n      .finally(() => setIsLoading(false))\n  }\n\n  // Connect to an existing safe:\n  const connectToSafe = (safeAddress: string) => {\n    setIsLoading(true)\n\n    const provider = new ethers.providers.Web3Provider(web3Provider)\n    const signer = provider.getSigner()\n\n    EthersSafe.create(ethers, safeAddress.toLowerCase(), signer)\n      .then(handleSetSafe)\n      .catch(handleError)\n      .finally(() => setIsLoading(false))\n  }\n\n  return isLoading ? <LoadingComponent />\n    : (\n      <section className=\"connect panel\">\n        <h2>\n        Create a safe, or connect to an existing one\n          <button onClick={() => setIsCreate(!isCreate)}>\n            {isCreate ? 'Connect to Safe' : 'Create Safe'}\n          </button>\n        </h2>\n        {isCreate ? (\n          <CreateSafeComponent\n            createSafe={createSafe}\n            handleError={handleError}\n            connectAddress={address}\n          />\n        ) : (\n          <ConnectToSafeComponent\n            pastSafes={pastSafes}\n            connectToSafe={connectToSafe}\n          />\n        )}\n      </section>\n    )\n}\n\nexport default ChooseSafe\n","import React from 'react'\nimport { version } from '../../package.json'\n\nconst FooterComponent: React.FC = () => {\n  return (\n    <section className=\"footer\">\n      <p>This is a sample app and should not be used with real funds.</p>\n      <p>Copyright © 2021 IOV Labs. All rights reserved.</p>\n      <p>Version: {version}</p>\n    </section>\n  )\n}\n\nexport default FooterComponent\n","import React, { useState } from 'react'\nimport RLogin from '@rsksmart/rlogin'\nimport { Safe } from '@gnosis.pm/safe-core-sdk'\n\nimport './styles/App.scss'\nimport Web3Provider from './pages/start/ConnectWalletComponent'\nimport ConnectedBar from './components/ConnectedBar'\nimport SafeInteraction from './pages/safeInteraction'\nimport ChooseSafe from './pages/connectToSafe'\nimport FooterComponent from './components/FooterComponent'\nimport { saveSafeAddressToLocalStorage } from './helpers/localStorage'\n\nconst rLogin = new RLogin({\n  cacheProvider: false,\n  supportedChains: [4, 31, 1337]\n})\n\nfunction App () {\n  const [error, setError] = useState<null | string>('')\n\n  // Web3Provider and Safe variables\n  const [rLoginResponse, setRLoginResponse] = useState<{ provider: any, disconnect: any } | null>(null)\n  const [safe, setSafe] = useState<Safe | null>(null)\n\n  // provider variables\n  const [address, setAddress] = useState<string | null>(null)\n  const [chainId, setChainId] = useState<number | null>(null)\n\n  const web3ProviderResponse = (response: any, address: string, chainId: number) => {\n    setRLoginResponse(response)\n    setAddress(address)\n    setChainId(chainId)\n\n    // listen for address change and update:\n    response.provider.on('accountsChanged', (accounts: string[]) => setAddress(accounts[0]))\n  }\n\n  const handleSetSafe = (safe: Safe) => {\n    setSafe(safe)\n    handleError(null)\n    chainId && saveSafeAddressToLocalStorage(safe.getAddress(), chainId)\n  }\n\n  const handleError = (error: Error | null) => error ? setError(error.message) : setError(null)\n\n  const handleLogout = () => {\n    rLoginResponse?.disconnect()\n    setRLoginResponse(null)\n    setSafe(null)\n    setError(null)\n    setAddress(null)\n    setChainId(null)\n  }\n\n  return (\n    <div className={rLoginResponse ? 'App' : 'App signin'}>\n      {!rLoginResponse ? (\n        <Web3Provider\n          rLogin={rLogin}\n          setRLoginResponse={web3ProviderResponse}\n          handleError={handleError}\n        />\n      ) : <ConnectedBar chainId={chainId} walletAddress={address} />\n      }\n\n      {error && (\n        <section className=\"error\">\n          <p>{error}</p>\n          <button onClick={() => handleError(null)}>x</button>\n        </section>\n      )}\n\n      {rLoginResponse && chainId && !safe && (\n        <ChooseSafe\n          web3Provider={rLoginResponse.provider}\n          chainId={chainId}\n          handleSetSafe={handleSetSafe}\n          handleError={handleError}\n          address={address}\n        />\n      )}\n\n      {rLoginResponse && address && safe && (\n        <SafeInteraction\n          safe={safe}\n          walletAddress={address}\n          handleLogout={handleLogout}\n          handleError={handleError}\n        />\n      )}\n\n      {rLoginResponse && <FooterComponent />}\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}