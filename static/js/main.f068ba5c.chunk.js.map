{"version":3,"sources":["images/rif-safe.svg","images/powered-by-iov.svg","pages/start/ConnectWalletComponent.tsx","images/rif-safe-header.svg","components/ConnectedBar.tsx","pages/safeInteraction/Navigation.tsx","helpers/executeTransaction.ts","helpers/transactionListener.ts","components/Modal.tsx","components/ViewExplorerButton.tsx","pages/safeInteraction/transactions/ApprovedModal.tsx","pages/safeInteraction/transactions/ExecutedModal.tsx","components/CopyValueButton.tsx","components/ValueWithButtons.tsx","images/refresh.svg","pages/safeInteraction/transactions/TransactionDetailComponent.tsx","pages/safeInteraction/transactions/index.tsx","pages/safeInteraction/Dashboard.tsx","components/ThresholdDropdown.tsx","pages/safeInteraction/policies/ChangeThresholdModal.tsx","pages/safeInteraction/policies/AddOwnerModal.tsx","pages/safeInteraction/policies/RemoveOwnerModal.tsx","pages/safeInteraction/policies/SwapOwnerModal.tsx","images/delete.svg","images/swap.svg","images/edit.svg","pages/safeInteraction/policies/index.tsx","pages/safeInteraction/assets/TransferValueModal.tsx","pages/safeInteraction/assets/TransferTokenModal.tsx","config/index.ts","pages/safeInteraction/assets/index.tsx","components/TransactionCreatedModal.tsx","pages/safeInteraction/index.tsx","pages/connectToSafe/CreateSafeComponent.tsx","pages/connectToSafe/ConnectToSafeComponent.tsx","pages/connectToSafe/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Web3Provider","rLogin","setRLoginResponse","handleError","className","src","rifSafeLogo","alt","onClick","connect","then","rLoginResponse","Promise","all","provider","request","method","response","parseInt","catch","poweredByLogo","ConnectedBar","walletAddress","chainId","slice","length","id","chainIdtoString","Navigation","changeActive","handleLogout","selected","estimateGasForTransactionExecution","contract","from","tx","a","estimateGas","execTransaction","data","to","value","operation","safeTxGas","baseGas","gasPrice","gasToken","refundReceiver","encodedSignatures","gas","toNumber","reject","generatePreValidatedSignature","ownerAddress","signature","EthSignSignature","executeRskTransaction","safe","safeTransaction","signer","getSigner","getAddress","signerAddress","Error","safeContract","Contract","safeAbi","getTransactionHash","txHash","getOwnersWhoApprovedTx","ownersWhoApprovedTx","owner","addSignature","getThreshold","threshold","signatures","size","signaturesMissing","toLowerCase","gasLimit","txResponse","transactionListener","web3Provider","resolve","checkInterval","setInterval","getTransactionReceipt","clearInterval","status","err","Modal","handleClose","children","ViewExplorerButton","address","url","href","target","rel","xmlns","width","height","viewBox","fill","fillRule","d","ApprovedModal","hash","type","defaultValue","ExecutedModal","CopyButton","copyTextField","useRef","current","select","document","execCommand","ref","style","position","left","ValueWithButtons","CopyValueButton","TransactionDetailComponent","transactionBundle","approveTransactionHash","executeTransaction","transaction","useState","showDetails","setShowDetails","setSignatures","setThreshold","isRefreshing","setIsRefreshing","formatted","setFormatted","useEffect","getApprovals","InputDataDecoder","decodeData","erc20Abi","safeThreshold","signers","finally","walletHasSigned","filter","canExecute","refreshIcon","disabled","nonce","JSON","stringify","map","approval","TransactionsPanel","updateTransactionStatus","transactions","showApprovedModal","setShowApprovedModal","showExecutedModal","setShowExecutedModal","pendingTransactions","executedTransactions","bundle","push","result","getProvider","receipt","transactionHash","index","Dashboard","balance","setBalance","getBalance","toString","ThresholdDropdown","onChange","numberOfOwners","options","evt","number","ChangeThresholdModal","currentThreshold","handleSubmit","newThreshold","setNewThreshold","AddOwnerModal","newOwner","setNewOwner","isAddress","RemoveOwnerModal","removeAddress","SwapOwnerModal","oldAddress","PolicyComponent","addTransaction","owners","setOwners","addNewOwner","setAddNewOwner","changeThreshold","setChangeThreshold","removeOwner","setRemoveOwner","swapOwner","setSwapOwner","getOwners","afterTransaction","deleteIcon","swapIcon","editIcon","getChangeThresholdTx","getAddOwnerTx","getRemoveOwnerTx","getSwapOwnerTx","TransferValueModal","createTransaction","recipient","setRecipient","amount","setAmount","TransferTokenModal","token","setTransaction","symbol","getContracts","testnet","local","AssetsComponent","showTransfer","setShowTransfer","showTokenTransfer","setShowTokenTransfer","tokens","setTokens","getSafeBalance","getChainId","getERC2Balance","decimals","contractAddress","rifToken","balanceOf","updateToken","Math","pow","newTokenList","find","findToken","console","log","txBuilder","ERC20TransactionBuilder","bigAmount","BigNumber","mul","transfer","TransactionCreatedModal","closeModal","changeScreen","SafeInteraction","selectedTab","setSelectedTab","showTransactionInfo","setShowTransactionInfo","setTransactions","currentTarget","newTransactionList","item","CreateSafeComponent","connectAddress","createSafe","addresses","setAddresses","changeAddressValue","changeIndex","replace","updateList","_item","items","loopOptions","errorList","forEach","ConnectToSafeComponent","connectToSafe","safeAddress","setSafeAddress","ChooseSafe","handleSetSafe","isCreate","setIsCreate","isLoading","setIsLoading","textAlign","contracts","ethers","providers","EthersSafeFactory","proxyFactoryAddress","safeSingletonAddress","EthersSafe","create","RLogin","cacheProvider","supportedChains","App","error","setError","setSafe","setAddress","setChainId","message","clearError","on","accounts","disconnect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"g6BAAe,G,OAAA,IAA0B,sCCA1B,MAA0B,2CCmC1BA,EAxB2B,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,kBAAmBC,EAAkB,EAAlBA,YAatE,OACE,0BAASC,UAAU,QAAnB,UACE,qBAAKC,IAAKC,EAAaC,IAAI,aAC3B,wDACA,4BAAG,cAAC,eAAD,CAAcC,QAhBD,kBAClBP,EAAOQ,UACJC,MAAK,SAACC,GACLC,QAAQC,IAAI,CACVF,EAAeG,SAASC,QAAQ,CAAEC,OAAQ,iBAC1CL,EAAeG,SAASC,QAAQ,CAAEC,OAAQ,kBACzCN,MAAK,SAACO,GACPf,EAAkBS,EAAgBM,EAAS,GAAG,GAAIC,SAASD,EAAS,WAGvEE,MAAMhB,IAMJ,oCACH,qBAAKE,IAAKe,EAAeb,IAAI,wBAC7B,mBAAGH,UAAU,QAAb,oEC9BS,MAA0B,4CC+B1BiB,EAvB2B,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,QAQ1D,OACE,yBAASnB,UAAU,SAAnB,SACE,qBAAIA,UAAU,SAAd,UACE,6BAAI,qBAAKC,IAAKC,EAAaC,IAAI,eAC9Be,GACC,oBAAIlB,UAAU,UAAd,mBACMkB,EAAcE,MAAM,EAAG,GAD7B,cACqCF,EAAcE,MAAMF,EAAcG,OAAS,MAGlF,oBAAIrB,UAAU,UAAd,SAAwB,+BAAOmB,GAhBb,SAACG,GACvB,OAAQA,GACN,KAAK,GAAI,MAAO,cAChB,KAAK,GAAI,MAAO,cAChB,QAAS,MAAO,SAY4BC,CAAgBJ,a,gBCLnDK,EAZyB,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SACrE,OACE,qBAAI3B,UAAU,aAAd,UACE,6BAAI,wBAAQsB,GAAG,YAAYtB,UAAwB,cAAb2B,EAA2B,WAAa,GAAIvB,QAASqB,EAAvF,yBACJ,6BAAI,wBAAQH,GAAG,eAAetB,UAAwB,iBAAb2B,EAA8B,WAAa,GAAIvB,QAASqB,EAA7F,4BACJ,6BAAI,wBAAQH,GAAG,SAAStB,UAAwB,WAAb2B,EAAwB,WAAa,GAAIvB,QAASqB,EAAjF,sBACJ,6BAAI,wBAAQH,GAAG,SAAStB,UAAwB,WAAb2B,EAAwB,WAAa,GAAIvB,QAASqB,EAAjF,wBACJ,oBAAIzB,UAAU,SAAd,SAAuB,wBAAQI,QAASsB,EAAjB,qC,oECRdE,E,kFAAf,WACEC,EACAC,EACAC,GAHF,eAAAC,EAAA,+EAMsBH,EAASI,YAAYC,gBACrCH,EAAGI,KAAKC,GACRL,EAAGI,KAAKE,MACRN,EAAGI,KAAKA,KACRJ,EAAGI,KAAKG,UACRP,EAAGI,KAAKI,UACRR,EAAGI,KAAKK,QACRT,EAAGI,KAAKM,SACRV,EAAGI,KAAKO,SACRX,EAAGI,KAAKQ,eACRZ,EAAGa,oBACH,CAAEd,OAAMW,SAAUV,EAAGI,KAAKM,WAjBhC,cAMUI,EANV,yBAoBWA,EAAIC,YApBf,yDAsBWtC,QAAQuC,OAAR,OAtBX,0D,sBA4BA,IAAMC,EAAgC,SAACC,GACrC,IAAMC,EACJ,6BACAD,EAAa7B,MAAM,GADnB,qEAKF,OAAO,IAAI+B,mBAAiBF,EAAcC,IAU/BE,EAAqB,uCAAG,WACnCC,EACAC,GAFmC,qCAAAtB,EAAA,6DAI7BuB,EAASF,EAAKG,YAJe,gBAKPD,QALO,IAKPA,OALO,EAKPA,EAAQE,aALD,UAK7BC,EAL6B,6BAQ3B,IAAIC,MAAM,sBARiB,cAW7BC,EAAe,IAAIC,IAASR,EAAKI,aAAcK,EAASP,GAX3B,SAYdF,EAAKU,mBAAmBT,GAZV,cAY7BU,EAZ6B,iBAaDX,EAAKY,uBAAuBD,GAb3B,QAa7BE,EAb6B,qBAgBfA,GAhBe,IAgBnC,2BAAWC,EAA8B,QACvCb,EAAgBc,aAAapB,EAA8BmB,IAjB1B,+CAoBXd,EAAKgB,eApBM,cAoB7BC,EApB6B,QAqBnBhB,EAAgBiB,WAAWC,MArBR,uBAsB3BC,EAAoBH,EAAYhB,EAAgBiB,WAAWC,KAC3D,IAAIb,MAAJ,gBACKc,EAAoB,EAAI,MAAQ,KADrC,YAC6CA,EAD7C,qBAEFA,EAAoB,EAAI,IAAM,GAF5B,aAvB2B,yBA8BZ7C,EACrBgC,EACAF,EAAcgB,cACdpB,GAjCiC,eA8B7BqB,EA9B6B,iBAoCVf,EAAa1B,gBACpCoB,EAAgBnB,KAAKC,GACrBkB,EAAgBnB,KAAKE,MACrBiB,EAAgBnB,KAAKA,KACrBmB,EAAgBnB,KAAKG,UACrBgB,EAAgBnB,KAAKI,UACrBe,EAAgBnB,KAAKK,QACrBc,EAAgBnB,KAAKM,SACrBa,EAAgBnB,KAAKO,SACrBY,EAAgBnB,KAAKQ,eACrBW,EAAgBV,oBAChB,CAAE+B,SAAUA,EAAW,MA/CU,eAoC7BC,EApC6B,yBAkD5BA,GAlD4B,4CAAH,wDClDrBC,EAAsB,SAACC,EAAwB/C,GAAzB,OACjC,IAAIvB,SAAQ,SAACuE,EAAShC,GACpB,IAAMiC,EAAgBC,aAAY,kBAChCH,EAAaI,sBAAsBnD,GAChCzB,MAAK,SAACO,GACDA,IACFsE,cAAcH,GACdnE,EAASuE,QAA8B,IAApBvE,EAASuE,OAAeL,EAAQlE,GAAYkC,EAAO,IAAIY,MAAM,2BAGnF5C,OAAM,SAACsE,GAAD,OAAgBtC,EAAOsC,QAChC,SCSSC,EAfoB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACjD,OACE,qBAAKxF,UAAU,QAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,cAAf,SACGuF,GAAe,wBAAQvF,UAAU,QAAQI,QAASmF,EAAnC,iBAElB,qBAAKvF,UAAU,eAAf,SACGwF,UCMIC,EAdiC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,QAAS3D,EAAS,EAATA,GACpD4D,EAAMD,EAAO,kBAAcA,EAAQhB,eAAtB,aAA8C3C,GACjE,OACE,mBACE6D,KAAI,yCAAoCD,GACxCE,OAAO,SACPC,IAAI,aACJ9F,UAAU,oBAJZ,SAME,qBAAK+F,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAvE,SAAmF,oBAAGC,KAAK,OAAOC,SAAS,UAAxB,UAAkC,sBAAMC,EAAE,kBAAuB,sBAAMrG,UAAU,aAAaoG,SAAS,UAAUC,EAAE,kJAAuJ,sBAAMrG,UAAU,aAAaqG,EAAE,sNCenXC,EAtB4B,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMhB,EAAkB,EAAlBA,YAClD,MAAa,YAATgB,EAEA,cAAC,EAAD,UACE,0DAMJ,eAAC,EAAD,CAAOhB,YAAaA,EAApB,UACE,sDACA,wHACA,8BACE,uBAAOiB,KAAK,OAAOC,aAAcF,IACjC,cAAC,EAAD,CAAoBxE,GAAIwE,OAE1B,4BAAG,wBAAQnG,QAASmF,EAAjB,+BCKMmB,EAtB4B,SAAC,GAA2B,IAAzBnB,EAAwB,EAAxBA,YAAagB,EAAW,EAAXA,KACzD,MAAa,YAATA,EAEA,cAAC,EAAD,UACE,0DAMJ,eAAC,EAAD,CAAOhB,YAAaA,EAApB,UACE,sDACA,qEACA,8BACE,uBAAOiB,KAAK,OAAOC,aAAcF,IACjC,cAAC,EAAD,CAAoBxE,GAAIwE,OAE1B,4BAAG,wBAAQnG,QAASmF,EAAjB,+BCKMoB,EAzBmC,SAAC,GAAe,IAAbtE,EAAY,EAAZA,MAC7CuE,EAAgBC,iBAAyB,MAO/C,OACE,uBAAM7G,UAAU,aAAhB,UACE,wBAAQwG,KAAK,SAASxG,UAAU,OAAOI,QAPvB,WAClBwG,EAAcE,SAAWF,EAAcE,QAAQC,SAC/CC,SAASC,YAAY,SAKnB,SACE,qBAAKlB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAvE,SAAmF,oBAAGC,KAAK,OAAOC,SAAS,UAAxB,UAAkC,sBAAMC,EAAE,kBAAuB,sBAAMrG,UAAU,aAAaoG,SAAS,UAAUC,EAAE,oMAGxM,uBACEG,KAAK,OACLxG,UAAU,WACVyG,aAAcpE,EACd6E,IAAKN,EACLO,MAAO,CAAEC,SAAU,WAAYC,KAAM,kBCP9BC,EAV+B,SAAC,GAAe,IAAbjF,EAAY,EAAZA,MAC/C,OACE,qCACGA,EACD,cAACkF,EAAD,CAAiBlF,MAAOA,IACxB,cAAC,EAAD,CAAoBqD,QAASrD,QCbpB,MAA0B,oC,0BCiJ1BmF,EA7HyC,SAAC,GAElD,IADLnE,EACI,EADJA,KAAMoE,EACF,EADEA,kBAAmBvG,EACrB,EADqBA,cAAenB,EACpC,EADoCA,YAAa2H,EACjD,EADiDA,uBAAwBC,EACzE,EADyEA,mBAErEC,EAAsBH,EAAtBG,YAAarB,EAASkB,EAATlB,KADjB,EAGkCsB,oBAAkB,GAHpD,mBAGGC,EAHH,KAGgBC,EAHhB,OAIgCF,mBAAmB,IAJnD,mBAIGtD,EAJH,KAIeyD,EAJf,OAK8BH,mBAAiB,GAL/C,mBAKGvD,EALH,KAKc2D,EALd,OAMoCJ,oBAAkB,GANtD,mBAMGK,EANH,KAMiBC,EANjB,OAO8BN,mBAAc,MAP5C,mBAOGO,EAPH,KAOcC,EAPd,KASJC,qBAAU,WACRjF,EAAKU,mBAAmB6D,GAAatH,MAAK,SAAC0D,GACzCuE,EAAavE,GAGb,IAAMoE,EAAY,IAAII,IAAiB1E,GAAS2E,WAAWb,EAAYzF,KAAKA,MACxEiG,EAAUxH,OACZyH,EAAaD,GAEbC,EAAa,IAAIG,IAAiBE,GAAUD,WAAWb,EAAYzF,KAAKA,UAI5EkB,EAAKgB,eAAe/D,MAAK,SAACqI,GAAD,OAA2BV,EAAaU,QAChE,CAACf,IAEJ,IAAMW,EAAe,SAACvE,GACpBmE,GAAgB,GAChB9E,EAAKY,uBAAuBD,GACzB1D,MAAK,SAACsI,GAAD,OAAuBZ,EAAcY,MAC1C7H,MAAMhB,GACN8I,SAAQ,kBAAMV,GAAgB,OAiB7BW,EAAuH,IAArGvE,EAAWwE,QAAO,SAAC1G,GAAD,OAAmBA,EAAMqC,gBAAkBxD,EAAcwD,iBAAerD,OAC5G2H,EAAa1E,EAAYC,EAAWlD,OAE1C,OACE,sBAAKrB,UAAU,cAAf,UACE,sBAAKA,UAAU,UAAf,UACE,4BAAG,iCAASoI,IAnBc,OAA1BR,EAAYzF,KAAKA,KACZ,aACEiG,EAAUxH,OACZwH,EAAUxH,OAEV,eAeL,8BAAG,0CACAgH,EAAYzF,KAAKC,KAAOiB,EAAKI,cAAgB,yCAC9C,cAAC,EAAD,CAAkBpB,MAAOuF,EAAYzF,KAAKC,QAEhB,MAA3BwF,EAAYzF,KAAKE,OAAiB,8BAAG,6CAAyBuF,EAAYzF,KAAKE,SAChF,8BAAG,iDACA6F,EAAe,aAAH,UAAqB3D,EAAWlD,OAAhC,mBAAiDiD,GAC9D,wBAAQtE,UAAU,OAAOI,QAAS,kBAAMmI,EAAahC,IAArD,SACE,qBAAKtG,IAAKgJ,EAAa9I,IAAI,oBAIjC,sBAAKH,UAAU,UAAf,UACE,yBACEI,QAAS,kBAAM2H,GAAgBD,IADjC,UACgDA,EAAc,QAAU,QADxE,aAECJ,GAA0B,wBACzBwB,SAAUJ,EACV1I,QA5Bc,kBACpBsH,GAA0BA,EAAuBE,GAC9CtH,MAAK,kBAAMiI,EAAahC,OAwBI,qBAG1BoB,GAAsB,wBACrBuB,SAAUF,EACV5I,QAAS,kBAAMuH,EAAmBF,IAFb,wBAKxBK,GACC,gCAAO,kCACL,+BACE,kDACA,6BACE,8BAAIvB,EAAK,cAAC,EAAD,CAAoBxE,GAAIwE,YAGrC,+BACE,uCACA,6BAAI,4BAAIqB,EAAYzF,KAAKgH,aAEA,OAA1BvB,EAAYzF,KAAKA,MAChB,qCACE,+BACE,0CACA,6BAAI,mBAAGnC,UAAU,OAAb,SAAqB4H,EAAYzF,KAAKA,YAE5C,+BACE,8CACA,6BACE,8BAAMiH,KAAKC,UAAUjB,EAAW,KAAM,aAK9C,+BACE,4CACA,6BACyB,IAAtB7D,EAAWlD,OAAe,4BAAG,iDAC5B,6BACGkD,EAAW+E,KAAI,SAACC,GAAD,OACd,+BACE,cAAC,EAAD,CAAkBlH,MAAOkH,IACxBrI,EAAcwD,gBAAkB6E,EAAS7E,eAAiB,uDAFpD6E,sBC3BdC,EAtFgC,SAAC,GAAiF,IAA/EnG,EAA8E,EAA9EA,KAAMtD,EAAwE,EAAxEA,YAAa0J,EAA2D,EAA3DA,wBAAyBvI,EAAkC,EAAlCA,cAAewI,EAAmB,EAAnBA,aAAmB,EAC5E7B,mBAAwB,MADoD,mBACvH8B,EADuH,KACpGC,EADoG,OAE5E/B,mBAAwB,MAFoD,mBAEvHgC,EAFuH,KAEpGC,EAFoG,KAIxHC,EAA2C,GAC3CC,EAA4C,GAElDN,EAAaJ,KAAI,SAACW,GAAD,MACG,YAAlBA,EAAO7E,OAAuB2E,EAAoBG,KAAKD,GAAUD,EAAqBE,KAAKD,MAG7F,IAAMvC,EAAyB,SAACE,GAG9B,OAFAgC,EAAqB,WAEdvG,EAAKU,mBAAmB6D,GAC5BtH,MAAK,SAACiG,GAAD,OACJlD,EAAKqE,uBAAuBnB,GACzBjG,MAAK,SAAC6J,GAAD,OAAiCtF,EAAoBxB,EAAK+G,cAAeD,EAAO5D,SACrFjG,MAAK,SAAC+J,GAAD,OAAkBT,EAAqBS,EAAQC,uBACxDvJ,OAAM,SAACsE,GACNuE,EAAqB,MACrB7J,EAAYsF,OAKZsC,EAAqB,SAACF,GAC1BqC,EAAqB,WAErB1G,EAAsBC,EAAMoE,EAAkBG,aAC3CtH,MAAK,SAAC6J,GAAD,OAAiCtF,EAAoBxB,EAAK+G,cAAeD,EAAO5D,SACrFjG,MAAK,SAAC+J,GACLP,EAAqBO,EAAQC,iBAC7Bb,EAAwBhC,MAEzB1G,OAAM,SAACsE,GACNyE,EAAqB,MACrB/J,EAAYsF,OAIlB,OACE,qCACE,0BAASrF,UAAU,QAAnB,UACE,8CACgC,IAA/B+J,EAAoB1I,QAAgD,IAAhC2I,EAAqB3I,QACxD,4BAAG,8DAE2B,IAA/B0I,EAAoB1I,QACnB,qCACE,sDACC0I,EAAoBT,KAAI,SAAC1B,EAAgC2C,GAAjC,OACvB,cAAC,EAAD,CACElH,KAAMA,EACNoE,kBAAmBG,EACnB7H,YAAaA,EACb2H,uBAAwBA,EACxBC,mBAAoBA,EACpBzG,cAAeA,GACVqJ,SAMoB,IAAhCP,EAAqB3I,QACpB,qCACE,uDACC2I,EAAqBV,KAAI,SAAC1B,EAAgC2C,GAAjC,OACxB,cAAC,EAAD,CACElH,KAAMA,EACNoE,kBAAmBG,EACnB1G,cAAeA,GACVqJ,YAOdZ,GAAqB,cAAC,EAAD,CAAepD,KAAMoD,EAAmBpE,YAAa,kBAAMqE,EAAqB,SACrGC,GAAqB,cAAC,EAAD,CAAetD,KAAMsD,EAAmBtE,YAAa,kBAAMuE,EAAqB,aC3D7FU,EA/BwB,SAAC,GAAc,IAAZnH,EAAW,EAAXA,KAAW,EACrBwE,mBAAiB,GADI,mBAC5C4C,EAD4C,KACnCC,EADmC,KAGnDpC,qBAAU,WACRqC,MACC,CAACtH,IAEJ,IAAMsH,EAAa,kBAAMtH,EAAKsH,aAAarK,MAAK,SAACmK,GAAD,OAAkBC,EAAWD,OAE7E,OACE,0BAASzK,UAAU,QAAnB,UACE,gDACA,gCACE,kCACE,+BACE,8CACA,6BAAI,cAAC,EAAD,CAAkBqC,MAAOgB,EAAKI,oBAEpC,qBAAIzD,UAAU,OAAd,UACE,yCACA,gCACIyK,EAAU,MAAqBG,WACjC,wBAAQxK,QAASuK,EAAY3K,UAAU,OAAvC,SAA8C,qBAAKC,IAAKgJ,EAAa9I,IAAI,6BCRxE0K,EAfgC,SAAC,GAE9C,IAFuF,IAAvCxI,EAAsC,EAAtCA,MAAOyI,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,eAC3DC,EAAU,GACPT,EAAQ,EAAGA,GAASQ,EAAgBR,IAC3CS,EAAQd,KAAKK,GAKf,OACE,wBAAQlI,MAAOA,EAAOyI,SAHH,SAACG,GAAD,OAAcH,EAAShK,SAASmK,EAAIpF,OAAOxD,SAG9D,SACG2I,EAAQ1B,KAAI,SAAC4B,GAAD,OAAoB,wBAAqB7I,MAAO6I,EAA5B,SAAqCA,GAAxBA,SCerCC,EAxBmC,SAAC,GAIjD,IAJyG,IAAtDJ,EAAqD,EAArDA,eAAgBK,EAAqC,EAArCA,iBAAkBC,EAAmB,EAAnBA,aAAmB,EAChExD,mBAAiBuD,GAD+C,mBACjGE,EADiG,KACnFC,EADmF,KAGlGP,EAAU,GACPT,EAAQ,EAAGA,GAASQ,EAAgBR,IAC3CS,EAAQd,KAAKK,GAGf,OACE,gCACE,kDACA,gGACA,mDACA,cAAC,EAAD,CACEQ,eAAgBA,EAChB1I,MAAOiJ,EACPR,SAAU,SAACzI,GAAD,OAAmBkJ,EAAgBlJ,MAG/C,4BAAG,wBAAQjC,QAAS,kBAAMiL,EAAaC,IAApC,oC,QCWME,EA7B4B,SAAC,GAAmD,IAAjDH,EAAgD,EAAhDA,aAActL,EAAkC,EAAlCA,YAAagL,EAAqB,EAArBA,eAAqB,EAC5DlD,mBAAiB,IAD2C,mBACrF4D,EADqF,KAC3EC,EAD2E,OAEpD7D,mBAAiBkD,GAFmC,mBAErFO,EAFqF,KAEvEC,EAFuE,KAU5F,OACE,gCACE,+CACA,4CAEA,uBAAO/E,KAAK,OAAOxG,UAAU,WAAWqC,MAAOoJ,EAAUX,SAAU,SAAAG,GAAG,OAAIS,EAAYT,EAAIpF,OAAOxD,UAEjG,kDACA,cAAC,EAAD,CACE0I,eAAgBA,EAAiB,EACjC1I,MAAOiJ,EACPR,SAAU,SAACzI,GAAD,OAAmBkJ,EAAgBlJ,MAG/C,4BAAG,wBAAQjC,QApBS,WACtBuL,YAAUF,EAAS/G,eACf2G,EAAaI,EAAS/G,cAAe4G,GACrCvL,EAAY,IAAI4D,MAAM,8BAiBrB,0BCHMiI,EAtB+B,SAAC,GAAqD,IAAnDb,EAAkD,EAAlDA,eAAgBM,EAAkC,EAAlCA,aAAcQ,EAAoB,EAApBA,cAAoB,EAC/DhE,mBAAiBkD,EAAiB,GAD6B,mBAC1FzG,EAD0F,KAC/E2D,EAD+E,KAGjG,OACE,gCACE,8CACA,4EACA,uBAAOzB,KAAK,OAAOC,aAAcoF,IAEjC,8BACE,mDACA,cAAC,EAAD,CACEd,eAAgBA,EAAiB,EACjC1I,MAAOiC,EACPwG,SAAU,SAACzI,GAAD,OAAmB4F,EAAa5F,SAG9C,4BAAG,wBAAQjC,QAAS,kBAAMiL,EAAaQ,EAAcnH,cAAeJ,IAAjE,0BCKMwH,EAtB6B,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,WAAYhM,EAAgC,EAAhCA,YAAasL,EAAmB,EAAnBA,aAAmB,EACzDxD,mBAAiB,IADwC,mBAClF4D,EADkF,KACxEC,EADwE,KAQzF,OACE,gCACE,4CACA,4DACA,iDACA,uBAAOlF,KAAK,OAAOC,aAAcsF,IACjC,8CACA,uBAAOvF,KAAK,OAAOxG,UAAU,aAAaqC,MAAOoJ,EAAUX,SAAU,SAAAG,GAAG,OAAIS,EAAYT,EAAIpF,OAAOxD,UAEnG,4BAAG,wBAAQjC,QAdS,kBACtBuL,YAAUF,GACNJ,EAAaU,EAAYN,EAAS/G,eAClC3E,EAAY,IAAI4D,MAAM,0BAWrB,gCC1BM,MAA0B,mCCA1B,MAA0B,iCCA1B,MAA0B,iCC0H1BqI,EAxG8B,SAAC,GAA2C,IAAzC3I,EAAwC,EAAxCA,KAAM4I,EAAkC,EAAlCA,eAAgBlM,EAAkB,EAAlBA,YAAkB,EAE1D8H,mBAAmB,IAFuC,mBAE/EqE,EAF+E,KAEvEC,EAFuE,OAGpDtE,mBAAiB,GAHmC,mBAG/EvD,EAH+E,KAGpE2D,EAHoE,OAMhDJ,oBAAkB,GAN8B,mBAM/EuE,EAN+E,KAMlEC,EANkE,OAOxCxE,oBAAkB,GAPsB,mBAO/EyE,EAP+E,KAO9DC,EAP8D,OAQhD1E,mBAAwB,MARwB,mBAQ/E2E,EAR+E,KAQlEC,EARkE,OASpD5E,mBAAwB,MAT4B,mBAS/E6E,EAT+E,KASpEC,EAToE,KAWtFrE,qBAAU,WACRjF,EAAKuJ,YAAYtM,MAAK,SAAC4L,GAAD,OAAsBC,EAAUD,MACtD7I,EAAKgB,eAAe/D,MAAK,SAAC6J,GAAD,OAAoBlC,EAAakC,QACzD,CAAC9G,IAGJ,IAoCMwJ,EAAmB,WACvBR,GAAe,GACfE,GAAmB,GACnBE,EAAe,MACfE,EAAa,OAGf,OACE,0BAAS3M,UAAU,gBAAnB,UACE,6CACA,gCACE,kCACE,+BACE,wCACA,+BACE,6BACGkM,EAAO5C,KAAI,SAACnF,GAAD,OACV,+BACE,cAAC,EAAD,CAAkB9B,MAAO8B,IACzB,wBAAQnE,UAAU,cAAcI,QAAS,kBAAMqM,EAAetI,IAA9D,SACE,qBAAKlE,IAAK6M,EAAY3M,IAAI,qBAE5B,wBAAQH,UAAU,OAAOI,QAAS,kBAAMuM,EAAaxI,IAArD,SACE,qBAAKlE,IAAK8M,EAAU5M,IAAI,qBANnBgE,QAWb,wBAAQ/D,QAAS,kBAAMiM,GAAe,IAAtC,+BAGJ,qBAAIrM,UAAU,OAAd,UACE,2CACA,+BACGsE,EACD,wBAAQtE,UAAU,OAAOI,QAAS,kBAAMmM,GAAmB,IAA3D,SACE,qBAAKtM,IAAK+M,EAAU7M,IAAI,gCAOjCmM,GAAmB,cAAC,EAAD,CAAO/G,YAAa,kBAAMgH,GAAmB,IAA7C,SAAqD,cAAC,EAAD,CAAsBxB,eAAgBmB,EAAO7K,OAAQ+J,iBAAkB9G,EAAW+G,aA/E/H,SAACC,GAAD,OAC9BjI,EAAK4J,qBAAqB3B,GACvBhL,MAAK,SAACsH,GACLqE,EAAerE,GACfiF,OAED9L,MAAMhB,QA0ENqM,GAAe,cAAC,EAAD,CAAO7G,YAAa,kBAAM8G,GAAe,IAAzC,SAAiD,cAAC,EAAD,CAAetB,eAAgBmB,EAAO7K,OAAQgK,aAvE1F,SAACI,EAAkBH,GAAnB,OACvBjI,EAAK6J,cAAczB,EAAUH,GAC1BhL,MAAK,SAACsH,GACLqE,EAAerE,GACfiF,OAED9L,MAAMhB,IAiEwIA,YAAaA,MAC3JyM,GAAe,cAAC,EAAD,CAAOjH,YAAa,kBAAMkH,EAAe,OAAzC,SAAgD,cAAC,EAAD,CAAkBZ,cAAeW,EAAazB,eAAgBmB,EAAO7K,OAAQgK,aA/DrH,SAACmB,EAAqBlB,GAAtB,OAC1BjI,EAAK8J,iBAAiBX,EAAalB,GAChChL,MAAK,SAACsH,GACLqE,EAAerE,GACfiF,OAED9L,MAAMhB,QA0DN2M,GAAa,cAAC,EAAD,CAAOnH,YAAa,kBAAMoH,EAAa,OAAvC,SAA8C,cAAC,EAAD,CAAgBZ,WAAYW,EAAWrB,aAvD7E,SAACqB,EAAmBjB,GAApB,OACxBpI,EAAK+J,eAAeV,EAAWjB,GAC5BnL,MAAK,SAACsH,GACLqE,EAAerE,GACfiF,OAED9L,MAAMhB,IAiD6HA,YAAaA,U,mBCjFxIsN,GA5BiC,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,kBAAmBvN,EAAkB,EAAlBA,YAAkB,EACpD8H,mBAAiB,IADmC,mBAC/E0F,EAD+E,KACpEC,EADoE,OAE1D3F,mBAAiB,KAFyC,mBAE/E4F,EAF+E,KAEvEC,EAFuE,KAYtF,OACE,qCACE,oDACA,8BACE,+CACA,uBAAOlH,KAAK,OAAOxG,UAAU,KAAKqC,MAAOkL,EAAWzC,SAAU,SAAAG,GAAG,OAAIuC,EAAavC,EAAIpF,OAAOxD,aAE/F,8BACE,4CACA,uBAAOmE,KAAK,SAASxG,UAAU,SAASqC,MAAOoL,EAAQ3C,SAAU,SAAAG,GAAG,OAAIyC,EAAU5M,SAASmK,EAAIpF,OAAOxD,cAExG,wBAAQrC,UAAU,SAASI,QAnBH,WAC1B,IAAKuL,YAAU4B,GACb,OAAOxN,EAAY,IAAI4D,MAAM,iCAG/B2J,EAAkBC,EAAU7I,cAAe+I,IAczC,oCCmBSE,GAxCiC,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,MAAON,EAAqC,EAArCA,kBAAmBvN,EAAkB,EAAlBA,YAAkB,EACvD8H,mBAA4C,CAAE4F,OAAQ,EAAG/H,QAAS,KADX,mBACtFkC,EADsF,KACzEiG,EADyE,KAe7F,OACE,gCACE,wDAA2BD,EAAME,UACjC,8BACE,8CACA,uBAAOtH,KAAK,OAAOxG,UAAU,WAAWyG,aAAcmH,EAAMH,YAE9D,8BACE,oDACA,uBAAOjH,KAAK,SAASxG,UAAU,SAASqC,MAAOuF,EAAY6F,OAAQ3C,SAAU,SAAAG,GAAG,OAAI4C,EAAe,2BAAKjG,GAAN,IAAmB6F,OAAQ3M,SAASmK,EAAIpF,OAAOxD,gBAEnJ,8BACE,8CACA,uBAAOmE,KAAK,SAASxG,UAAU,YAAYqC,MAAOuF,EAAYlC,QAASoF,SAAU,SAAAG,GAAG,OAAI4C,EAAe,2BAAKjG,GAAN,IAAmBlC,QAASuF,EAAIpF,OAAOxD,eAG/I,4BACE,wBAAQrC,UAAU,SAASI,QA7BL,WAC1B,OAAKuL,YAAU/D,EAAYlC,SAIvBkC,EAAY6F,OAASG,EAAMH,QAAU7F,EAAY6F,OAAS,EACrD1N,EAAY,IAAI4D,MAAJ,yCAA4CiK,EAAMH,OAAlD,OAGdH,EAAkBM,EAAOhG,EAAY6F,OAAQ7F,EAAYlC,QAAQhB,eAP/D3E,EAAY,IAAI4D,MAAM,kCA2B3B,sC,oBCvCKoK,GAAe,SAAC5M,GAC3B,OAAQA,GACN,KAAK,GAAI,OAAO6M,GAChB,QAAS,OAAOC,KC0ILC,GAxH8B,SAAC,GAA2C,IAAzC7K,EAAwC,EAAxCA,KAAM4I,EAAkC,EAAlCA,eAAgBlM,EAAkB,EAAlBA,YAAkB,EAC9C8H,oBAAkB,GAD4B,mBAC/EsG,EAD+E,KACjEC,EADiE,OAEpCvG,mBAA4B,MAFQ,mBAE/EwG,EAF+E,KAE5DC,EAF4D,OAIxDzG,mBAAiB,KAJuC,mBAI/E4C,EAJ+E,KAItEC,EAJsE,OAK1D7C,mBAAgB,IAL0C,mBAK/E0G,EAL+E,KAKvEC,EALuE,KAOtFlG,qBAAU,WACRmG,IAEApL,EAAKqL,aAAapO,MAAK,SAACa,GAAD,OACrBwN,EAAe,CAAEb,OAAQ,OAAQc,SAAU,GAAInB,OAAQ,EAAGoB,gBAAiBd,GAAa5M,GAAS2N,gBAClG,CAACzL,IAEJ,IAAMoL,EAAiB,kBAAMpL,EAAKsH,aAAarK,MAAK,SAACmK,GAAD,OAAwBC,EAAWD,EAAQG,gBAEzF+D,EAAiB,SAACf,GACtB,IAAMrK,EAASF,EAAKG,YACH,IAAIK,IAAS+J,EAAMiB,gBAAiBnG,EAAUnF,GACtDwL,UAAU1L,EAAKI,cACrBnD,MAAK,SAAC6J,GAAD,OAAuBA,EAAOS,cACnCtK,MAAK,SAAC6J,GACL,IAAM6E,EAAW,2BAAQpB,GAAR,IAAeH,OAAQ3M,SAASqJ,GAAU8E,KAAKC,IAAI,GAAI,MAGlEC,EAFWZ,EAAOa,MAAK,SAACC,GAAD,OAA2BA,EAAUvB,SAAWF,EAAME,UAG/ES,EAAOjF,KAAI,SAAC+F,GAAD,OAA2BA,EAAUvB,SAAWF,EAAME,OAASkB,EAAcK,KAD/D,sBAErBd,GAFqB,CAEbS,IAEhBR,EAAUW,MAEXpO,OAAM,SAACsE,GAAD,OAAgBiK,QAAQC,IAAI,QAASlK,OA2BhD,OACE,qCACE,sBAAKrF,UAAU,QAAf,UACE,wCACA,kCACE,gCACE,+BACE,uCACA,6CAGJ,kCACE,+BACE,6BAAI,uCACJ,6BACE,+BACIc,SAAS2J,GAAW,MAAqBG,WAC3C,wBAAQ5K,UAAU,OAAOI,QAASqO,EAAlC,SACE,qBAAKxO,IAAKgJ,EAAa9I,IAAI,sBAE7B,wBAAQH,UAAU,OAAOI,QAAS,kBAAMgO,GAAgB,IAAxD,8BAILG,EAAOjF,KAAI,SAACsE,GAAD,OACV,+BACE,6BAAI,4BAAIA,EAAME,WACd,+BACGF,EAAMH,OACP,wBAAQzN,UAAU,OAAOI,QAAS,kBAAMuO,EAAef,IAAvD,SACE,qBAAK3N,IAAKgJ,EAAa9I,IAAI,sBAE7B,wBAAQH,UAAU,OAAOI,QAAS,kBAAMkO,EAAqBV,IAA7D,2BAPKA,EAAMiB,6BAgBtBV,GACC,cAAC,EAAD,CAAO5I,YAAa,kBAAM6I,GAAgB,IAA1C,SACE,cAAC,GAAD,CACEd,kBAnEgB,SAAClL,EAAYqL,GAAb,OACxBpK,EAAKiK,kBAAkB,CACrBlL,KACAC,MAAOoL,EAAO7C,WACdzI,KAAM,OAEL7B,MAAK,SAACsH,GAAD,OAAkCqE,EAAerE,MACtD7G,MAAMhB,GACN8I,SAAQ,kBAAMuF,GAAgB,OA4DzBrO,YAAaA,MAIlBsO,GACC,cAAC,EAAD,CAAO9I,YAAa,kBAAM+I,EAAqB,OAA/C,SACE,cAAC,GAAD,CACEV,MAAOS,EACPtO,YAAaA,EACbuN,kBAlEqB,SAACM,EAAmBH,EAAgBrL,GACjE,IAAMP,EAAW,IAAIgC,IAAS+J,EAAMiB,gBAAiBnG,EAAUrF,EAAKG,aAC9DgM,EAAY,IAAIC,2BAAwBpM,EAAMxB,GAE9C6N,EAAYC,KAAU7N,KAAK2L,GAAQmC,IAAID,KAAU7N,KAAK,IAAIoN,IAAItB,EAAMgB,WAE1EY,EAAUK,SAASzN,EAAIsN,GACpBpP,MAAK,SAACsH,GAAD,OAAkCqE,EAAerE,MACtD7G,MAAMhB,GACN8I,SAAQ,kBAAMyF,EAAqB,kBC3D3BwB,GAZsC,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAClE,OACE,eAAC,EAAD,CAAOzK,YAAawK,EAApB,UACE,qDACA,6LACA,4BACE,wBAAQ3P,QAAS4P,EAAjB,qCCoDOC,GA3C8B,SAAC,GAAwD,IAAtD5M,EAAqD,EAArDA,KAAMnC,EAA+C,EAA/CA,cAAenB,EAAgC,EAAhCA,YAAa2B,EAAmB,EAAnBA,aAAmB,EAE7DmG,mBAAiB,aAF4C,mBAE5FqI,EAF4F,KAE/EC,EAF+E,OAG7CtI,oBAAkB,GAH2B,mBAG5FuI,EAH4F,KAGvEC,EAHuE,OAO3DxI,mBAA8B,IAP6B,mBAO5F6B,EAP4F,KAO9E4G,EAP8E,KAQ7FrE,EAAiB,SAACrE,GAEtBvE,EAAKU,mBAAmB6D,GACrBtH,MAAK,SAACiG,GACL+J,EAAgB,GAAD,mBAAK5G,GAAL,CAAmB,CAAEtE,OAAQ,UAAWwC,cAAarB,WACpE8J,GAAuB,OAiB7B,OACE,0BAASrQ,UAAU,eAAnB,UACE,cAAC,EAAD,CAAY0B,aAAcA,EAAcD,aA5BvB,SAACwJ,GAAD,OAAwCkF,EAAelF,EAAIsF,cAAcjP,KA4BtBK,SAAUuO,IAC7D,cAAhBA,GAA+B,cAAC,EAAD,CAAW7M,KAAMA,IAChC,iBAAhB6M,GAAkC,cAAC,EAAD,CAAmB7M,KAAMA,EAAMqG,aAAcA,EAAc3J,YAAaA,EAAa0J,wBAhB5F,SAAChC,GAC/B,IAAM+I,EAAqB9G,EAAaJ,KAAI,SAACmH,GAAD,OAC1CA,EAAKlK,OAASkB,EAAkBlB,KAAhC,2BAA4CkK,GAA5C,IAAkDrL,OAAQ,aAAeqL,KAE3EH,EAAgBE,IAY4JtP,cAAeA,IACxK,WAAhBgP,GAA4B,cAAC,GAAD,CAAiB7M,KAAMA,EAAMtD,YAAaA,EAAakM,eAAgBA,IACnF,WAAhBiE,GAA4B,cAAC,EAAD,CAAiB7M,KAAMA,EAAM4I,eAAgBA,EAAgBlM,YAAaA,IAEtGqQ,GAAuB,cAAC,GAAD,CAAyBL,WAAY,kBAAMM,GAAuB,IAAQL,aAbpE,WAChCK,GAAuB,GACvBF,EAAe,uB,wCCiCJO,GA1EkC,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,eAAgBC,EAA8B,EAA9BA,WAAY7Q,EAAkB,EAAlBA,YAAkB,EAC9D8H,mBAAmB,CAAC8I,EAAiBA,EAAejM,cAAgB,KADN,mBACzFmM,EADyF,KAC9EC,EAD8E,OAE9DjJ,mBAAiB,GAF6C,mBAEzFvD,EAFyF,KAE9E2D,EAF8E,KAI1F8I,EAAqB,SAAC9F,GAC1B,IAAM+F,EAAclQ,SAASmK,EAAIpF,OAAOvE,GAAG2P,QAAQ,UAAW,KACxDC,EAAaL,EAAUvH,KAAI,SAACmH,EAAclG,GAAf,OAAiCA,IAAUyG,EAAc/F,EAAIpF,OAAOxD,MAAMqC,cAAgB+L,KAC3HK,EAAaI,IAgCf,OACE,gCACE,mDACA,qJACsH,uBADtH,aAEY,6CAFZ,gDAE6E,+CAF7E,2BAKA,6BACGL,EAAUvH,KAAI,SAAC5D,EAAiB6E,GAAlB,OACb,+BACE,6CAAgBA,EAAQ,EAAxB,QACA,uBAAO/D,KAAK,OACVlF,GAAE,iBAAYiJ,GACdlI,MAAOqD,EACPoF,SAAUiG,EACV/Q,UAAS,iBAAYuK,KAEvB,wBAAQvK,UAAS,uBAAkBuK,GAASnK,QAAS,kBA/CzC,SAAC4Q,GACrB,IAAME,EAAaL,EAAU9H,QAAO,SAACoI,EAAe5G,GAAhB,OAAkCA,IAAUyG,KAChFF,EAAaI,GA6CsDrF,CAActB,IAAzE,sBAROA,QAYb,wBAAQvK,UAAU,aAAaI,QAAS,kBAAM0Q,EAAa,GAAD,mBAAKD,GAAL,CAAgB,OAA1E,yBAEA,kFAAqD,IACnD,wBAAQ7Q,UAAU,YAAYqC,MAAOiC,EAAUsG,WAAYE,SAAU,SAAAG,GAAG,OAAIhD,EAAanH,SAASmK,EAAIpF,OAAOxD,SAA7G,SAjCc,SAAChB,GAEnB,IADA,IAAM+P,EAAQ,GACL7G,EAAQ,EAAGA,EAAQlJ,EAAQkJ,IAClC6G,EAAMlH,KAAK,wBAAoB7H,MAAOkI,EAAQ,EAAnC,SAAuCA,EAAQ,GAAlCA,IAE1B,OAAO6G,EA6BAC,CAAYR,EAAUxP,UAF3B,iBAMA,wBAAQrB,UAAU,SAASkJ,SAA+B,IAArB2H,EAAUxP,OAAcjB,QAtDpC,WAC3B,IAAMkR,EAAsB,GAO5B,GANAT,EAAUU,SAAQ,SAAC7L,EAAiB6E,GAC7BoB,YAAUjG,IACb4L,EAAUpH,KAAKK,EAAQ,MAIF,IAArB+G,EAAUjQ,OAEZ,OADAtB,EAAY,IAAI4D,MAAJ,mCAAsC2N,EAAU1G,eACrD,EAGTgG,EAAWC,EAAWvM,IAyCpB,6BC3DSkN,GAbqC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACnC5J,mBAAiB,IADkB,mBAClE6J,EADkE,KACrDC,EADqD,KAGzE,OACE,gCACE,6DACA,iDACA,uBAAO3R,UAAU,cAAcwG,KAAK,OAAOnE,MAAOqP,EAAa5G,SAAU,SAAAG,GAAG,OAAI0G,EAAe1G,EAAIpF,OAAOxD,UAC1G,wBAAQrC,UAAU,UAAUI,QAAS,kBAAMqR,EAAcC,IAAzD,yBCkESE,GA/DyB,SAAC,GAAoE,IAAlE9M,EAAiE,EAAjEA,aAAc3D,EAAmD,EAAnDA,QAAS0Q,EAA0C,EAA1CA,cAAe9R,EAA2B,EAA3BA,YAAa2F,EAAc,EAAdA,QAAc,EAE1EmC,oBAAkB,GAFwD,mBAEnGiK,EAFmG,KAEzFC,EAFyF,OAGxElK,oBAAkB,GAHsD,mBAGnGmK,EAHmG,KAGxFC,EAHwF,KAuC1G,OAAOD,EAAY,qBAAK7K,MAAO,CAAE+K,UAAW,UAAzB,wBAEf,0BAASlS,UAAU,gBAAnB,UACE,8EAEE,wBAAQI,QAAS,kBAAM2R,GAAaD,IAApC,SACGA,EAAW,kBAAoB,mBAGnCA,EACC,cAAC,GAAD,CACElB,WA5CS,SAACC,EAAqBvM,GACvC2N,GAAa,GAEb,IAAME,EAAYpE,GAAa5M,GAGzBoC,EAFW,IAAI6O,UAAOC,UAAUzS,aAAakF,GAE3BtB,YAEJ,IAAI8O,qBACtB/O,EACA4O,EAAUI,oBAAoB7N,cAC9ByN,EAAUK,qBAAqB9N,eAGrBkM,WAAW,CAAE1E,OAAQ2E,EAAWvM,cACzChE,KAAKuR,GACL9Q,MAAMhB,GACN8I,SAAQ,kBAAMoJ,GAAa,OA4BtBlS,YAAaA,EACb4Q,eAAgBjL,IAGlB,cAAC,GAAD,CACE+L,cA7BY,SAACC,GACrBO,GAAa,GAEb,IACM1O,EADW,IAAI6O,UAAOC,UAAUzS,aAAakF,GAC3BtB,YAExBiP,KAAWC,OAAON,UAAQV,EAAYhN,cAAenB,GAClDjD,MAAK,SAAC+C,GAAD,OAAewO,EAAcxO,MAClCtC,MAAMhB,GACN8I,SAAQ,kBAAMoJ,GAAa,aC3C5BpS,GAAS,IAAI8S,IAAO,CACxBC,eAAe,EACfC,gBAAiB,CAAC,GAAI,QAgFTC,OA7Ef,WAAiB,IAAD,EACYjL,mBAAwB,IADpC,mBACPkL,EADO,KACAC,EADA,OAI8BnL,mBAAoD,MAJlF,mBAIPtH,EAJO,KAIST,EAJT,OAKU+H,mBAAsB,MALhC,mBAKPxE,EALO,KAKD4P,EALC,OAQgBpL,mBAAwB,MARxC,mBAQPnC,EARO,KAQEwN,EARF,OASgBrL,mBAAwB,MATxC,mBASP1G,EATO,KASEgS,EATF,KAyBRpT,EAAc,SAACgT,GAAD,OAAkBA,GAASC,EAASD,EAAMK,UACxDC,EAAa,kBAAML,EAAS,OAWlC,OACE,sBAAKhT,UAAWO,EAAiB,MAAQ,aAAzC,UACIA,EAME,cAAC,EAAD,CAAcY,QAASA,EAASD,cAAewE,IALjD,cAAC,EAAD,CACE7F,OAAQA,GACRC,kBA/BqB,SAACe,EAAe6E,EAAiBvE,GAC5DrB,EAAkBe,GAClBqS,EAAWxN,GACXyN,EAAWhS,GAGXN,EAASH,SAAS4S,GAAG,mBAAmB,SAACC,GAAD,OAAwBL,EAAWK,EAAS,QA0B9ExT,YAAaA,IAKhBgT,GACC,0BAAS/S,UAAU,QAAnB,UACE,4BAAI+S,IACJ,wBAAQ3S,QAASiT,EAAjB,kBAIH9S,GAAkBY,IAAYkC,GAC7B,cAAC,GAAD,CACEyB,aAAcvE,EAAeG,SAC7BS,QAASA,EACT0Q,cAvCc,SAACxO,GACrB4P,EAAQ5P,GACRgQ,KAsCMtT,YAAaA,EACb2F,QAASA,IAIZnF,GAAkBmF,GAAWrC,GAC5B,cAAC,GAAD,CACEA,KAAMA,EACNnC,cAAewE,EACfhE,aAzCa,WACL,OAAdnB,QAAc,IAAdA,KAAgBiT,aAChB1T,EAAkB,MAClBmT,EAAQ,MACRD,EAAS,MACTE,EAAW,MACXC,EAAW,OAoCLpT,YAAaA,QCvER0T,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBrT,MAAK,YAAkD,IAA/CsT,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFnN,SAASoN,eAAe,SAM1BX,M","file":"static/js/main.f068ba5c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rif-safe.6d74aa93.svg\";","export default __webpack_public_path__ + \"static/media/powered-by-iov.a0397e40.svg\";","import React from 'react'\nimport { RLoginButton } from '@rsksmart/rlogin'\nimport rifSafeLogo from '../../images/rif-safe.svg'\nimport poweredByLogo from '../../images/powered-by-iov.svg'\n\ninterface Interface {\n  rLogin: any\n  setRLoginResponse: (response: any, address: string, chainId: number) => void\n  handleError: (error: Error) => void\n}\n\nconst Web3Provider: React.FC<Interface> = ({ rLogin, setRLoginResponse, handleError }) => {\n  const handleLogin = () =>\n    rLogin.connect()\n      .then((rLoginResponse: any) => {\n        Promise.all([\n          rLoginResponse.provider.request({ method: 'eth_accounts' }),\n          rLoginResponse.provider.request({ method: 'eth_chainId' })\n        ]).then((response: any) => {\n          setRLoginResponse(rLoginResponse, response[0][0], parseInt(response[1]))\n        })\n      })\n      .catch(handleError)\n\n  return (\n    <section className=\"login\">\n      <img src={rifSafeLogo} alt=\"RIF Safe\" />\n      <h2>Login with your wallet</h2>\n      <p><RLoginButton onClick={handleLogin}>Connect with rLogin!</RLoginButton></p>\n      <img src={poweredByLogo} alt=\"Powered by IOV Labs\" />\n      <p className=\"legal\">Copyright © 2021 IOV Labs. All rights reserved.</p>\n    </section>\n  )\n}\n\nexport default Web3Provider\n","export default __webpack_public_path__ + \"static/media/rif-safe-header.ac579ff7.svg\";","import React from 'react'\nimport rifSafeLogo from '../images/rif-safe-header.svg'\n\ninterface Interface {\n  chainId: number | null\n  walletAddress: string | null\n}\n\nconst ConnectedBar: React.FC<Interface> = ({ walletAddress, chainId }) => {\n  const chainIdtoString = (id: number) => {\n    switch (id) {\n      case 31: return 'RSK Testnet'\n      case 30: return 'RSK Mainnet'\n      default: return 'Local'\n    }\n  }\n  return (\n    <section className=\"header\">\n      <ul className=\"inline\">\n        <li><img src={rifSafeLogo} alt=\"RIF Safe\" /></li>\n        {walletAddress && (\n          <li className=\"address\">\n            {`${walletAddress.slice(0, 8)}...${walletAddress.slice(walletAddress.length - 6)}`}\n          </li>\n        )}\n        <li className=\"chainId\"><span>{chainId && chainIdtoString(chainId)}</span></li>\n      </ul>\n    </section>\n  )\n}\n\nexport default ConnectedBar\n","import React, { MouseEvent } from 'react'\n\ninterface Interface {\n  handleLogout: () => void\n  changeActive: (event: MouseEvent<HTMLButtonElement>) => void\n  selected: string\n}\n\nconst Navigation: React.FC<Interface> = ({ changeActive, handleLogout, selected }) => {\n  return (\n    <ul className=\"navigation\">\n      <li><button id=\"dashboard\" className={selected === 'dashboard' ? 'selected' : ''} onClick={changeActive}>Dashboard</button></li>\n      <li><button id=\"transactions\" className={selected === 'transactions' ? 'selected' : ''} onClick={changeActive}>Transactions</button></li>\n      <li><button id=\"assets\" className={selected === 'assets' ? 'selected' : ''} onClick={changeActive}>Assets</button></li>\n      <li><button id=\"policy\" className={selected === 'policy' ? 'selected' : ''} onClick={changeActive}>Policies</button></li>\n      <li className=\"logout\"><button onClick={handleLogout}>Disconnect Wallet</button></li>\n    </ul>\n  )\n}\n\nexport default Navigation\n","import { Safe, SafeSignature, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport { Contract } from 'ethers'\nimport safeAbi from '@gnosis.pm/safe-core-sdk/dist/src/abis/SafeAbiV1-2-0.json'\nimport { EthSignSignature } from '@gnosis.pm/safe-core-sdk/dist/src/utils/signatures/SafeSignature'\n\n// COPIED from https://github.com/gnosis/safe-core-sdk/blob/main/packages/safe-core-sdk/src/utils/transactions/gas.ts#L84-L107\n// the function is as is and not modified other than removal of 'export'\nasync function estimateGasForTransactionExecution (\n  contract: any,\n  from: string,\n  tx: SafeTransaction\n): Promise<number> {\n  try {\n    const gas = await contract.estimateGas.execTransaction(\n      tx.data.to,\n      tx.data.value,\n      tx.data.data,\n      tx.data.operation,\n      tx.data.safeTxGas,\n      tx.data.baseGas,\n      tx.data.gasPrice,\n      tx.data.gasToken,\n      tx.data.refundReceiver,\n      tx.encodedSignatures(),\n      { from, gasPrice: tx.data.gasPrice }\n    )\n\n    return gas.toNumber()\n  } catch (error) {\n    return Promise.reject(error)\n  }\n}\n\n// copied from https://github.com/gnosis/safe-core-sdk/blob/main/packages/safe-core-sdk/src/utils/signatures/index.ts\n// the function is as is and not modified other than removal of 'export'\nconst generatePreValidatedSignature = (ownerAddress: string): SafeSignature => {\n  const signature =\n    '0x000000000000000000000000' +\n    ownerAddress.slice(2) +\n    '0000000000000000000000000000000000000000000000000000000000000000' +\n    '01'\n\n  return new EthSignSignature(ownerAddress, signature)\n}\n\n/**\n * A modified version of Gnosis's safe.executeTransaction function. For RSK, it\n * adds 30,000 to the gas estimation which is required on RSK.\n * @param safe An EthersSafe which is used to get the safe and signer address\n * @param safeTransaction SafeTransaction ready to be executed\n * @returns ContractTransaction\n */\nexport const executeRskTransaction = async (\n  safe: Safe,\n  safeTransaction: SafeTransaction\n) => {\n  const signer = safe.getSigner()\n  const signerAddress = await signer?.getAddress()\n\n  if (!signerAddress) {\n    throw new Error('No signer provided')\n  }\n\n  const safeContract = new Contract(safe.getAddress(), safeAbi, signer)\n  const txHash = await safe.getTransactionHash(safeTransaction)\n  const ownersWhoApprovedTx = await safe.getOwnersWhoApprovedTx(txHash)\n\n  // add the signatures to the safeTransaction object\n  for (const owner of ownersWhoApprovedTx) {\n    safeTransaction.addSignature(generatePreValidatedSignature(owner))\n  }\n\n  const threshold = await safe.getThreshold()\n  if (threshold > safeTransaction.signatures.size) {\n    const signaturesMissing = threshold - safeTransaction.signatures.size\n    throw new Error(\n      `There ${signaturesMissing > 1 ? 'are' : 'is'} ${signaturesMissing} signature${\n        signaturesMissing > 1 ? 's' : ''\n      } missing`\n    )\n  }\n\n  const gasLimit = await estimateGasForTransactionExecution(\n    safeContract,\n    signerAddress.toLowerCase(),\n    safeTransaction\n  )\n\n  const txResponse = await safeContract.execTransaction(\n    safeTransaction.data.to,\n    safeTransaction.data.value,\n    safeTransaction.data.data,\n    safeTransaction.data.operation,\n    safeTransaction.data.safeTxGas,\n    safeTransaction.data.baseGas,\n    safeTransaction.data.gasPrice,\n    safeTransaction.data.gasToken,\n    safeTransaction.data.refundReceiver,\n    safeTransaction.encodedSignatures(),\n    { gasLimit: gasLimit + 30000 }\n  )\n\n  return txResponse\n}\n","import { Provider, TransactionReceipt } from '@ethersproject/providers'\n\nexport const transactionListener = (web3Provider: Provider, tx: string) =>\n  new Promise((resolve, reject) => {\n    const checkInterval = setInterval(() =>\n      web3Provider.getTransactionReceipt(tx)\n        .then((response: TransactionReceipt) => {\n          if (response) {\n            clearInterval(checkInterval)\n            response.status && response.status === 1 ? resolve(response) : reject(new Error('Transaction Failed'))\n          }\n        })\n        .catch((err: Error) => reject(err))\n    , 2000)\n  })\n","import React, { ReactNode } from 'react'\n\ninterface Interface {\n  handleClose?: () => void\n  children: ReactNode\n}\n\nconst Modal: React.FC<Interface> = ({ handleClose, children }) => {\n  return (\n    <div className=\"modal\">\n      <div className=\"modalBody\">\n        <div className=\"modalHeader\">\n          {handleClose && <button className=\"close\" onClick={handleClose}>x</button>}\n        </div>\n        <div className=\"modalContent\">\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","import React from 'react'\n\ninterface Interface {\n  address?: string\n  tx?: string\n}\n\nconst ViewExplorerButton: React.FC<Interface> = ({ address, tx }) => {\n  const url = address ? `address/${address.toLowerCase()}` : `tx/${tx}`\n  return (\n    <a\n      href={`http://explorer.testnet.rsk.co/${url}`}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      className=\"icon explorerLink\"\n    >\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0H16V16H0z\"></path><path className=\"icon-color\" fillRule=\"nonzero\" d=\"M13 13v-2c0-.552.448-1 1-1s1 .448 1 1v2c0 1.105-.895 2-2 2H3c-1.105 0-2-.895-2-2V3c0-1.105.895-2 2-2h2c.552 0 1 .448 1 1s-.448 1-1 1H3v10h10z\"></path><path className=\"icon-color\" d=\"M11.586 3H9c-.552 0-1-.448-1-1s.448-1 1-1h5c.276 0 .526.112.707.293.181.18.293.43.293.707v5c0 .552-.448 1-1 1s-1-.448-1-1V4.414l-6.243 6.243c-.39.39-1.023.39-1.414 0-.39-.39-.39-1.024 0-1.414L11.586 3z\"></path></g></svg>\n    </a>\n  )\n}\n\nexport default ViewExplorerButton\n","import React from 'react'\nimport Modal from '../../../components/Modal'\nimport ViewExplorerButton from '../../../components/ViewExplorerButton'\n\ninterface Interface {\n  handleClose: () => void\n  hash: string\n}\n\nconst ApprovedModal: React.FC<Interface> = ({ hash, handleClose }) => {\n  if (hash === 'LOADING') {\n    return (\n      <Modal>\n        <h2>Transaction pending...</h2>\n      </Modal>\n    )\n  }\n\n  return (\n    <Modal handleClose={handleClose}>\n      <h2>Transaction Approved</h2>\n      <p>Your signature has been added to this transaction! This is the hash of the transaction:</p>\n      <p>\n        <input type=\"text\" defaultValue={hash} />\n        <ViewExplorerButton tx={hash} />\n      </p>\n      <p><button onClick={handleClose}>Close modal</button></p>\n    </Modal>\n  )\n}\n\nexport default ApprovedModal\n","import React from 'react'\nimport Modal from '../../../components/Modal'\nimport ViewExplorerButton from '../../../components/ViewExplorerButton'\n\ninterface Interface {\n  handleClose: () => void\n  hash: string\n}\n\nconst ExecutedModal: React.FC<Interface> = ({ handleClose, hash }) => {\n  if (hash === 'LOADING') {\n    return (\n      <Modal>\n        <h2>Transaction pending...</h2>\n      </Modal>\n    )\n  }\n\n  return (\n    <Modal handleClose={handleClose}>\n      <h2>Transaction executed</h2>\n      <p>This is the hash of the transaction:</p>\n      <p>\n        <input type=\"text\" defaultValue={hash} />\n        <ViewExplorerButton tx={hash} />\n      </p>\n      <p><button onClick={handleClose}>Close modal</button></p>\n    </Modal>\n  )\n}\n\nexport default ExecutedModal\n","import React, { useRef } from 'react'\n\ninterface CopyButtonInterface {\n  value: string\n}\n\nconst CopyButton: React.FC<CopyButtonInterface> = ({ value }) => {\n  const copyTextField = useRef<HTMLInputElement>(null)\n\n  const handleClick = () => {\n    copyTextField.current && copyTextField.current.select()\n    document.execCommand('copy')\n  }\n\n  return (\n    <span className=\"copyButton\">\n      <button type=\"button\" className=\"icon\" onClick={handleClick}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0H16V16H0z\"></path><path className=\"icon-color\" fillRule=\"nonzero\" d=\"M10 10h3V3H8v1c1.105 0 2 .895 2 2v4zM6 4V3c0-1.105.895-2 2-2h5c1.105 0 2 .895 2 2v7c0 1.105-.895 2-2 2h-3v1c0 1.105-.895 2-2 2H3c-1.105 0-2-.895-2-2V6c0-1.105.895-2 2-2h3zM3 6v7h5V6H3z\"></path></g></svg>\n      </button>\n\n      <input\n        type=\"text\"\n        className=\"copyText\"\n        defaultValue={value}\n        ref={copyTextField}\n        style={{ position: 'absolute', left: '-10000px' }}\n      />\n    </span>\n  )\n}\n\nexport default CopyButton\n","import React from 'react'\nimport CopyValueButton from './CopyValueButton'\nimport ViewExplorerButton from './ViewExplorerButton'\n\ninterface Interface {\n  value: string\n}\n\nconst ValueWithButtons: React.FC<Interface> = ({ value }) => {\n  return (\n    <>\n      {value}\n      <CopyValueButton value={value} />\n      <ViewExplorerButton address={value} />\n    </>\n  )\n}\n\nexport default ValueWithButtons\n","export default __webpack_public_path__ + \"static/media/refresh.7a8b3bf4.svg\";","import { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport React, { useEffect, useState } from 'react'\nimport ValueWithButtons from '../../../components/ValueWithButtons'\nimport refreshIcon from '../../../images/refresh.svg'\n\nimport safeAbi from '@gnosis.pm/safe-core-sdk/dist/src/abis/SafeAbiV1-2-0.json'\nimport erc20Abi from '../assets/erc20.json'\nimport InputDataDecoder from 'ethereum-input-data-decoder'\nimport { TransactionBundle } from '..'\nimport ViewExplorerButton from '../../../components/ViewExplorerButton'\n\ninterface Interface {\n  safe: Safe\n  transactionBundle: TransactionBundle\n  walletAddress: string\n  approveTransactionHash?: (transaction: SafeTransaction) => Promise<any>\n  executeTransaction?: (transactionBundle: TransactionBundle) => void\n  handleError?: (error: Error) => void\n}\n\nconst TransactionDetailComponent: React.FC<Interface> = ({\n  safe, transactionBundle, walletAddress, handleError, approveTransactionHash, executeTransaction\n}) => {\n  const { transaction, hash } = transactionBundle\n\n  const [showDetails, setShowDetails] = useState<boolean>(false)\n  const [signatures, setSignatures] = useState<string[]>([])\n  const [threshold, setThreshold] = useState<number>(0)\n  const [isRefreshing, setIsRefreshing] = useState<boolean>(false)\n  const [formatted, setFormatted] = useState<any>(null)\n\n  useEffect(() => {\n    safe.getTransactionHash(transaction).then((txHash: string) => {\n      getApprovals(txHash)\n\n      // try to decode the data\n      const formatted = new InputDataDecoder(safeAbi).decodeData(transaction.data.data)\n      if (formatted.method) {\n        setFormatted(formatted)\n      } else {\n        setFormatted(new InputDataDecoder(erc20Abi).decodeData(transaction.data.data))\n      }\n    })\n\n    safe.getThreshold().then((safeThreshold: number) => setThreshold(safeThreshold))\n  }, [transaction])\n\n  const getApprovals = (txHash: string) => {\n    setIsRefreshing(true)\n    safe.getOwnersWhoApprovedTx(txHash)\n      .then((signers: string[]) => setSignatures(signers))\n      .catch(handleError)\n      .finally(() => setIsRefreshing(false))\n  }\n\n  const getTransactionName = () => {\n    if (transaction.data.data === '0x') {\n      return 'Send Value'\n    } else if (formatted.method) {\n      return formatted.method\n    } else {\n      return 'unknown'\n    }\n  }\n\n  const handleApprove = () =>\n    approveTransactionHash && approveTransactionHash(transaction)\n      .then(() => getApprovals(hash))\n\n  const walletHasSigned = signatures.filter((value: string) => value.toLowerCase() === walletAddress.toLowerCase()).length === 1\n  const canExecute = threshold > signatures.length\n\n  return (\n    <div className=\"transaction\">\n      <div className=\"summary\">\n        <p><strong>{formatted && getTransactionName()}</strong></p>\n        <p><strong>to: </strong>\n          {transaction.data.to === safe.getAddress() && <em>(Safe) </em>}\n          <ValueWithButtons value={transaction.data.to} />\n        </p>\n        {transaction.data.value !== '0' && <p><strong>value: </strong>{transaction.data.value}</p>}\n        <p><strong>approvals: </strong>\n          {isRefreshing ? 'loading...' : `${signatures.length} out of ${threshold}`}\n          <button className=\"icon\" onClick={() => getApprovals(hash)}>\n            <img src={refreshIcon} alt=\"refresh\" />\n          </button>\n        </p>\n      </div>\n      <div className=\"buttons\">\n        <button\n          onClick={() => setShowDetails(!showDetails)}>{showDetails ? 'hide ' : 'show '}details</button>\n        {approveTransactionHash && <button\n          disabled={walletHasSigned}\n          onClick={handleApprove}>approve</button>}\n        {executeTransaction && <button\n          disabled={canExecute}\n          onClick={() => executeTransaction(transactionBundle)}>execute</button>}\n      </div>\n\n      {showDetails && (\n        <table><tbody>\n          <tr>\n            <th>Transaction Hash</th>\n            <td>\n              <p>{hash}<ViewExplorerButton tx={hash} /></p>\n            </td>\n          </tr>\n          <tr>\n            <th>Nonce</th>\n            <td><p>{transaction.data.nonce}</p></td>\n          </tr>\n          {transaction.data.data !== '0x' && (\n            <>\n              <tr>\n                <th>Raw Data</th>\n                <td><p className=\"data\">{transaction.data.data}</p></td>\n              </tr>\n              <tr>\n                <th>Decoded Data</th>\n                <td>\n                  <pre>{JSON.stringify(formatted, null, 2)}</pre>\n                </td>\n              </tr>\n            </>\n          )}\n          <tr>\n            <th>Approvals:</th>\n            <td>\n              {signatures.length === 0 ? <p><em>No signatures</em></p> : (\n                <ol >\n                  {signatures.map((approval: string) =>\n                    <li key={approval}>\n                      <ValueWithButtons value={approval} />\n                      {walletAddress.toLowerCase() === approval.toLowerCase() && <em>(Connected Account)</em>}\n                    </li>)}\n                </ol>\n              )}\n            </td>\n          </tr>\n        </tbody></table>\n      )}\n    </div>\n  )\n}\n\nexport default TransactionDetailComponent\n","import { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport { ContractTransaction } from 'ethers'\nimport React, { useState } from 'react'\nimport { TransactionBundle } from '..'\nimport { executeRskTransaction } from '../../../helpers/executeTransaction'\nimport { transactionListener } from '../../../helpers/transactionListener'\nimport ApprovedModal from './ApprovedModal'\nimport ExecutedModal from './ExecutedModal'\nimport TransactionDetailComponent from './TransactionDetailComponent'\n\ninterface Interface {\n  safe: Safe\n  handleError: (err: Error) => void\n  updateTransactionStatus: (transaction: TransactionBundle) => void\n  transactions: TransactionBundle[]\n  walletAddress: string\n}\n\nconst TransactionsPanel: React.FC<Interface> = ({ safe, handleError, updateTransactionStatus, walletAddress, transactions }) => {\n  const [showApprovedModal, setShowApprovedModal] = useState<string | null>(null)\n  const [showExecutedModal, setShowExecutedModal] = useState<string | null>(null)\n\n  const pendingTransactions: TransactionBundle[] = []\n  const executedTransactions: TransactionBundle[] = []\n\n  transactions.map((bundle: TransactionBundle) =>\n    bundle.status === 'PENDING' ? pendingTransactions.push(bundle) : executedTransactions.push(bundle))\n\n  // Sign transaction \"on-chain\"\n  const approveTransactionHash = (transaction: SafeTransaction) => {\n    setShowApprovedModal('LOADING')\n\n    return safe.getTransactionHash(transaction)\n      .then((hash: string) =>\n        safe.approveTransactionHash(hash)\n          .then((result: ContractTransaction) => transactionListener(safe.getProvider(), result.hash))\n          .then((receipt: any) => setShowApprovedModal(receipt.transactionHash)))\n      .catch((err: Error) => {\n        setShowApprovedModal(null)\n        handleError(err)\n      })\n  }\n\n  // Execute transaction\n  const executeTransaction = (transactionBundle: TransactionBundle) => {\n    setShowExecutedModal('LOADING')\n\n    executeRskTransaction(safe, transactionBundle.transaction)\n      .then((result: ContractTransaction) => transactionListener(safe.getProvider(), result.hash))\n      .then((receipt: any) => {\n        setShowExecutedModal(receipt.transactionHash)\n        updateTransactionStatus(transactionBundle)\n      })\n      .catch((err: Error) => {\n        setShowExecutedModal(null)\n        handleError(err)\n      })\n  }\n\n  return (\n    <>\n      <section className=\"panel\">\n        <h2>Transactions</h2>\n        {pendingTransactions.length === 0 && executedTransactions.length === 0 && (\n          <p><em>There are no transactions.</em></p>\n        )}\n        {pendingTransactions.length !== 0 && (\n          <>\n            <h3>Pending Transactions</h3>\n            {pendingTransactions.map((transaction: TransactionBundle, index: number) =>\n              <TransactionDetailComponent\n                safe={safe}\n                transactionBundle={transaction}\n                handleError={handleError}\n                approveTransactionHash={approveTransactionHash}\n                executeTransaction={executeTransaction}\n                walletAddress={walletAddress}\n                key={index}\n              />\n            )}\n          </>\n        )}\n\n        {executedTransactions.length !== 0 && (\n          <>\n            <h3>Executed Transactions</h3>\n            {executedTransactions.map((transaction: TransactionBundle, index: number) =>\n              <TransactionDetailComponent\n                safe={safe}\n                transactionBundle={transaction}\n                walletAddress={walletAddress}\n                key={index}\n              />\n            )}\n          </>\n        )}\n      </section>\n\n      {showApprovedModal && <ApprovedModal hash={showApprovedModal} handleClose={() => setShowApprovedModal(null)} />}\n      {showExecutedModal && <ExecutedModal hash={showExecutedModal} handleClose={() => setShowExecutedModal(null)} />}\n    </>\n  )\n}\n\nexport default TransactionsPanel\n","import { Safe } from '@gnosis.pm/safe-core-sdk'\nimport React, { useEffect, useState } from 'react'\nimport ValueWithButtons from '../../components/ValueWithButtons'\nimport refreshIcon from '../../images/refresh.svg'\n\ninterface Interface {\n  safe: Safe\n}\n\nconst Dashboard: React.FC<Interface> = ({ safe }) => {\n  const [balance, setBalance] = useState<number>(0)\n\n  useEffect(() => {\n    getBalance()\n  }, [safe])\n\n  const getBalance = () => safe.getBalance().then((balance: any) => setBalance(balance))\n\n  return (\n    <section className=\"panel\">\n      <h2>Safe Dashboard</h2>\n      <table>\n        <tbody>\n          <tr>\n            <th>Safe Address</th>\n            <td><ValueWithButtons value={safe.getAddress()} /></td>\n          </tr>\n          <tr className=\"text\">\n            <th>Balance</th>\n            <td>\n              {(balance / 1000000000000000000).toString()}\n              <button onClick={getBalance} className=\"icon\"><img src={refreshIcon} alt=\"Refresh\" /></button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </section>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\n\ninterface Interface {\n  value: number\n  onChange: (value: number) => void\n  numberOfOwners: number\n}\n\nconst ThresholdDropdown: React.FC<Interface> = ({ value, onChange, numberOfOwners }) => {\n  const options = []\n  for (let index = 1; index <= numberOfOwners; index++) {\n    options.push(index)\n  }\n\n  const handleChange = (evt: any) => onChange(parseInt(evt.target.value))\n\n  return (\n    <select value={value} onChange={handleChange}>\n      {options.map((number: number) => <option key={number} value={number}>{number}</option>)}\n    </select>\n  )\n}\n\nexport default ThresholdDropdown\n","import React, { useState } from 'react'\nimport ThresholdDropdown from '../../../components/ThresholdDropdown'\n\ninterface Interface {\n  numberOfOwners: number\n  currentThreshold: number\n  handleSubmit: (newThreshold: number) => void\n}\n\nconst ChangeThresholdModal: React.FC<Interface> = ({ numberOfOwners, currentThreshold, handleSubmit }) => {\n  const [newThreshold, setNewThreshold] = useState<number>(currentThreshold)\n\n  const options = []\n  for (let index = 1; index <= numberOfOwners; index++) {\n    options.push(index)\n  }\n\n  return (\n    <div>\n      <h3>Change threshold</h3>\n      <p>Change the number of approvers for a transaction to be executed</p>\n      <label>New threshold:</label>\n      <ThresholdDropdown\n        numberOfOwners={numberOfOwners}\n        value={newThreshold}\n        onChange={(value: number) => setNewThreshold(value)}\n      />\n\n      <p><button onClick={() => handleSubmit(newThreshold)}>Change threshold</button></p>\n    </div>\n  )\n}\n\nexport default ChangeThresholdModal\n","import { isAddress } from '@ethersproject/address'\nimport React, { useState } from 'react'\nimport ThresholdDropdown from '../../../components/ThresholdDropdown'\n\ninterface Interface {\n  numberOfOwners: number\n  handleSubmit: (newOwner: string, newThreshold: number) => void\n  handleError: (err: Error) => void\n}\n\nconst AddOwnerModal: React.FC<Interface> = ({ handleSubmit, handleError, numberOfOwners }) => {\n  const [newOwner, setNewOwner] = useState<string>('')\n  const [newThreshold, setNewThreshold] = useState<number>(numberOfOwners)\n\n  const validateAddress = () => {\n    isAddress(newOwner.toLowerCase())\n      ? handleSubmit(newOwner.toLowerCase(), newThreshold)\n      : handleError(new Error('Value is not an address.'))\n  }\n\n  return (\n    <div>\n      <h3>Add new owner</h3>\n      <label>\n        Address</label>\n      <input type=\"text\" className=\"newOwner\" value={newOwner} onChange={evt => setNewOwner(evt.target.value)} />\n\n      <label>New Threshold</label>\n      <ThresholdDropdown\n        numberOfOwners={numberOfOwners + 1}\n        value={newThreshold}\n        onChange={(value: number) => setNewThreshold(value)}\n      />\n\n      <p><button onClick={validateAddress}>Update</button></p>\n    </div>\n  )\n}\n\nexport default AddOwnerModal\n","import React, { useState } from 'react'\nimport ThresholdDropdown from '../../../components/ThresholdDropdown'\n\ninterface Interface {\n  numberOfOwners: number\n  handleSubmit: (address: string, threshold: number) => void\n  removeAddress: string\n}\n\nconst RemoveOwnerModal: React.FC<Interface> = ({ numberOfOwners, handleSubmit, removeAddress }) => {\n  const [threshold, setThreshold] = useState<number>(numberOfOwners - 1)\n\n  return (\n    <div>\n      <h3>Remove owner</h3>\n      <p>Are you sure you want to remove this owner?</p>\n      <input type=\"text\" defaultValue={removeAddress} />\n\n      <p>\n        <label>New threshold:</label>\n        <ThresholdDropdown\n          numberOfOwners={numberOfOwners - 1}\n          value={threshold}\n          onChange={(value: number) => setThreshold(value)} />\n      </p>\n\n      <p><button onClick={() => handleSubmit(removeAddress.toLowerCase(), threshold)}>Remove</button></p>\n    </div>\n  )\n}\n\nexport default RemoveOwnerModal\n","import { isAddress } from '@ethersproject/address'\nimport React, { useState } from 'react'\n\ninterface Interface {\n  handleError: (err: Error) => void\n  handleSubmit: (oldOwner: string, newOwner: string) => void\n  oldAddress: string\n}\n\nconst SwapOwnerModal: React.FC<Interface> = ({ oldAddress, handleError, handleSubmit }) => {\n  const [newOwner, setNewOwner] = useState<string>('')\n\n  const validateAddress = () =>\n    isAddress(newOwner)\n      ? handleSubmit(oldAddress, newOwner.toLowerCase())\n      : handleError(new Error('Address is not valid'))\n\n  return (\n    <div>\n      <h3>Swap Owner</h3>\n      <p>Swap address for a new one.</p>\n      <label>Old Address:</label>\n      <input type=\"text\" defaultValue={oldAddress} />\n      <label>New Owner</label>\n      <input type=\"text\" className=\"newAddress\" value={newOwner} onChange={evt => setNewOwner(evt.target.value)} />\n\n      <p><button onClick={validateAddress}>Swap Address</button></p>\n    </div>\n  )\n}\n\nexport default SwapOwnerModal\n","export default __webpack_public_path__ + \"static/media/delete.8970c03e.svg\";","export default __webpack_public_path__ + \"static/media/swap.29d1f400.svg\";","export default __webpack_public_path__ + \"static/media/edit.d3af4af9.svg\";","import React, { useEffect, useState } from 'react'\nimport { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport ValueWithButtons from '../../../components/ValueWithButtons'\nimport ChangeThresholdModal from './ChangeThresholdModal'\nimport AddOwnerModal from './AddOwnerModal'\nimport RemoveOwnerModal from './RemoveOwnerModal'\nimport SwapOwnerModal from './SwapOwnerModal'\nimport Modal from '../../../components/Modal'\nimport deleteIcon from '../../../images/delete.svg'\nimport swapIcon from '../../../images/swap.svg'\nimport editIcon from '../../../images/edit.svg'\n\ninterface Interface {\n  safe: Safe\n  handleError: (err: Error) => void\n  addTransaction: (transaction: SafeTransaction) => void\n}\n\nconst PolicyComponent: React.FC<Interface> = ({ safe, addTransaction, handleError }) => {\n  // Safe variables:\n  const [owners, setOwners] = useState<string[]>([])\n  const [threshold, setThreshold] = useState<number>(0)\n\n  // UI components:\n  const [addNewOwner, setAddNewOwner] = useState<boolean>(false)\n  const [changeThreshold, setChangeThreshold] = useState<boolean>(false)\n  const [removeOwner, setRemoveOwner] = useState<null | string>(null)\n  const [swapOwner, setSwapOwner] = useState<null | string>(null)\n\n  useEffect(() => {\n    safe.getOwners().then((owners: string[]) => setOwners(owners))\n    safe.getThreshold().then((result: number) => setThreshold(result))\n  }, [safe])\n\n  // Create transaction for changing the thresold:\n  const changeThresholdFunction = (newThreshold: number) =>\n    safe.getChangeThresholdTx(newThreshold)\n      .then((transaction: SafeTransaction) => {\n        addTransaction(transaction)\n        afterTransaction()\n      })\n      .catch(handleError)\n\n  // Add an owner and update threshold:\n  const addOwnerFunction = (newOwner: string, newThreshold: number) =>\n    safe.getAddOwnerTx(newOwner, newThreshold)\n      .then((transaction: SafeTransaction) => {\n        addTransaction(transaction)\n        afterTransaction()\n      })\n      .catch(handleError)\n\n  // remove an owner and update the threshold:\n  const removeOwnerFunction = (removeOwner: string, newThreshold: number) =>\n    safe.getRemoveOwnerTx(removeOwner, newThreshold)\n      .then((transaction: SafeTransaction) => {\n        addTransaction(transaction)\n        afterTransaction()\n      })\n      .catch(handleError)\n\n  // swap one owner for another:\n  const swapOwnerFunction = (swapOwner: string, newOwner: string) =>\n    safe.getSwapOwnerTx(swapOwner, newOwner)\n      .then((transaction: SafeTransaction) => {\n        addTransaction(transaction)\n        afterTransaction()\n      })\n      .catch(handleError)\n\n  // close ALL modals\n  const afterTransaction = () => {\n    setAddNewOwner(false)\n    setChangeThreshold(false)\n    setRemoveOwner(null)\n    setSwapOwner(null)\n  }\n\n  return (\n    <section className=\"section panel\">\n      <h2>Safe Policy</h2>\n      <table>\n        <tbody>\n          <tr>\n            <th>Owners</th>\n            <td>\n              <ul>\n                {owners.map((owner: string) => (\n                  <li key={owner} >\n                    <ValueWithButtons value={owner} />\n                    <button className=\"icon delete\" onClick={() => setRemoveOwner(owner)}>\n                      <img src={deleteIcon} alt=\"delete address\" />\n                    </button>\n                    <button className=\"icon\" onClick={() => setSwapOwner(owner)}>\n                      <img src={swapIcon} alt=\"swap address\" />\n                    </button>\n                  </li>\n                ))}\n              </ul>\n              <button onClick={() => setAddNewOwner(true)}>+ Add Owner</button>\n            </td>\n          </tr>\n          <tr className=\"text\">\n            <th>Threshold</th>\n            <td>\n              {threshold}\n              <button className=\"icon\" onClick={() => setChangeThreshold(true)}>\n                <img src={editIcon} alt=\"edit threshold\" />\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      {changeThreshold && <Modal handleClose={() => setChangeThreshold(false)}><ChangeThresholdModal numberOfOwners={owners.length} currentThreshold={threshold} handleSubmit={changeThresholdFunction} /></Modal>}\n      {addNewOwner && <Modal handleClose={() => setAddNewOwner(false)}><AddOwnerModal numberOfOwners={owners.length} handleSubmit={addOwnerFunction} handleError={handleError} /></Modal>}\n      {removeOwner && <Modal handleClose={() => setRemoveOwner(null)}><RemoveOwnerModal removeAddress={removeOwner} numberOfOwners={owners.length} handleSubmit={removeOwnerFunction} /></Modal>}\n      {swapOwner && <Modal handleClose={() => setSwapOwner(null)}><SwapOwnerModal oldAddress={swapOwner} handleSubmit={swapOwnerFunction} handleError={handleError} /></Modal>}\n    </section>\n  )\n}\n\nexport default PolicyComponent\n","import { isAddress } from '@ethersproject/address'\nimport React, { useState } from 'react'\n\ninterface Interface {\n  createTransaction: (recipient: string, amount: number) => void\n  handleError: (error: Error) => void\n}\n\nconst TransferValueModal: React.FC<Interface> = ({ createTransaction, handleError }) => {\n  const [recipient, setRecipient] = useState<string>('')\n  const [amount, setAmount] = useState<number>(10000)\n\n  const validateTransaction = () => {\n    if (!isAddress(recipient)) {\n      return handleError(new Error('Recipient is not an address.'))\n    }\n\n    createTransaction(recipient.toLowerCase(), amount)\n  }\n\n  return (\n    <>\n      <h3>Create Transaction</h3>\n      <p>\n        <label>Recepient:</label>\n        <input type=\"text\" className=\"to\" value={recipient} onChange={evt => setRecipient(evt.target.value)} />\n      </p>\n      <p>\n        <label>Amount:</label>\n        <input type=\"number\" className=\"amount\" value={amount} onChange={evt => setAmount(parseInt(evt.target.value))} />\n      </p>\n      <button className=\"submit\" onClick={validateTransaction}>Create Transaction</button>\n    </>\n  )\n}\n\nexport default TransferValueModal\n","import { isAddress } from '@ethersproject/address'\nimport React, { useState } from 'react'\nimport { Erc20Token } from '.'\n\ninterface Interface {\n  token: Erc20Token\n  handleError: (err: Error) => void\n  createTransaction: (token: Erc20Token, amount: number, to: string) => void\n}\n\nconst TransferTokenModal: React.FC<Interface> = ({ token, createTransaction, handleError }) => {\n  const [transaction, setTransaction] = useState<{amount: number, address: string}>({ amount: 0, address: '' })\n\n  const validateTransaction = () => {\n    if (!isAddress(transaction.address)) {\n      return handleError(new Error('Recipient is not an address.'))\n    }\n\n    if (transaction.amount > token.amount || transaction.amount < 1) {\n      return handleError(new Error(`Amount should be between 1 and ${token.amount}.`))\n    }\n\n    return createTransaction(token, transaction.amount, transaction.address.toLowerCase())\n  }\n\n  return (\n    <div>\n      <h2>Transfer ERC20 Token: {token.symbol}</h2>\n      <p>\n        <label>You have:</label>\n        <input type=\"text\" className=\"readonly\" defaultValue={token.amount} />\n      </p>\n      <p>\n        <label>Amount to sent:</label>\n        <input type=\"number\" className=\"amount\" value={transaction.amount} onChange={evt => setTransaction({ ...transaction, amount: parseInt(evt.target.value) })} />\n      </p>\n      <p>\n        <label>Recipient</label>\n        <input type=\"string\" className=\"recipient\" value={transaction.address} onChange={evt => setTransaction({ ...transaction, address: evt.target.value })} />\n      </p>\n\n      <p>\n        <button className=\"submit\" onClick={validateTransaction}>\n          Create Transaction\n        </button>\n      </p>\n    </div>\n  )\n}\n\nexport default TransferTokenModal\n","import local from './local.json'\nimport testnet from './testnet.json'\n\nexport const getContracts = (chainId: number) => {\n  switch (chainId) {\n    case 31: return testnet\n    default: return local\n  }\n}\n","import { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport { ERC20TransactionBuilder } from '@rsksmart/safe-transactions-sdk'\nimport { BigNumber, Contract } from 'ethers'\nimport React, { useEffect, useState } from 'react'\nimport Modal from '../../../components/Modal'\nimport TransferValueModal from './TransferValueModal'\nimport erc20Abi from './erc20.json'\nimport refreshIcon from '../../../images/refresh.svg'\nimport TransferTokenModal from './TransferTokenModal'\nimport { getContracts } from '../../../config'\n\ninterface Interface {\n  safe: Safe\n  handleError: (err: Error) => void\n  addTransaction: (transaction: SafeTransaction) => void\n}\n\nexport interface Erc20Token {\n  symbol: string\n  decimals: number\n  amount: number\n  contractAddress: string\n}\n\nconst AssetsComponent: React.FC<Interface> = ({ safe, addTransaction, handleError }) => {\n  const [showTransfer, setShowTransfer] = useState<boolean>(false)\n  const [showTokenTransfer, setShowTokenTransfer] = useState<Erc20Token | null>(null)\n\n  const [balance, setBalance] = useState<string>('0')\n  const [tokens, setTokens] = useState<any[]>([])\n\n  useEffect(() => {\n    getSafeBalance()\n\n    safe.getChainId().then((chainId: number) =>\n      getERC2Balance({ symbol: 'tRIF', decimals: 18, amount: 0, contractAddress: getContracts(chainId).rifToken }))\n  }, [safe])\n\n  const getSafeBalance = () => safe.getBalance().then((balance: BigNumber) => setBalance(balance.toString()))\n\n  const getERC2Balance = (token: Erc20Token) => {\n    const signer = safe.getSigner()\n    const contract = new Contract(token.contractAddress, erc20Abi, signer)\n    contract.balanceOf(safe.getAddress())\n      .then((result: BigNumber) => result.toString())\n      .then((result: string) => {\n        const updateToken = { ...token, amount: parseInt(result) / Math.pow(10, 18) }\n        const isListed = tokens.find((findToken: Erc20Token) => findToken.symbol === token.symbol)\n\n        const newTokenList = isListed\n          ? tokens.map((findToken: Erc20Token) => findToken.symbol === token.symbol ? updateToken : findToken)\n          : [...tokens, updateToken]\n\n        setTokens(newTokenList)\n      })\n      .catch((err: Error) => console.log('error', err))\n  }\n\n  // Create transaction to send rbtc or data\n  const createTransaction = (to: string, amount: number) =>\n    safe.createTransaction({\n      to,\n      value: amount.toString(),\n      data: '0x'\n    })\n      .then((transaction: SafeTransaction) => addTransaction(transaction))\n      .catch(handleError)\n      .finally(() => setShowTransfer(false))\n\n  // Create transaction to send an ERC20 token:\n  const createTokenTransaction = (token: Erc20Token, amount: number, to: string) => {\n    const contract = new Contract(token.contractAddress, erc20Abi, safe.getSigner())\n    const txBuilder = new ERC20TransactionBuilder(safe, contract)\n\n    const bigAmount = BigNumber.from(amount).mul(BigNumber.from(10).pow(token.decimals))\n\n    txBuilder.transfer(to, bigAmount)\n      .then((transaction: SafeTransaction) => addTransaction(transaction))\n      .catch(handleError)\n      .finally(() => setShowTokenTransfer(null))\n  }\n\n  return (\n    <>\n      <div className=\"panel\">\n        <h2>Assets</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Asset</th>\n              <th>Amount</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td><p>rBTC</p></td>\n              <td>\n                <p>\n                  {(parseInt(balance) / 1000000000000000000).toString()}\n                  <button className=\"icon\" onClick={getSafeBalance}>\n                    <img src={refreshIcon} alt=\"refresh balance\" />\n                  </button>\n                  <button className=\"icon\" onClick={() => setShowTransfer(true)}>transfer</button>\n                </p>\n              </td>\n            </tr>\n            {tokens.map((token: any) => (\n              <tr key={token.contractAddress}>\n                <td><p>{token.symbol}</p></td>\n                <td>\n                  {token.amount}\n                  <button className=\"icon\" onClick={() => getERC2Balance(token)}>\n                    <img src={refreshIcon} alt=\"refresh balance\" />\n                  </button>\n                  <button className=\"icon\" onClick={() => setShowTokenTransfer(token)}>\n                    transfer\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      {showTransfer && (\n        <Modal handleClose={() => setShowTransfer(false)}>\n          <TransferValueModal\n            createTransaction={createTransaction}\n            handleError={handleError}\n          />\n        </Modal>\n      )}\n      {showTokenTransfer && (\n        <Modal handleClose={() => setShowTokenTransfer(null)}>\n          <TransferTokenModal\n            token={showTokenTransfer}\n            handleError={handleError}\n            createTransaction={createTokenTransaction}\n          />\n        </Modal>\n      )}\n    </>\n  )\n}\n\nexport default AssetsComponent\n","import React from 'react'\nimport Modal from './Modal'\n\ninterface Interface {\n  closeModal: () => void\n  changeScreen: () => void\n}\n\nconst TransactionCreatedModal: React.FC<Interface> = ({ closeModal, changeScreen }) => {\n  return (\n    <Modal handleClose={closeModal}>\n      <h2>Transaction Created</h2>\n      <p>A transaction has been created and added to the transaction panel. You can sign the transaction there, and when enough signatures are collected, execute it.</p>\n      <p>\n        <button onClick={changeScreen}>View Transactions</button>\n      </p>\n    </Modal>\n  )\n}\n\nexport default TransactionCreatedModal\n","import React, { useState, MouseEvent } from 'react'\nimport { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport Navigation from './Navigation'\nimport TransactionsPanel from './transactions'\nimport Dashboard from './Dashboard'\nimport PolicyComponent from './policies'\nimport AssetsComponent from './assets'\nimport TransactionCreatedModal from '../../components/TransactionCreatedModal'\n\ninterface Interface {\n  safe: Safe\n  walletAddress: string\n  handleLogout: () => void\n  handleError: (err: Error) => void\n}\n\n// Wrapper for transaction to keep track of the status, and hash to be used as an identifier\nexport interface TransactionBundle {\n  transaction: SafeTransaction\n  hash: string\n  status: 'PENDING' | 'EXECUTED'\n}\n\nconst SafeInteraction: React.FC<Interface> = ({ safe, walletAddress, handleError, handleLogout }) => {\n  // UI Only\n  const [selectedTab, setSelectedTab] = useState<string>('dashboard')\n  const [showTransactionInfo, setShowTransactionInfo] = useState<boolean>(false)\n  const changeActive = (evt: MouseEvent<HTMLButtonElement>) => setSelectedTab(evt.currentTarget.id)\n\n  // Transaction Management, pending transactions:\n  const [transactions, setTransactions] = useState<TransactionBundle[]>([])\n  const addTransaction = (transaction: SafeTransaction) => {\n    // get the hash to be used as an identifier\n    safe.getTransactionHash(transaction)\n      .then((hash: string) => {\n        setTransactions([...transactions, { status: 'PENDING', transaction, hash }])\n        setShowTransactionInfo(true)\n      })\n  }\n\n  // update a transaction to 'EXECUTED'\n  const updateTransactionStatus = (transactionBundle: TransactionBundle) => {\n    const newTransactionList = transactions.map((item: TransactionBundle) =>\n      item.hash === transactionBundle.hash ? { ...item, status: 'EXECUTED' } : item\n    )\n    setTransactions(newTransactionList as TransactionBundle[])\n  }\n\n  const closeModalAndSwitchScreen = () => {\n    setShowTransactionInfo(false)\n    setSelectedTab('transactions')\n  }\n\n  return (\n    <section className=\"selectedSafe\">\n      <Navigation handleLogout={handleLogout} changeActive={changeActive} selected={selectedTab} />\n      {selectedTab === 'dashboard' && <Dashboard safe={safe} />}\n      {selectedTab === 'transactions' && <TransactionsPanel safe={safe} transactions={transactions} handleError={handleError} updateTransactionStatus={updateTransactionStatus} walletAddress={walletAddress} />}\n      {selectedTab === 'assets' && <AssetsComponent safe={safe} handleError={handleError} addTransaction={addTransaction} />}\n      {selectedTab === 'policy' && <PolicyComponent safe={safe} addTransaction={addTransaction} handleError={handleError} />}\n\n      {showTransactionInfo && <TransactionCreatedModal closeModal={() => setShowTransactionInfo(false)} changeScreen={closeModalAndSwitchScreen} />}\n    </section>\n  )\n}\n\nexport default SafeInteraction\n","import React, { useState } from 'react'\nimport { isAddress } from '@ethersproject/address'\n\ninterface Interface {\n  connectAddress: string | null\n  handleError: (error: Error) => void\n  createSafe: (addresses: string[], threshold: number) => void\n}\n\nconst CreateSafeComponent: React.FC<Interface> = ({ connectAddress, createSafe, handleError }) => {\n  const [addresses, setAddresses] = useState<string[]>([connectAddress ? connectAddress.toLowerCase() : ''])\n  const [threshold, setThreshold] = useState<number>(1)\n\n  const changeAddressValue = (evt: any) => {\n    const changeIndex = parseInt(evt.target.id.replace('address', ''))\n    const updateList = addresses.map((item: string, index: number) => index === changeIndex ? evt.target.value.toLowerCase() : item)\n    setAddresses(updateList)\n  }\n\n  const removeAddress = (changeIndex: number) => {\n    const updateList = addresses.filter((_item: string, index: number) => index !== changeIndex)\n    setAddresses(updateList)\n  }\n\n  const validateSafeSettings = () => {\n    const errorList: number[] = []\n    addresses.forEach((address: string, index: number) => {\n      if (!isAddress(address)) {\n        errorList.push(index + 1)\n      }\n    })\n\n    if (errorList.length !== 0) {\n      handleError(new Error(`Incorrect Addresses for: ${errorList.toString()}`))\n      return false\n    }\n\n    createSafe(addresses, threshold)\n  }\n\n  const loopOptions = (length: number) => {\n    const items = []\n    for (let index = 0; index < length; index++) {\n      items.push(<option key={index} value={index + 1}>{index + 1}</option>)\n    }\n    return items\n  }\n\n  return (\n    <div>\n      <h4>Create a new safe</h4>\n      <p>\n        A safe can have any number of owners associated with it. Your connected address has been added as the first account.<br/>\n        Click the <em>Add address</em> button to add additional addresses, and the <em>delete button</em> to remove addresses.\n      </p>\n\n      <ul>\n        {addresses.map((address: string, index: number) => (\n          <li key={index}>\n            <label>Address {index + 1}: </label>\n            <input type=\"text\"\n              id={`address${index}`}\n              value={address}\n              onChange={changeAddressValue}\n              className={`address${index}`}\n            />\n            <button className={`removeAddress${index}`} onClick={() => removeAddress(index)}>delete</button>\n          </li>\n        ))}\n      </ul>\n      <button className=\"addAddress\" onClick={() => setAddresses([...addresses, ''])}>Add address</button>\n\n      <p>Transactions require the confirmation of at least{' '}\n        <select className=\"threshold\" value={threshold.toString()} onChange={evt => setThreshold(parseInt(evt.target.value))}>\n          {loopOptions(addresses.length)}\n        </select>\n        signatures.\n      </p>\n      <button className=\"submit\" disabled={addresses.length === 0} onClick={validateSafeSettings}>Create Safe</button>\n    </div>\n  )\n}\n\nexport default CreateSafeComponent\n","import React, { useState } from 'react'\n\ninterface Interface {\n  connectToSafe: (safeAddress: string) => void\n}\n\nconst ConnectToSafeComponent: React.FC<Interface> = ({ connectToSafe }) => {\n  const [safeAddress, setSafeAddress] = useState<string>('')\n\n  return (\n    <div>\n      <h3>Connect to an existing safe</h3>\n      <label>Safe address</label>\n      <input className=\"safeAddress\" type=\"text\" value={safeAddress} onChange={evt => setSafeAddress(evt.target.value)} />\n      <button className=\"connect\" onClick={() => connectToSafe(safeAddress)}>Connect</button>\n    </div>\n  )\n}\n\nexport default ConnectToSafeComponent\n","import React, { useState } from 'react'\nimport EthersSafe, { Safe } from '@gnosis.pm/safe-core-sdk'\nimport { EthersSafeFactory } from '@rsksmart/safe-factory-sdk'\nimport { ethers } from 'ethers'\n\nimport CreateSafeComponent from './CreateSafeComponent'\nimport ConnectToSafeComponent from './ConnectToSafeComponent'\nimport { getContracts } from '../../config'\n\ninterface Interface {\n  web3Provider: any\n  chainId: number\n  handleSetSafe: (safe: Safe | EthersSafe) => any\n  handleError: (error: Error) => void\n  address: string | null\n}\n\nconst ChooseSafe: React.FC<Interface> = ({ web3Provider, chainId, handleSetSafe, handleError, address }) => {\n  // UI variables\n  const [isCreate, setIsCreate] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n\n  // Create a new safe:\n  const createSafe = (addresses: string[], threshold: number) => {\n    setIsLoading(true)\n\n    const contracts = getContracts(chainId)\n    const provider = new ethers.providers.Web3Provider(web3Provider)\n\n    const signer = provider.getSigner()\n\n    const safeFactory = new EthersSafeFactory(\n      signer,\n      contracts.proxyFactoryAddress.toLowerCase(),\n      contracts.safeSingletonAddress.toLowerCase()\n    )\n\n    safeFactory.createSafe({ owners: addresses, threshold })\n      .then(handleSetSafe)\n      .catch(handleError)\n      .finally(() => setIsLoading(false))\n  }\n\n  // Connect to an existing safe:\n  const connectToSafe = (safeAddress: string) => {\n    setIsLoading(true)\n\n    const provider = new ethers.providers.Web3Provider(web3Provider)\n    const signer = provider.getSigner()\n\n    EthersSafe.create(ethers, safeAddress.toLowerCase(), signer)\n      .then((safe: any) => handleSetSafe(safe))\n      .catch(handleError)\n      .finally(() => setIsLoading(false))\n  }\n\n  return isLoading ? <div style={{ textAlign: 'center' }}>Loading...</div>\n    : (\n      <section className=\"connect panel\">\n        <h2>\n        Create a safe, or connect to an existing one\n          <button onClick={() => setIsCreate(!isCreate)}>\n            {isCreate ? 'Connect to Safe' : 'Create Safe'}\n          </button>\n        </h2>\n        {isCreate ? (\n          <CreateSafeComponent\n            createSafe={createSafe}\n            handleError={handleError}\n            connectAddress={address}\n          />\n        ) : (\n          <ConnectToSafeComponent\n            connectToSafe={connectToSafe}\n          />\n        )}\n      </section>\n    )\n}\n\nexport default ChooseSafe\n","import React, { useState } from 'react'\nimport RLogin from '@rsksmart/rlogin'\nimport { Safe } from '@gnosis.pm/safe-core-sdk'\n\nimport './styles/App.scss'\nimport Web3Provider from './pages/start/ConnectWalletComponent'\nimport ConnectedBar from './components/ConnectedBar'\nimport SafeInteraction from './pages/safeInteraction'\nimport ChooseSafe from './pages/connectToSafe'\n\nconst rLogin = new RLogin({\n  cacheProvider: false,\n  supportedChains: [31, 1337]\n})\n\nfunction App () {\n  const [error, setError] = useState<null | string>('')\n\n  // Web3Provider and Safe variables\n  const [rLoginResponse, setRLoginResponse] = useState<{ provider: any, disconnect: any } | null>(null)\n  const [safe, setSafe] = useState<Safe | null>(null)\n\n  // provider variables\n  const [address, setAddress] = useState<string | null>(null)\n  const [chainId, setChainId] = useState<number | null>(null)\n\n  const web3ProviderResponse = (response: any, address: string, chainId: number) => {\n    setRLoginResponse(response)\n    setAddress(address)\n    setChainId(chainId)\n\n    // listen for address change and update:\n    response.provider.on('accountsChanged', (accounts: string[]) => setAddress(accounts[0]))\n  }\n\n  const handleSetSafe = (safe: any) => {\n    setSafe(safe)\n    clearError()\n  }\n\n  const handleError = (error: Error) => error && setError(error.message)\n  const clearError = () => setError(null)\n\n  const handleLogout = () => {\n    rLoginResponse?.disconnect()\n    setRLoginResponse(null)\n    setSafe(null)\n    setError(null)\n    setAddress(null)\n    setChainId(null)\n  }\n\n  return (\n    <div className={rLoginResponse ? 'App' : 'App signin'}>\n      {!rLoginResponse ? (\n        <Web3Provider\n          rLogin={rLogin}\n          setRLoginResponse={web3ProviderResponse}\n          handleError={handleError}\n        />\n      ) : <ConnectedBar chainId={chainId} walletAddress={address} />\n      }\n\n      {error && (\n        <section className=\"error\">\n          <p>{error}</p>\n          <button onClick={clearError}>x</button>\n        </section>\n      )}\n\n      {rLoginResponse && chainId && !safe && (\n        <ChooseSafe\n          web3Provider={rLoginResponse.provider}\n          chainId={chainId}\n          handleSetSafe={handleSetSafe}\n          handleError={handleError}\n          address={address}\n        />\n      )}\n\n      {rLoginResponse && address && safe && (\n        <SafeInteraction\n          safe={safe}\n          walletAddress={address}\n          handleLogout={handleLogout}\n          handleError={handleError}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}