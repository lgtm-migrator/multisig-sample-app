{"version":3,"sources":["images/rif-safe.svg","images/powered-by-iov.svg","pages/start/ConnectWalletComponent.tsx","images/rif-safe-header.svg","components/ConnectedBar.tsx","pages/safeInteraction/Navigation.tsx","components/Modal.tsx","components/ViewExplorerButton.tsx","pages/safeInteraction/transactions/ApprovedModal.tsx","pages/safeInteraction/transactions/ExecutedModal.tsx","components/CopyValueButton.tsx","components/ValueWithButtons.tsx","pages/safeInteraction/transactions/TransactionDetailComponent.tsx","pages/safeInteraction/transactions/index.tsx","pages/safeInteraction/Dashboard.tsx","components/ThresholdDropdown.tsx","pages/safeInteraction/policies/ChangeThresholdModal.tsx","pages/safeInteraction/policies/AddOwnerModal.tsx","pages/safeInteraction/policies/RemoveOwnerModal.tsx","pages/safeInteraction/policies/SwapOwnerModal.tsx","pages/safeInteraction/policies/index.tsx","pages/safeInteraction/index.tsx","pages/connectToSafe/CreateSafeComponent.tsx","pages/connectToSafe/ConnectToSafeComponent.tsx","pages/connectToSafe/index.tsx","config/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Web3Provider","rLogin","setRLoginResponse","handleError","className","src","rifSafeLogo","alt","onClick","connect","then","rLoginResponse","Promise","all","provider","request","method","response","parseInt","catch","poweredByLogo","ConnectedBar","walletAddress","chainId","slice","length","id","chainIdtoString","Navigation","changeActive","handleLogout","selected","Modal","handleClose","children","ViewExplorerButton","address","href","toLowerCase","target","rel","xmlns","width","height","viewBox","fill","fillRule","d","ApprovedModal","hash","type","defaultValue","ExecutedModal","CopyButton","value","copyTextField","useRef","current","select","document","execCommand","ref","style","position","left","ValueWithButtons","CopyValueButton","TransactionDetailComponent","safe","transaction","approveTransactionHash","executeTransaction","useState","showDetails","setShowDetails","setHash","signatures","setSignatures","threshold","setThreshold","useEffect","getTransactionHash","txHash","getApprovals","getThreshold","safeThreshold","getOwnersWhoApprovedTx","signers","data","to","disabled","filter","nonce","map","approval","TransactionsPanel","addTransaction","transactions","newTransaction","setNewTransaction","showApprovedModal","setShowApprovedModal","showExecutedModal","setShowExecutedModal","handleInputChange","evt","currentTarget","result","index","onChange","createTransaction","Dashboard","balance","setBalance","getBalance","getAddress","toString","ThresholdDropdown","numberOfOwners","options","push","number","ChangeThresholdModal","currentThreshold","handleSubmit","newThreshold","setNewThreshold","AddOwnerModal","newOwner","setNewOwner","isAddress","Error","RemoveOwnerModal","removeAddress","SwapOwnerModal","oldAddress","PolicyComponent","owners","setOwners","addNewOwner","setAddNewOwner","changeThreshold","setChangeThreshold","removeOwner","setRemoveOwner","swapOwner","setSwapOwner","showComplete","setShowComplete","getOwners","afterTransaction","owner","getChangeThresholdTx","getAddOwnerTx","getRemoveOwnerTx","getSwapOwnerTx","SafeInteraction","selectedTab","setSelectedTab","setTransactions","CreateSafeComponent","connectAddress","createSafe","addresses","setAddresses","changeAddressValue","changeIndex","replace","updateList","item","_item","items","loopOptions","errorList","forEach","ConnectToSafeComponent","connectToSafe","safeAddress","setSafeAddress","ChooseSafe","web3Provider","handleSetSafe","isCreate","setIsCreate","isLoading","setIsLoading","textAlign","contracts","local","testnet","getContracts","signer","ethers","providers","getSigner","EthersSafeFactory","proxyFactoryAddress","safeSingletonAddress","finally","EthersSafe","create","RLogin","cacheProvider","supportedChains","App","error","setError","setSafe","setAddress","setChainId","message","clearError","on","accounts","disconnect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f3acb2a6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rif-safe.6d74aa93.svg\";","export default __webpack_public_path__ + \"static/media/powered-by-iov.a0397e40.svg\";","import React from 'react'\nimport { RLoginButton } from '@rsksmart/rlogin'\nimport rifSafeLogo from '../../images/rif-safe.svg'\nimport poweredByLogo from '../../images/powered-by-iov.svg'\n\ninterface Interface {\n  rLogin: any\n  setRLoginResponse: (response: any, address: string, chainId: number) => void\n  handleError: (error: Error) => void\n}\n\nconst Web3Provider: React.FC<Interface> = ({ rLogin, setRLoginResponse, handleError }) => {\n  const handleLogin = () =>\n    rLogin.connect()\n      .then((rLoginResponse: any) => {\n        Promise.all([\n          rLoginResponse.provider.request({ method: 'eth_accounts' }),\n          rLoginResponse.provider.request({ method: 'eth_chainId' })\n        ]).then((response: any) => {\n          setRLoginResponse(rLoginResponse, response[0][0], parseInt(response[1]))\n        })\n      })\n      .catch(handleError)\n\n  return (\n    <section className=\"login\">\n      <img src={rifSafeLogo} alt=\"RIF Safe\" />\n      <h2>Login with your wallet</h2>\n      <p><RLoginButton onClick={handleLogin}>Connect with rLogin!</RLoginButton></p>\n      <img src={poweredByLogo} alt=\"Powered by IOV Labs\" />\n      <p className=\"legal\">Copyright © 2021 IOV Labs. All rights reserved.</p>\n    </section>\n  )\n}\n\nexport default Web3Provider\n","export default __webpack_public_path__ + \"static/media/rif-safe-header.ac579ff7.svg\";","import React from 'react'\nimport rifSafeLogo from '../images/rif-safe-header.svg'\n\ninterface Interface {\n  chainId: number | null\n  walletAddress: string | null\n}\n\nconst ConnectedBar: React.FC<Interface> = ({ walletAddress, chainId }) => {\n  const chainIdtoString = (id: number) => {\n    switch (id) {\n      case 31: return 'RSK Testnet'\n      case 30: return 'RSK Mainnet'\n      default: return 'Local'\n    }\n  }\n  return (\n    <section className=\"header\">\n      <ul className=\"inline\">\n        <li><img src={rifSafeLogo} alt=\"RIF Safe\" /></li>\n        {walletAddress && (\n          <li className=\"address\">\n            {`${walletAddress.slice(0, 8)}...${walletAddress.slice(walletAddress.length - 6)}`}\n          </li>\n        )}\n        <li className=\"chainId\"><span>{chainId && chainIdtoString(chainId)}</span></li>\n      </ul>\n    </section>\n  )\n}\n\nexport default ConnectedBar\n","import React, { MouseEvent } from 'react'\n\ninterface Interface {\n  handleLogout: () => void\n  changeActive: (event: MouseEvent<HTMLButtonElement>) => void\n  selected: string\n}\n\nconst Navigation: React.FC<Interface> = ({ changeActive, handleLogout, selected }) => {\n  return (\n    <ul className=\"navigation\">\n      <li><button id=\"dashboard\" className={selected === 'dashboard' ? 'selected' : ''} onClick={changeActive}>Dashboard</button></li>\n      <li><button id=\"transactions\" className={selected === 'transactions' ? 'selected' : ''} onClick={changeActive}>Transactions</button></li>\n      <li><button id=\"policy\" className={selected === 'policy' ? 'selected' : ''} onClick={changeActive}>Policies</button></li>\n      <li className=\"logout\"><button onClick={handleLogout}>Disconnect Wallet</button></li>\n    </ul>\n  )\n}\n\nexport default Navigation\n","import React, { ReactNode } from 'react'\n\ninterface Interface {\n  handleClose?: () => void\n  children: ReactNode\n}\n\nconst Modal: React.FC<Interface> = ({ handleClose, children }) => {\n  return (\n    <div className=\"modal\">\n      <div className=\"modalBody\">\n        <div className=\"modalHeader\">\n          {handleClose && <button className=\"close\" onClick={handleClose}>x</button>}\n        </div>\n        <div className=\"modalContent\">\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","import React from 'react'\n\ninterface Interface {\n  address: string\n}\n\nconst ViewExplorerButton: React.FC<Interface> = ({ address }) => {\n  return (\n    <a\n      href={`http://explorer.testnet.rsk.co/address/${address.toLowerCase()}`}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      className=\"explorerLink\"\n    >\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0H16V16H0z\"></path><path className=\"icon-color\" fillRule=\"nonzero\" d=\"M13 13v-2c0-.552.448-1 1-1s1 .448 1 1v2c0 1.105-.895 2-2 2H3c-1.105 0-2-.895-2-2V3c0-1.105.895-2 2-2h2c.552 0 1 .448 1 1s-.448 1-1 1H3v10h10z\"></path><path className=\"icon-color\" d=\"M11.586 3H9c-.552 0-1-.448-1-1s.448-1 1-1h5c.276 0 .526.112.707.293.181.18.293.43.293.707v5c0 .552-.448 1-1 1s-1-.448-1-1V4.414l-6.243 6.243c-.39.39-1.023.39-1.414 0-.39-.39-.39-1.024 0-1.414L11.586 3z\"></path></g></svg>\n    </a>\n  )\n}\n\nexport default ViewExplorerButton\n","import React from 'react'\nimport Modal from '../../../components/Modal'\nimport ViewExplorerButton from '../../../components/ViewExplorerButton'\n\ninterface Interface {\n  handleClose: () => void\n  hash: string\n}\n\nconst ApprovedModal: React.FC<Interface> = ({ hash, handleClose }) => {\n  return (\n    <Modal handleClose={handleClose}>\n      <h2>Transaction Approved</h2>\n      <p>Your signature has been added to this transaction! This is the hash of the transaction:</p>\n      <p>\n        <input type=\"text\" defaultValue={hash} />\n        <ViewExplorerButton address={hash} />\n      </p>\n      <p>Once it has been confirmed on the blockchain, you will see it under approvals.</p>\n      <p><button onClick={handleClose}>Close modal</button></p>\n    </Modal>\n  )\n}\n\nexport default ApprovedModal\n","import React from 'react'\nimport Modal from '../../../components/Modal'\nimport ViewExplorerButton from '../../../components/ViewExplorerButton'\n\ninterface Interface {\n  handleClose: () => void\n  hash: string\n}\n\nconst ExecutedModal: React.FC<Interface> = ({ handleClose, hash }) => {\n  return (\n    <Modal handleClose={handleClose}>\n      <h2>Transaction executed</h2>\n      <p>This is the hash of the transaction:</p>\n      <p>\n        <input type=\"text\" defaultValue={hash} />\n        <ViewExplorerButton address={hash} />\n      </p>\n      <p><button onClick={handleClose}>Close modal</button></p>\n    </Modal>\n  )\n}\n\nexport default ExecutedModal\n","import React, { useRef } from 'react'\n\ninterface CopyButtonInterface {\n  value: string\n}\n\nconst CopyButton: React.FC<CopyButtonInterface> = ({ value }) => {\n  const copyTextField = useRef<HTMLInputElement>(null)\n\n  const handleClick = () => {\n    copyTextField.current && copyTextField.current.select()\n    document.execCommand('copy')\n  }\n\n  return (\n    <span className=\"copyButton\">\n      <button type=\"button\" className=\"icon\" onClick={handleClick}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0H16V16H0z\"></path><path className=\"icon-color\" fillRule=\"nonzero\" d=\"M10 10h3V3H8v1c1.105 0 2 .895 2 2v4zM6 4V3c0-1.105.895-2 2-2h5c1.105 0 2 .895 2 2v7c0 1.105-.895 2-2 2h-3v1c0 1.105-.895 2-2 2H3c-1.105 0-2-.895-2-2V6c0-1.105.895-2 2-2h3zM3 6v7h5V6H3z\"></path></g></svg>\n      </button>\n\n      <input\n        type=\"text\"\n        className=\"copyText\"\n        defaultValue={value}\n        ref={copyTextField}\n        style={{ position: 'absolute', left: '-10000px' }}\n      />\n    </span>\n  )\n}\n\nexport default CopyButton\n","import React from 'react'\nimport CopyValueButton from './CopyValueButton'\nimport ViewExplorerButton from './ViewExplorerButton'\n\ninterface Interface {\n  value: string\n}\n\nconst ValueWithButtons: React.FC<Interface> = ({ value }) => {\n  return (\n    <>\n      {value}\n      <CopyValueButton value={value} />\n      <ViewExplorerButton address={value} />\n    </>\n  )\n}\n\nexport default ValueWithButtons\n","import { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport React, { useEffect, useState } from 'react'\nimport ValueWithButtons from '../../../components/ValueWithButtons'\n\ninterface Interface {\n  safe: Safe\n  transaction: SafeTransaction\n  walletAddress: string\n  approveTransactionHash: (transaction: SafeTransaction) => Promise<any>\n  executeTransaction: (transaction: SafeTransaction) => void\n  handleError: (error: Error) => void\n}\n\nconst TransactionDetailComponent: React.FC<Interface> = ({\n  safe, transaction, walletAddress, handleError, approveTransactionHash, executeTransaction\n}) => {\n  const [showDetails, setShowDetails] = useState<boolean>(false)\n  const [hash, setHash] = useState<string>('')\n  const [signatures, setSignatures] = useState<string[]>([])\n  const [threshold, setThreshold] = useState<number>(0)\n\n  useEffect(() => {\n    safe.getTransactionHash(transaction).then((txHash: string) => {\n      setHash(txHash)\n      getApprovals(txHash)\n    })\n\n    safe.getThreshold().then((safeThreshold: number) => setThreshold(safeThreshold))\n  }, [transaction])\n\n  const getApprovals = (txHash: string) => safe.getOwnersWhoApprovedTx(txHash)\n    .then((signers: string[]) => setSignatures(signers))\n    .catch(handleError)\n\n  return (\n    <div className=\"transaction\">\n      <div className=\"summary\">\n        <p><strong>to: </strong>\n          <ValueWithButtons value={transaction.data.to} />\n        </p>\n        <p><strong>value: </strong>{transaction.data.value}</p>\n        <p><strong>approvals: </strong>\n          {signatures.length} out of {threshold}\n          <button onClick={() => getApprovals(hash)}>refresh</button>\n        </p>\n      </div>\n      <div className=\"buttons\">\n        <button\n          onClick={() => setShowDetails(!showDetails)}>{showDetails ? 'hide ' : 'show '}details</button>\n        <button\n          disabled={signatures.filter((value: string) => value === walletAddress).length === 1}\n          onClick={() => approveTransactionHash(transaction)}>approve</button>\n        <button\n          disabled={threshold > signatures.length}\n          onClick={() => executeTransaction(transaction)}>execute</button>\n      </div>\n\n      {showDetails && (\n        <table>\n          <tr>\n            <th>Transaction Hash</th>\n            <td><ValueWithButtons value={hash} /></td>\n          </tr>\n          <tr>\n            <th>Nonce</th>\n            <td><p>{transaction.data.nonce}</p></td>\n          </tr>\n          <tr>\n            <th>Data</th>\n            <td><p className=\"data\">{transaction.data.data}</p></td>\n          </tr>\n          <tr>\n            <th>Approvals:</th>\n            <td>\n              {signatures.length === 0 ? <p><em>No signatures</em></p> : (\n                <ol>\n                  {signatures.map((approval: string) => <li key={approval}><ValueWithButtons value={approval} /></li>)}\n                </ol>\n              )}\n            </td>\n          </tr>\n        </table>\n      )}\n    </div>\n  )\n}\n\nexport default TransactionDetailComponent\n","import { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport { ContractTransaction } from 'ethers'\nimport React, { useState } from 'react'\nimport ApprovedModal from './ApprovedModal'\nimport ExecutedModal from './ExecutedModal'\nimport TransactionDetailComponent from './TransactionDetailComponent'\n\ninterface Interface {\n  safe: Safe\n  handleError: (err: Error) => void\n  transactions: SafeTransaction[]\n  addTransaction: (transaction: SafeTransaction) => void\n  walletAddress: string\n}\n\nconst TransactionsPanel: React.FC<Interface> = ({ safe, handleError, addTransaction, walletAddress, transactions }) => {\n  const [newTransaction, setNewTransaction] = useState<{ to: string, value: string, nonce: string }>({ to: '0x3dd03d7d6c3137f1eb7582ba5957b8a2e26f304a', value: '10000', nonce: '1' })\n\n  const [showApprovedModal, setShowApprovedModal] = useState<string | null>(null)\n  const [showExecutedModal, setShowExecutedModal] = useState<string | null>(null)\n\n  const handleInputChange = (evt: React.FormEvent<HTMLInputElement>) =>\n    setNewTransaction({\n      ...newTransaction,\n      [evt.currentTarget.id]: evt.currentTarget.value\n    })\n\n  // Create transaction to send rbtc\n  const createTransaction = () =>\n    safe.createTransaction({\n      to: newTransaction.to.toLowerCase(),\n      value: newTransaction.value,\n      nonce: parseInt(newTransaction.nonce),\n      data: '0x'\n    })\n      .then((transaction: SafeTransaction) => addTransaction(transaction))\n      .catch(handleError)\n\n  // Sign transaction \"on-chain\"\n  const approveTransactionHash = (transaction: SafeTransaction) =>\n    safe.getTransactionHash(transaction)\n      .then((hash: string) =>\n        safe.approveTransactionHash(hash)\n          .then((result: ContractTransaction) => setShowApprovedModal(result.hash))\n          .catch(handleError))\n\n  // Execute transaction\n  const executeTransaction = (transaction: SafeTransaction) =>\n    safe.executeTransaction(transaction)\n      .then((result: ContractTransaction) => {\n        setShowExecutedModal(result.hash)\n        // @todo move transaction from pending to confirmed ;-)\n      })\n      .catch(handleError)\n\n  return (\n    <>\n      <section className=\"panel\">\n        <h3>Pending Transactions</h3>\n        {transactions.map((transaction: SafeTransaction, index: number) =>\n          <TransactionDetailComponent\n            safe={safe}\n            transaction={transaction}\n            handleError={handleError}\n            approveTransactionHash={approveTransactionHash}\n            executeTransaction={executeTransaction}\n            walletAddress={walletAddress}\n            key={index}\n          />\n        )}\n      </section>\n\n      <section className=\"panel\">\n        <h3>Create Transaction</h3>\n        <p>\n          <label>Recepient:</label>\n          <input type=\"text\" id=\"to\" value={newTransaction.to} onChange={handleInputChange} />\n        </p>\n        <p>\n          <label>Value:</label>\n          <input type=\"number\" id=\"value\" value={newTransaction.value} onChange={handleInputChange} />\n        </p>\n        <p>\n          <label>Nonce:</label>\n          <input type=\"number\" id=\"nonce\" value={newTransaction.nonce} onChange={handleInputChange} />\n        </p>\n        <button onClick={createTransaction}>Create Transaction</button>\n      </section>\n\n      {showApprovedModal && <ApprovedModal hash={showApprovedModal} handleClose={() => setShowApprovedModal(null)} />}\n      {showExecutedModal && <ExecutedModal hash={showExecutedModal} handleClose={() => setShowExecutedModal(null)} />}\n    </>\n  )\n}\n\nexport default TransactionsPanel\n","import { Safe } from '@gnosis.pm/safe-core-sdk'\nimport React, { useEffect, useState } from 'react'\nimport ValueWithButtons from '../../components/ValueWithButtons'\n\ninterface Interface {\n  safe: Safe\n}\n\nconst Dashboard: React.FC<Interface> = ({ safe }) => {\n  const [balance, setBalance] = useState<number>(0)\n\n  useEffect(() => {\n    safe.getBalance().then((balance: any) => setBalance(balance))\n  }, [safe])\n\n  return (\n    <section className=\"panel\">\n      <h3>Safe Dashboard</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>Safe Address</th>\n            <td><ValueWithButtons value={safe.getAddress()} /></td>\n          </tr>\n          <tr className=\"text\">\n            <th>Balance</th>\n            <td>{(balance / 1000000000000000000).toString()}</td>\n          </tr>\n        </tbody>\n      </table>\n    </section>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\n\ninterface Interface {\n  value: number\n  onChange: (value: number) => void\n  numberOfOwners: number\n}\n\nconst ThresholdDropdown: React.FC<Interface> = ({ value, onChange, numberOfOwners }) => {\n  const options = []\n  for (let index = 1; index <= numberOfOwners; index++) {\n    options.push(index)\n  }\n\n  const handleChange = (evt: any) => onChange(parseInt(evt.target.value))\n\n  return (\n    <select value={value} onChange={handleChange}>\n      {options.map((number: number) => <option key={number} value={number}>{number}</option>)}\n    </select>\n  )\n}\n\nexport default ThresholdDropdown\n","import React, { useState } from 'react'\nimport ThresholdDropdown from '../../../components/ThresholdDropdown'\n\ninterface Interface {\n  numberOfOwners: number\n  currentThreshold: number\n  handleSubmit: (newThreshold: number) => void\n}\n\nconst ChangeThresholdModal: React.FC<Interface> = ({ numberOfOwners, currentThreshold, handleSubmit }) => {\n  const [newThreshold, setNewThreshold] = useState<number>(currentThreshold)\n\n  const options = []\n  for (let index = 1; index <= numberOfOwners; index++) {\n    options.push(index)\n  }\n\n  return (\n    <div>\n      <h3>Change threshold</h3>\n      <p>Change the number of approvers for a transaction to be executed</p>\n      <label>New threshold:</label>\n      <ThresholdDropdown\n        numberOfOwners={numberOfOwners}\n        value={newThreshold}\n        onChange={(value: number) => setNewThreshold(value)}\n      />\n\n      <p><button onClick={() => handleSubmit(newThreshold)}>Change threshold</button></p>\n    </div>\n  )\n}\n\nexport default ChangeThresholdModal\n","import { isAddress } from '@ethersproject/address'\nimport React, { useState } from 'react'\nimport ThresholdDropdown from '../../../components/ThresholdDropdown'\n\ninterface Interface {\n  numberOfOwners: number\n  handleSubmit: (newOwner: string, newThreshold: number) => void\n  handleError: (err: Error) => void\n}\n\nconst AddOwnerModal: React.FC<Interface> = ({ handleSubmit, handleError, numberOfOwners }) => {\n  const [newOwner, setNewOwner] = useState<string>('')\n  const [newThreshold, setNewThreshold] = useState<number>(numberOfOwners)\n\n  const validateAddress = () => {\n    isAddress(newOwner.toLowerCase())\n      ? handleSubmit(newOwner.toLowerCase(), newThreshold)\n      : handleError(new Error('Value is not an address.'))\n  }\n\n  return (\n    <div>\n      <h3>Add new owner</h3>\n      <label>\n        Address</label>\n      <input type=\"text\" className=\"newOwner\" value={newOwner} onChange={evt => setNewOwner(evt.target.value)} />\n\n      <label>New Threshold</label>\n      <ThresholdDropdown\n        numberOfOwners={numberOfOwners + 1}\n        value={newThreshold}\n        onChange={(value: number) => setNewThreshold(value)}\n      />\n\n      <p><button onClick={validateAddress}>Update</button></p>\n    </div>\n  )\n}\n\nexport default AddOwnerModal\n","import React, { useState } from 'react'\nimport ThresholdDropdown from '../../../components/ThresholdDropdown'\n\ninterface Interface {\n  numberOfOwners: number\n  handleSubmit: (address: string, threshold: number) => void\n  removeAddress: string\n}\n\nconst RemoveOwnerModal: React.FC<Interface> = ({ numberOfOwners, handleSubmit, removeAddress }) => {\n  const [threshold, setThreshold] = useState<number>(numberOfOwners - 1)\n\n  return (\n    <div>\n      <h3>Are you sure</h3>\n      <p>Are you sure you want to remove this owner?</p>\n      <input type=\"text\" defaultValue={removeAddress} />\n\n      <p>\n        <label>New threshold:</label>\n        <ThresholdDropdown\n          numberOfOwners={numberOfOwners - 1}\n          value={threshold}\n          onChange={(value: number) => setThreshold(value)} />\n      </p>\n\n      <p><button onClick={() => handleSubmit(removeAddress.toLowerCase(), threshold)}>Remove</button></p>\n    </div>\n  )\n}\n\nexport default RemoveOwnerModal\n","import { isAddress } from '@ethersproject/address'\nimport React, { useState } from 'react'\n\ninterface Interface {\n  handleError: (err: Error) => void\n  handleSubmit: (oldOwner: string, newOwner: string) => void\n  oldAddress: string\n}\n\nconst SwapOwnerModal: React.FC<Interface> = ({ oldAddress, handleError, handleSubmit }) => {\n  const [newOwner, setNewOwner] = useState<string>('')\n\n  const validateAddress = () =>\n    isAddress(newOwner)\n      ? handleSubmit(oldAddress, newOwner.toLowerCase())\n      : handleError(new Error('Address is not valid'))\n\n  return (\n    <div>\n      <h2>Swap Address</h2>\n      <p>Swap address for a new one.</p>\n      <label>Old Address:</label>\n      <input type=\"text\" defaultValue={oldAddress} />\n      <label>New Owner</label>\n      <input type=\"text\" className=\"newAddress\" value={newOwner} onChange={evt => setNewOwner(evt.target.value)} />\n\n      <p><button onClick={validateAddress}>Swap Address</button></p>\n    </div>\n  )\n}\n\nexport default SwapOwnerModal\n","import React, { useEffect, useState } from 'react'\nimport { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport ValueWithButtons from '../../../components/ValueWithButtons'\nimport ChangeThresholdModal from './ChangeThresholdModal'\nimport AddOwnerModal from './AddOwnerModal'\nimport RemoveOwnerModal from './RemoveOwnerModal'\nimport SwapOwnerModal from './SwapOwnerModal'\nimport Modal from '../../../components/Modal'\n\ninterface Interface {\n  safe: Safe\n  handleError: (err: Error) => void\n  addTransaction: (transaction: SafeTransaction) => void\n}\n\nconst PolicyComponent: React.FC<Interface> = ({ safe, addTransaction, handleError }) => {\n  // Safe variables:\n  const [owners, setOwners] = useState<string[]>([])\n  const [threshold, setThreshold] = useState<number>(0)\n\n  // UI components:\n  const [addNewOwner, setAddNewOwner] = useState<boolean>(false)\n  const [changeThreshold, setChangeThreshold] = useState<boolean>(false)\n  const [removeOwner, setRemoveOwner] = useState<null | string>(null)\n  const [swapOwner, setSwapOwner] = useState<null | string>(null)\n  const [showComplete, setShowComplete] = useState<boolean>(false)\n\n  useEffect(() => {\n    safe.getOwners().then((owners: string[]) => setOwners(owners))\n    safe.getThreshold().then((result: number) => setThreshold(result))\n  }, [safe])\n\n  // Create transaction for changing the thresold:\n  const changeThresholdFunction = (newThreshold: number) =>\n    safe.getChangeThresholdTx(newThreshold)\n      .then((transaction: SafeTransaction) => {\n        addTransaction(transaction)\n        afterTransaction()\n      })\n      .catch(handleError)\n\n  // Add an owner and update threshold:\n  const addOwnerFunction = (newOwner: string, newThreshold: number) =>\n    safe.getAddOwnerTx(newOwner, newThreshold)\n      .then((transaction: SafeTransaction) => {\n        addTransaction(transaction)\n        afterTransaction()\n      })\n      .catch(handleError)\n\n  // remove an owner and update the threshold:\n  const removeOwnerFunction = (removeOwner: string, newThreshold: number) =>\n    safe.getRemoveOwnerTx(removeOwner, newThreshold)\n      .then((transaction: SafeTransaction) => {\n        addTransaction(transaction)\n        afterTransaction()\n      })\n      .catch(handleError)\n\n  // swap one owner for another:\n  const swapOwnerFunction = (swapOwner: string, newOwner: string) =>\n    safe.getSwapOwnerTx(swapOwner, newOwner)\n      .then((transaction: SafeTransaction) => {\n        addTransaction(transaction)\n        afterTransaction()\n      })\n      .catch(handleError)\n\n  // close ALL modals and show notice about transaction\n  const afterTransaction = () => {\n    setAddNewOwner(false)\n    setChangeThreshold(false)\n    setRemoveOwner(null)\n    setSwapOwner(null)\n\n    setShowComplete(true)\n  }\n\n  return (\n    <section className=\"section panel\">\n      <h2>Safe Policy</h2>\n      <table>\n        <tbody>\n          <tr>\n            <th>Owners</th>\n            <td>\n              <ul>\n                {owners.map((owner: string) => (\n                  <li key={owner} >\n                    <ValueWithButtons value={owner} />\n                    <button onClick={() => setRemoveOwner(owner)}>delete</button>\n                    <button onClick={() => setSwapOwner(owner)}>swap</button>\n                  </li>\n                ))}\n              </ul>\n              <button onClick={() => setAddNewOwner(true)}>Add Owner</button>\n            </td>\n          </tr>\n          <tr className=\"text\">\n            <th>Threshold</th>\n            <td>\n              {threshold}\n              <button onClick={() => setChangeThreshold(true)}>Change</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      {changeThreshold && <Modal handleClose={() => setChangeThreshold(false)}><ChangeThresholdModal numberOfOwners={owners.length} currentThreshold={threshold} handleSubmit={changeThresholdFunction} /></Modal>}\n      {addNewOwner && <Modal handleClose={() => setAddNewOwner(false)}><AddOwnerModal numberOfOwners={owners.length} handleSubmit={addOwnerFunction} handleError={handleError} /></Modal>}\n      {removeOwner && <Modal handleClose={() => setRemoveOwner(null)}><RemoveOwnerModal removeAddress={removeOwner} numberOfOwners={owners.length} handleSubmit={removeOwnerFunction} /></Modal>}\n      {swapOwner && <Modal handleClose={() => setSwapOwner(null)}><SwapOwnerModal oldAddress={swapOwner} handleSubmit={swapOwnerFunction} handleError={handleError} /></Modal>}\n      {showComplete && (\n        <Modal handleClose={() => setShowComplete(false)}>\n          <h2>Transaction Created</h2>\n          <p>A transaction has been created and added to the transaction panel. You can sign the transaction there, and when enough signatures are collected, execute it.</p>\n          <p><button onClick={() => setShowComplete(false)}>Close</button></p>\n        </Modal>\n      )}\n    </section>\n  )\n}\n\nexport default PolicyComponent\n","import React, { useState, MouseEvent } from 'react'\nimport { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport Navigation from './Navigation'\nimport TransactionsPanel from './transactions'\nimport Dashboard from './Dashboard'\nimport PolicyComponent from './policies'\n\ninterface Interface {\n  safe: Safe\n  walletAddress: string\n  handleLogout: () => void\n  handleError: (err: Error) => void\n}\n\nconst SafeInteraction: React.FC<Interface> = ({ safe, walletAddress, handleError, handleLogout }) => {\n  // UI Only\n  const [selectedTab, setSelectedTab] = useState<string>('dashboard')\n  const changeActive = (evt: MouseEvent<HTMLButtonElement>) => setSelectedTab(evt.currentTarget.id)\n\n  // Transaction Management\n  const [transactions, setTransactions] = useState<SafeTransaction[]>([])\n  const addTransaction = (transaction: SafeTransaction) => setTransactions([...transactions, transaction])\n\n  return (\n    <section className=\"selectedSafe\">\n      <Navigation handleLogout={handleLogout} changeActive={changeActive} selected={selectedTab} />\n      {selectedTab === 'dashboard' && <Dashboard safe={safe} />}\n      {selectedTab === 'transactions' && <TransactionsPanel transactions={transactions} addTransaction={addTransaction} safe={safe} handleError={handleError} walletAddress={walletAddress} />}\n      {selectedTab === 'policy' && <PolicyComponent safe={safe} addTransaction={addTransaction} handleError={handleError} />}\n    </section>\n  )\n}\n\nexport default SafeInteraction\n","import React, { useState } from 'react'\nimport { isAddress } from '@ethersproject/address'\n\ninterface Interface {\n  connectAddress: string | null\n  handleError: (error: Error) => void\n  createSafe: (addresses: string[], threshold: number) => void\n}\n\nconst CreateSafeComponent: React.FC<Interface> = ({ connectAddress, createSafe, handleError }) => {\n  const [addresses, setAddresses] = useState<string[]>([connectAddress ? connectAddress.toLowerCase() : ''])\n  const [threshold, setThreshold] = useState<number>(1)\n\n  const changeAddressValue = (evt: any) => {\n    const changeIndex = parseInt(evt.target.id.replace('address', ''))\n    const updateList = addresses.map((item: string, index: number) => index === changeIndex ? evt.target.value.toLowerCase() : item)\n    setAddresses(updateList)\n  }\n\n  const removeAddress = (changeIndex: number) => {\n    const updateList = addresses.filter((_item: string, index: number) => index !== changeIndex)\n    setAddresses(updateList)\n  }\n\n  const validateSafeSettings = () => {\n    const errorList: number[] = []\n    addresses.forEach((address: string, index: number) => {\n      if (!isAddress(address)) {\n        errorList.push(index + 1)\n      }\n    })\n\n    if (errorList.length !== 0) {\n      handleError(new Error(`Incorrect Addresses for: ${errorList.toString()}`))\n      return false\n    }\n\n    createSafe(addresses, threshold)\n  }\n\n  const loopOptions = (length: number) => {\n    const items = []\n    for (let index = 0; index < length; index++) {\n      items.push(<option key={index} value={index + 1}>{index + 1}</option>)\n    }\n    return items\n  }\n\n  return (\n    <div>\n      <h4>Create a new safe</h4>\n      <p>\n        A safe can have any number of owners associated with it. Your connected address has been added as the first account.<br/>\n        Click the <em>Add address</em> button to add additional addresses, and the <em>delete button</em> to remove addresses.\n      </p>\n\n      <ul>\n        {addresses.map((address: string, index: number) => (\n          <li key={index}>\n            <label>Address {index + 1}: </label>\n            <input type=\"text\"\n              id={`address${index}`}\n              value={address}\n              onChange={changeAddressValue}\n              className={`address${index}`}\n            />\n            <button className={`removeAddress${index}`} onClick={() => removeAddress(index)}>delete</button>\n          </li>\n        ))}\n      </ul>\n      <button className=\"addAddress\" onClick={() => setAddresses([...addresses, ''])}>Add address</button>\n\n      <p>Transactions require the confirmation of at least\n        <select className=\"threshold\" value={threshold.toString()} onChange={evt => setThreshold(parseInt(evt.target.value))}>\n          {loopOptions(addresses.length)}\n        </select>\n        signatures.\n      </p>\n      <button className=\"submit\" disabled={addresses.length === 0} onClick={validateSafeSettings}>Create Safe</button>\n    </div>\n  )\n}\n\nexport default CreateSafeComponent\n","import React, { useState } from 'react'\n\ninterface Interface {\n  connectToSafe: (safeAddress: string) => void\n}\n\nconst ConnectToSafeComponent: React.FC<Interface> = ({ connectToSafe }) => {\n  const [safeAddress, setSafeAddress] = useState<string>('0x3820D3b1382622732dfeb675640dbEd12C12DDEE'.toLowerCase())\n\n  return (\n    <div>\n      <h3>Connect to an existing safe</h3>\n      <label>Safe address</label>\n      <input className=\"safeAddress\" type=\"text\" value={safeAddress} onChange={evt => setSafeAddress(evt.target.value)} />\n      <button className=\"connect\" onClick={() => connectToSafe(safeAddress)}>Connect</button>\n    </div>\n  )\n}\n\nexport default ConnectToSafeComponent\n","import React, { useState } from 'react'\nimport EthersSafe, { Safe } from '@gnosis.pm/safe-core-sdk'\nimport { EthersSafeFactory } from '@rsksmart/safe-factory-sdk'\nimport { ethers } from 'ethers'\n\nimport CreateSafeComponent from './CreateSafeComponent'\nimport ConnectToSafeComponent from './ConnectToSafeComponent'\nimport { getContracts } from '../../config'\n\ninterface Interface {\n  web3Provider: any\n  handleSetSafe: (safe: Safe | EthersSafe) => any\n  handleError: (error: Error) => void\n  address: string | null\n}\n\nconst ChooseSafe: React.FC<Interface> = ({ web3Provider, handleSetSafe, handleError, address }) => {\n  // UI variables\n  const [isCreate, setIsCreate] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n\n  // Create a new safe:\n  const createSafe = (addresses: string[], threshold: number) => {\n    setIsLoading(true)\n\n    const contracts = getContracts(1337)\n    const provider = new ethers.providers.Web3Provider(web3Provider)\n    const signer = provider.getSigner()\n\n    const safeFactory = new EthersSafeFactory(\n      signer,\n      contracts.proxyFactoryAddress.toLowerCase(),\n      contracts.safeSingletonAddress.toLowerCase()\n    )\n\n    safeFactory.createSafe({ owners: addresses, threshold })\n      .then(handleSetSafe)\n      .catch(handleError)\n      .finally(() => setIsLoading(false))\n  }\n\n  // Connect to an existing safe:\n  const connectToSafe = (safeAddress: string) => {\n    setIsLoading(true)\n\n    const provider = new ethers.providers.Web3Provider(web3Provider)\n    const signer = provider.getSigner()\n\n    EthersSafe.create(ethers, safeAddress.toLowerCase(), signer)\n      .then((safe: any) => handleSetSafe(safe))\n      .catch(handleError)\n      .finally(() => setIsLoading(false))\n  }\n\n  return isLoading ? <div style={{ textAlign: 'center' }}>Loading...</div>\n    : (\n      <section className=\"connect panel\">\n        <h2>\n        Create a safe, or connect to an existing one\n          <button onClick={() => setIsCreate(!isCreate)}>\n            {isCreate ? 'Connect to Safe' : 'Create Safe'}\n          </button>\n        </h2>\n        {isCreate ? (\n          <CreateSafeComponent\n            createSafe={createSafe}\n            handleError={handleError}\n            connectAddress={address}\n          />\n        ) : (\n          <ConnectToSafeComponent\n            connectToSafe={connectToSafe}\n          />\n        )}\n      </section>\n    )\n}\n\nexport default ChooseSafe\n","import local from './local.json'\nimport testnet from './testnet.json'\n\nexport const getContracts = (chainId: number) => {\n  switch (chainId) {\n    case 31: return local\n    default: return testnet\n  }\n}\n","import React, { useState } from 'react'\nimport RLogin from '@rsksmart/rlogin'\nimport { Safe } from '@gnosis.pm/safe-core-sdk'\n\nimport './styles/App.scss'\nimport Web3Provider from './pages/start/ConnectWalletComponent'\nimport ConnectedBar from './components/ConnectedBar'\nimport SafeInteraction from './pages/safeInteraction'\nimport ChooseSafe from './pages/connectToSafe'\n\nconst rLogin = new RLogin({\n  cacheProvider: false,\n  supportedChains: [31, 1337]\n})\n\nfunction App () {\n  const [error, setError] = useState<null | string>('')\n\n  // Web3Provider and Safe variables\n  const [rLoginResponse, setRLoginResponse] = useState<{ provider: any, disconnect: any } | null>(null)\n  const [safe, setSafe] = useState<Safe | null>(null)\n\n  // provider variables\n  const [address, setAddress] = useState<string | null>(null)\n  const [chainId, setChainId] = useState<number | null>(null)\n\n  const web3ProviderResponse = (response: any, address: string, chainId: number) => {\n    setRLoginResponse(response)\n    setAddress(address)\n    setChainId(chainId)\n\n    // listen for address change and update:\n    response.provider.on('accountsChanged', (accounts: string[]) => setAddress(accounts[0]))\n  }\n\n  const handleSetSafe = (safe: any) => {\n    setSafe(safe)\n    clearError()\n  }\n\n  const handleError = (error: Error) => setError(error.message)\n  const clearError = () => setError(null)\n\n  const handleLogout = () => {\n    rLoginResponse?.disconnect()\n    setRLoginResponse(null)\n    setSafe(null)\n    setError(null)\n    setAddress(null)\n    setChainId(null)\n  }\n\n  return (\n    <div className={rLoginResponse ? 'App' : 'App signin'}>\n      {!rLoginResponse ? (\n        <Web3Provider\n          rLogin={rLogin}\n          setRLoginResponse={web3ProviderResponse}\n          handleError={handleError}\n        />\n      ) : <ConnectedBar chainId={chainId} walletAddress={address} />\n      }\n\n      {error && (\n        <section className=\"error\">\n          <p>{error}</p>\n          <button onClick={clearError}>x</button>\n        </section>\n      )}\n\n      {rLoginResponse && !safe && (\n        <ChooseSafe\n          web3Provider={rLoginResponse.provider}\n          handleSetSafe={handleSetSafe}\n          handleError={handleError}\n          address={address}\n        />\n      )}\n\n      {address && safe && (\n        <SafeInteraction\n          safe={safe}\n          walletAddress={address}\n          handleLogout={handleLogout}\n          handleError={handleError}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}