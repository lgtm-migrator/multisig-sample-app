{"version":3,"sources":["images/rif-safe.svg","images/powered-by-iov.svg","pages/start/ConnectWalletComponent.tsx","images/rif-safe-header.svg","components/ConnectedBar.tsx","pages/safeInteraction/Navigation.tsx","helpers/transactionListener.ts","images/loading.svg","components/LoadingComponent.tsx","components/Modal.tsx","components/ViewExplorerButton.tsx","pages/safeInteraction/transactions/ApprovedModal.tsx","pages/safeInteraction/transactions/ExecutedModal.tsx","components/CopyValueButton.tsx","components/ValueWithButtons.tsx","images/refresh.svg","pages/safeInteraction/transactions/TransactionDetailComponent.tsx","pages/safeInteraction/transactions/index.tsx","pages/safeInteraction/Dashboard.tsx","components/ThresholdDropdown.tsx","pages/safeInteraction/policies/ChangeThresholdModal.tsx","pages/safeInteraction/policies/AddOwnerModal.tsx","pages/safeInteraction/policies/RemoveOwnerModal.tsx","pages/safeInteraction/policies/SwapOwnerModal.tsx","images/delete.svg","images/swap.svg","images/edit.svg","pages/safeInteraction/policies/index.tsx","pages/safeInteraction/assets/TransferValueModal.tsx","pages/safeInteraction/assets/TransferTokenModal.tsx","config/index.ts","pages/safeInteraction/assets/index.tsx","components/TransactionCreatedModal.tsx","pages/safeInteraction/index.tsx","pages/connectToSafe/CreateSafeComponent.tsx","pages/connectToSafe/ConnectToSafeComponent.tsx","pages/connectToSafe/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Web3Provider","rLogin","setRLoginResponse","handleError","className","src","rifSafeLogo","alt","onClick","connect","then","rLoginResponse","Promise","all","provider","request","method","response","parseInt","catch","poweredByLogo","ConnectedBar","walletAddress","chainId","slice","length","id","chainIdtoString","Navigation","changeActive","handleLogout","selected","transactionListener","web3Provider","tx","resolve","reject","checkInterval","setInterval","getTransactionReceipt","clearInterval","status","Error","err","LoadingComponent","text","loadingImage","Modal","handleClose","children","ViewExplorerButton","address","url","toLowerCase","href","target","rel","xmlns","width","height","viewBox","fill","fillRule","d","ApprovedModal","hash","type","defaultValue","ExecutedModal","CopyButton","value","copyTextField","useRef","current","select","document","execCommand","ref","style","position","left","ValueWithButtons","CopyValueButton","TransactionDetailComponent","safe","transactionBundle","approveTransactionHash","executeTransaction","transaction","useState","showDetails","setShowDetails","signatures","setSignatures","threshold","setThreshold","isRefreshing","setIsRefreshing","formatted","setFormatted","useEffect","getTransactionHash","txHash","getApprovals","InputDataDecoder","safeAbi","decodeData","data","erc20Abi","getThreshold","safeThreshold","getOwnersWhoApprovedTx","signers","finally","walletHasSigned","filter","canExecute","to","getAddress","refreshIcon","disabled","nonce","JSON","stringify","map","approval","TransactionsPanel","updateTransactionStatus","transactions","showApprovedModal","setShowApprovedModal","showExecutedModal","setShowExecutedModal","pendingTransactions","executedTransactions","bundle","push","result","getProvider","receipt","transactionHash","index","Dashboard","balance","setBalance","setNonce","getBalance","getNonce","toString","ThresholdDropdown","onChange","numberOfOwners","options","evt","number","ChangeThresholdModal","currentThreshold","handleSubmit","newThreshold","setNewThreshold","AddOwnerModal","newOwner","setNewOwner","isAddress","RemoveOwnerModal","removeAddress","SwapOwnerModal","oldAddress","PolicyComponent","addTransaction","owners","setOwners","addNewOwner","setAddNewOwner","changeThreshold","setChangeThreshold","removeOwner","setRemoveOwner","swapOwner","setSwapOwner","getOwners","afterTransaction","owner","deleteIcon","swapIcon","editIcon","getChangeThresholdTx","getAddOwnerTx","getRemoveOwnerTx","getSwapOwnerTx","TransferValueModal","createTransaction","recipient","setRecipient","amount","setAmount","TransferTokenModal","token","setTransaction","symbol","getContracts","testnet","local","AssetsComponent","showTransfer","setShowTransfer","showTokenTransfer","setShowTokenTransfer","tokens","setTokens","getSafeBalance","getChainId","getERC2Balance","decimals","contractAddress","rifToken","signer","getSigner","Contract","balanceOf","updateToken","Math","pow","newTokenList","find","findToken","console","log","contract","txBuilder","ERC20TransactionBuilder","bigAmount","BigNumber","from","mul","transfer","TransactionCreatedModal","closeModal","changeScreen","SafeInteraction","selectedTab","setSelectedTab","showTransactionInfo","setShowTransactionInfo","setTransactions","currentTarget","newTransactionList","item","CreateSafeComponent","connectAddress","createSafe","addresses","setAddresses","changeAddressValue","changeIndex","replace","updateList","_item","items","loopOptions","errorList","forEach","ConnectToSafeComponent","connectToSafe","safeAddress","setSafeAddress","ChooseSafe","handleSetSafe","isCreate","setIsCreate","isLoading","setIsLoading","contracts","ethers","providers","EthersSafeFactory","proxyFactoryAddress","safeSingletonAddress","EthersSafe","create","RLogin","cacheProvider","supportedChains","App","error","setError","setSafe","setAddress","setChainId","message","on","accounts","disconnect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5c8cdac0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rif-safe.6d74aa93.svg\";","export default __webpack_public_path__ + \"static/media/powered-by-iov.a0397e40.svg\";","import React from 'react'\nimport { RLoginButton } from '@rsksmart/rlogin'\nimport rifSafeLogo from '../../images/rif-safe.svg'\nimport poweredByLogo from '../../images/powered-by-iov.svg'\n\ninterface Interface {\n  rLogin: any\n  setRLoginResponse: (response: any, address: string, chainId: number) => void\n  handleError: (error: Error) => void\n}\n\nconst Web3Provider: React.FC<Interface> = ({ rLogin, setRLoginResponse, handleError }) => {\n  const handleLogin = () =>\n    rLogin.connect()\n      .then((rLoginResponse: any) => {\n        Promise.all([\n          rLoginResponse.provider.request({ method: 'eth_accounts' }),\n          rLoginResponse.provider.request({ method: 'eth_chainId' })\n        ]).then((response: any) => {\n          setRLoginResponse(rLoginResponse, response[0][0], parseInt(response[1]))\n        })\n      })\n      .catch(handleError)\n\n  return (\n    <section className=\"login\">\n      <img src={rifSafeLogo} alt=\"RIF Safe\" />\n      <h2>Login with your wallet</h2>\n      <p><RLoginButton onClick={handleLogin}>Connect with rLogin!</RLoginButton></p>\n      <img src={poweredByLogo} alt=\"Powered by IOV Labs\" />\n      <p className=\"legal\">Copyright © 2021 IOV Labs. All rights reserved.</p>\n    </section>\n  )\n}\n\nexport default Web3Provider\n","export default __webpack_public_path__ + \"static/media/rif-safe-header.ac579ff7.svg\";","import React from 'react'\nimport rifSafeLogo from '../images/rif-safe-header.svg'\n\ninterface Interface {\n  chainId: number | null\n  walletAddress: string | null\n}\n\nconst ConnectedBar: React.FC<Interface> = ({ walletAddress, chainId }) => {\n  const chainIdtoString = (id: number) => {\n    switch (id) {\n      case 31: return 'RSK Testnet'\n      case 30: return 'RSK Mainnet'\n      default: return 'Local'\n    }\n  }\n  return (\n    <section className=\"header\">\n      <ul className=\"inline\">\n        <li><img src={rifSafeLogo} alt=\"RIF Safe\" /></li>\n        {walletAddress && (\n          <li className=\"address\">\n            {`${walletAddress.slice(0, 8)}...${walletAddress.slice(walletAddress.length - 6)}`}\n          </li>\n        )}\n        <li className=\"chainId\"><span>{chainId && chainIdtoString(chainId)}</span></li>\n      </ul>\n    </section>\n  )\n}\n\nexport default ConnectedBar\n","import React, { MouseEvent } from 'react'\n\ninterface Interface {\n  handleLogout: () => void\n  changeActive: (event: MouseEvent<HTMLButtonElement>) => void\n  selected: string\n}\n\nconst Navigation: React.FC<Interface> = ({ changeActive, handleLogout, selected }) => {\n  return (\n    <ul className=\"navigation\">\n      <li><button id=\"dashboard\" className={selected === 'dashboard' ? 'selected' : ''} onClick={changeActive}>Dashboard</button></li>\n      <li><button id=\"transactions\" className={selected === 'transactions' ? 'selected' : ''} onClick={changeActive}>Transactions</button></li>\n      <li><button id=\"assets\" className={selected === 'assets' ? 'selected' : ''} onClick={changeActive}>Assets</button></li>\n      <li><button id=\"policy\" className={selected === 'policy' ? 'selected' : ''} onClick={changeActive}>Policies</button></li>\n      <li className=\"logout\"><button onClick={handleLogout}>Disconnect Wallet</button></li>\n    </ul>\n  )\n}\n\nexport default Navigation\n","import { Provider, TransactionReceipt } from '@ethersproject/providers'\n\nexport const transactionListener = (web3Provider: Provider, tx: string) =>\n  new Promise((resolve, reject) => {\n    const checkInterval = setInterval(() =>\n      web3Provider.getTransactionReceipt(tx)\n        .then((response: TransactionReceipt) => {\n          if (response) {\n            clearInterval(checkInterval)\n            response.status && response.status === 1 ? resolve(response) : reject(new Error('Transaction Failed'))\n          }\n        })\n        .catch((err: Error) => reject(err))\n    , 2000)\n  })\n","export default __webpack_public_path__ + \"static/media/loading.06d7c63f.svg\";","import React from 'react'\nimport loadingImage from '../images/loading.svg'\n\ninterface Interface {\n  text?: string\n}\n\nconst LoadingComponent: React.FC<Interface> = ({ text }) => {\n  return (\n    <div className=\"loading\">\n      <p><img src={loadingImage} alt=\"Loading...\" /></p>\n      {text && <p>{text}</p>}\n    </div>\n  )\n}\n\nexport default LoadingComponent\n","import React, { ReactNode } from 'react'\n\ninterface Interface {\n  handleClose?: () => void\n  children: ReactNode\n}\n\nconst Modal: React.FC<Interface> = ({ handleClose, children }) => {\n  return (\n    <div className=\"modal\">\n      <div className=\"modalBody\">\n        <div className=\"modalHeader\">\n          {handleClose && <button className=\"close\" onClick={handleClose}>x</button>}\n        </div>\n        <div className=\"modalContent\">\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","import React from 'react'\n\ninterface Interface {\n  address?: string\n  tx?: string\n}\n\nconst ViewExplorerButton: React.FC<Interface> = ({ address, tx }) => {\n  const url = address ? `address/${address.toLowerCase()}` : `tx/${tx}`\n  return (\n    <a\n      href={`http://explorer.testnet.rsk.co/${url}`}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      className=\"icon explorerLink\"\n    >\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0H16V16H0z\"></path><path className=\"icon-color\" fillRule=\"nonzero\" d=\"M13 13v-2c0-.552.448-1 1-1s1 .448 1 1v2c0 1.105-.895 2-2 2H3c-1.105 0-2-.895-2-2V3c0-1.105.895-2 2-2h2c.552 0 1 .448 1 1s-.448 1-1 1H3v10h10z\"></path><path className=\"icon-color\" d=\"M11.586 3H9c-.552 0-1-.448-1-1s.448-1 1-1h5c.276 0 .526.112.707.293.181.18.293.43.293.707v5c0 .552-.448 1-1 1s-1-.448-1-1V4.414l-6.243 6.243c-.39.39-1.023.39-1.414 0-.39-.39-.39-1.024 0-1.414L11.586 3z\"></path></g></svg>\n    </a>\n  )\n}\n\nexport default ViewExplorerButton\n","import React from 'react'\nimport LoadingComponent from '../../../components/LoadingComponent'\nimport Modal from '../../../components/Modal'\nimport ViewExplorerButton from '../../../components/ViewExplorerButton'\n\ninterface Interface {\n  handleClose: () => void\n  hash: string\n}\n\nconst ApprovedModal: React.FC<Interface> = ({ hash, handleClose }) => {\n  if (hash === 'LOADING') {\n    return (\n      <Modal>\n        <LoadingComponent text=\"Adding the signature to the transaction.\" />\n      </Modal>\n    )\n  }\n\n  return (\n    <Modal handleClose={handleClose}>\n      <h2>Transaction Approved</h2>\n      <p>Your signature has been added to this transaction! This is the hash of the transaction:</p>\n      <p>\n        <input type=\"text\" defaultValue={hash} />\n        <ViewExplorerButton tx={hash} />\n      </p>\n      <p><button onClick={handleClose}>Close modal</button></p>\n    </Modal>\n  )\n}\n\nexport default ApprovedModal\n","import React from 'react'\nimport LoadingComponent from '../../../components/LoadingComponent'\nimport Modal from '../../../components/Modal'\nimport ViewExplorerButton from '../../../components/ViewExplorerButton'\n\ninterface Interface {\n  handleClose: () => void\n  hash: string\n}\n\nconst ExecutedModal: React.FC<Interface> = ({ handleClose, hash }) => {\n  if (hash === 'LOADING') {\n    return (\n      <Modal>\n        <LoadingComponent text=\"Executing the transaction.\" />\n      </Modal>\n    )\n  }\n\n  return (\n    <Modal handleClose={handleClose}>\n      <h2>Transaction executed</h2>\n      <p>This is the hash of the transaction:</p>\n      <p>\n        <input type=\"text\" defaultValue={hash} />\n        <ViewExplorerButton tx={hash} />\n      </p>\n      <p><button onClick={handleClose}>Close modal</button></p>\n    </Modal>\n  )\n}\n\nexport default ExecutedModal\n","import React, { useRef } from 'react'\n\ninterface CopyButtonInterface {\n  value: string\n}\n\nconst CopyButton: React.FC<CopyButtonInterface> = ({ value }) => {\n  const copyTextField = useRef<HTMLInputElement>(null)\n\n  const handleClick = () => {\n    copyTextField.current && copyTextField.current.select()\n    document.execCommand('copy')\n  }\n\n  return (\n    <span className=\"copyButton\">\n      <button type=\"button\" className=\"icon\" onClick={handleClick}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0H16V16H0z\"></path><path className=\"icon-color\" fillRule=\"nonzero\" d=\"M10 10h3V3H8v1c1.105 0 2 .895 2 2v4zM6 4V3c0-1.105.895-2 2-2h5c1.105 0 2 .895 2 2v7c0 1.105-.895 2-2 2h-3v1c0 1.105-.895 2-2 2H3c-1.105 0-2-.895-2-2V6c0-1.105.895-2 2-2h3zM3 6v7h5V6H3z\"></path></g></svg>\n      </button>\n\n      <input\n        type=\"text\"\n        className=\"copyText\"\n        defaultValue={value}\n        ref={copyTextField}\n        style={{ position: 'absolute', left: '-10000px' }}\n      />\n    </span>\n  )\n}\n\nexport default CopyButton\n","import React from 'react'\nimport CopyValueButton from './CopyValueButton'\nimport ViewExplorerButton from './ViewExplorerButton'\n\ninterface Interface {\n  value: string\n}\n\nconst ValueWithButtons: React.FC<Interface> = ({ value }) => {\n  return (\n    <>\n      {value}\n      <CopyValueButton value={value} />\n      <ViewExplorerButton address={value} />\n    </>\n  )\n}\n\nexport default ValueWithButtons\n","export default __webpack_public_path__ + \"static/media/refresh.7a8b3bf4.svg\";","import { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport React, { useEffect, useState } from 'react'\nimport ValueWithButtons from '../../../components/ValueWithButtons'\nimport refreshIcon from '../../../images/refresh.svg'\n\nimport safeAbi from '@gnosis.pm/safe-core-sdk/dist/src/abis/SafeAbiV1-2-0.json'\nimport erc20Abi from '../assets/erc20.json'\nimport InputDataDecoder from 'ethereum-input-data-decoder'\nimport { TransactionBundle } from '..'\nimport CopyValueButton from '../../../components/CopyValueButton'\n\ninterface Interface {\n  safe: Safe\n  transactionBundle: TransactionBundle\n  walletAddress: string\n  approveTransactionHash?: (transaction: SafeTransaction) => Promise<any>\n  executeTransaction?: (transactionBundle: TransactionBundle) => void\n  handleError?: (error: Error) => void\n}\n\nconst TransactionDetailComponent: React.FC<Interface> = ({\n  safe, transactionBundle, walletAddress, handleError, approveTransactionHash, executeTransaction\n}) => {\n  const { transaction, hash } = transactionBundle\n\n  const [showDetails, setShowDetails] = useState<boolean>(false)\n  const [signatures, setSignatures] = useState<string[]>([])\n  const [threshold, setThreshold] = useState<number>(0)\n  const [isRefreshing, setIsRefreshing] = useState<boolean>(false)\n  const [formatted, setFormatted] = useState<any>(null)\n\n  useEffect(() => {\n    safe.getTransactionHash(transaction).then((txHash: string) => {\n      getApprovals(txHash)\n\n      // try to decode the data\n      const formatted = new InputDataDecoder(safeAbi).decodeData(transaction.data.data)\n      if (formatted.method) {\n        setFormatted(formatted)\n      } else {\n        setFormatted(new InputDataDecoder(erc20Abi).decodeData(transaction.data.data))\n      }\n    })\n\n    safe.getThreshold().then((safeThreshold: number) => setThreshold(safeThreshold))\n  }, [transaction])\n\n  const getApprovals = (txHash: string) => {\n    setIsRefreshing(true)\n    safe.getOwnersWhoApprovedTx(txHash)\n      .then((signers: string[]) => setSignatures(signers))\n      .catch(handleError)\n      .finally(() => setIsRefreshing(false))\n  }\n\n  const getTransactionName = () => {\n    if (transaction.data.data === '0x') {\n      return 'Send Value'\n    } else if (formatted.method) {\n      return formatted.method\n    } else {\n      return 'unknown'\n    }\n  }\n\n  const handleApprove = () =>\n    approveTransactionHash && approveTransactionHash(transaction)\n      .then(() => getApprovals(hash))\n\n  const walletHasSigned = signatures.filter((value: string) => value.toLowerCase() === walletAddress.toLowerCase()).length === 1\n  const canExecute = threshold > signatures.length\n\n  return (\n    <div className=\"transaction\">\n      <div className=\"summary\">\n        <p><strong>{formatted && getTransactionName()}</strong></p>\n        <p><strong>to: </strong>\n          {transaction.data.to === safe.getAddress() && <em>(Safe) </em>}\n          <ValueWithButtons value={transaction.data.to} />\n        </p>\n        {transaction.data.value !== '0' && <p><strong>value: </strong>{transaction.data.value}</p>}\n        <p><strong>approvals: </strong>\n          {isRefreshing ? 'loading...' : `${signatures.length} out of ${threshold}`}\n          <button className=\"icon\" onClick={() => getApprovals(hash)}>\n            <img src={refreshIcon} alt=\"refresh\" />\n          </button>\n        </p>\n      </div>\n      <div className=\"buttons\">\n        <button\n          onClick={() => setShowDetails(!showDetails)}>{showDetails ? 'hide ' : 'show '}details</button>\n        {approveTransactionHash && <button\n          disabled={walletHasSigned}\n          onClick={handleApprove}>approve</button>}\n        {executeTransaction && <button\n          disabled={canExecute}\n          onClick={() => executeTransaction(transactionBundle)}>execute</button>}\n      </div>\n\n      {showDetails && (\n        <table><tbody>\n          <tr>\n            <th>Transaction Hash</th>\n            <td>\n              <p>{hash}<CopyValueButton value={hash} /></p>\n            </td>\n          </tr>\n          <tr>\n            <th>Nonce</th>\n            <td><p>{transaction.data.nonce}</p></td>\n          </tr>\n          {transaction.data.data !== '0x' && (\n            <>\n              <tr>\n                <th>Raw Data</th>\n                <td><p className=\"data\">{transaction.data.data}</p></td>\n              </tr>\n              <tr>\n                <th>Decoded Data</th>\n                <td>\n                  <pre>{JSON.stringify(formatted, null, 2)}</pre>\n                </td>\n              </tr>\n            </>\n          )}\n          <tr>\n            <th>Approvals:</th>\n            <td>\n              {signatures.length === 0 ? <p><em>No signatures</em></p> : (\n                <ol >\n                  {signatures.map((approval: string) =>\n                    <li key={approval}>\n                      <ValueWithButtons value={approval} />\n                      {walletAddress.toLowerCase() === approval.toLowerCase() && <em>(Connected Account)</em>}\n                    </li>)}\n                </ol>\n              )}\n            </td>\n          </tr>\n        </tbody></table>\n      )}\n    </div>\n  )\n}\n\nexport default TransactionDetailComponent\n","import { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport { ContractTransaction } from 'ethers'\nimport React, { useState } from 'react'\nimport { TransactionBundle } from '..'\nimport { transactionListener } from '../../../helpers/transactionListener'\nimport ApprovedModal from './ApprovedModal'\nimport ExecutedModal from './ExecutedModal'\nimport TransactionDetailComponent from './TransactionDetailComponent'\n\ninterface Interface {\n  safe: Safe\n  handleError: (err: Error) => void\n  updateTransactionStatus: (transaction: TransactionBundle) => void\n  transactions: TransactionBundle[]\n  walletAddress: string\n}\n\nconst TransactionsPanel: React.FC<Interface> = ({ safe, handleError, updateTransactionStatus, walletAddress, transactions }) => {\n  const [showApprovedModal, setShowApprovedModal] = useState<string | null>(null)\n  const [showExecutedModal, setShowExecutedModal] = useState<string | null>(null)\n\n  const pendingTransactions: TransactionBundle[] = []\n  const executedTransactions: TransactionBundle[] = []\n\n  transactions.map((bundle: TransactionBundle) =>\n    bundle.status === 'PENDING' ? pendingTransactions.push(bundle) : executedTransactions.push(bundle))\n\n  // Sign transaction \"on-chain\"\n  const approveTransactionHash = (transaction: SafeTransaction) => {\n    setShowApprovedModal('LOADING')\n\n    return safe.getTransactionHash(transaction)\n      .then((hash: string) =>\n        safe.approveTransactionHash(hash)\n          .then((result: ContractTransaction) => transactionListener(safe.getProvider(), result.hash))\n          .then((receipt: any) => setShowApprovedModal(receipt.transactionHash)))\n      .catch((err: Error) => {\n        setShowApprovedModal(null)\n        handleError(err)\n      })\n  }\n\n  // Execute transaction\n  const executeTransaction = (transaction: TransactionBundle) => {\n    setShowExecutedModal('LOADING')\n\n    safe.executeTransaction(transaction.transaction)\n      .then((result: ContractTransaction) => transactionListener(safe.getProvider(), result.hash))\n      .then((receipt: any) => {\n        setShowExecutedModal(receipt.transactionHash)\n        updateTransactionStatus(transaction)\n      })\n      .catch((err: Error) => {\n        setShowExecutedModal(null)\n        handleError(err)\n      })\n  }\n\n  return (\n    <>\n      <section className=\"panel\">\n        <h2>Transactions</h2>\n        {pendingTransactions.length === 0 && executedTransactions.length === 0 && (\n          <p><em>There are no transactions.</em></p>\n        )}\n        {pendingTransactions.length !== 0 && (\n          <>\n            <h3>Pending Transactions</h3>\n            {pendingTransactions.map((transaction: TransactionBundle, index: number) =>\n              <TransactionDetailComponent\n                safe={safe}\n                transactionBundle={transaction}\n                handleError={handleError}\n                approveTransactionHash={approveTransactionHash}\n                executeTransaction={executeTransaction}\n                walletAddress={walletAddress}\n                key={index}\n              />\n            )}\n          </>\n        )}\n\n        {executedTransactions.length !== 0 && (\n          <>\n            <h3>Executed Transactions</h3>\n            {executedTransactions.map((transaction: TransactionBundle, index: number) =>\n              <TransactionDetailComponent\n                safe={safe}\n                transactionBundle={transaction}\n                walletAddress={walletAddress}\n                key={index}\n              />\n            )}\n          </>\n        )}\n      </section>\n\n      {showApprovedModal && <ApprovedModal hash={showApprovedModal} handleClose={() => setShowApprovedModal(null)} />}\n      {showExecutedModal && <ExecutedModal hash={showExecutedModal} handleClose={() => setShowExecutedModal(null)} />}\n    </>\n  )\n}\n\nexport default TransactionsPanel\n","import { Safe } from '@gnosis.pm/safe-core-sdk'\nimport React, { useEffect, useState } from 'react'\nimport ValueWithButtons from '../../components/ValueWithButtons'\nimport refreshIcon from '../../images/refresh.svg'\n\ninterface Interface {\n  safe: Safe\n}\n\nconst Dashboard: React.FC<Interface> = ({ safe }) => {\n  const [balance, setBalance] = useState<number>(0)\n  const [nonce, setNonce] = useState<number | null>(null)\n\n  useEffect(() => {\n    getBalance()\n    getNonce()\n  }, [safe])\n\n  const getBalance = () => safe.getBalance().then((balance: any) => setBalance(balance))\n  const getNonce = () => safe.getNonce().then((nonce: number) => setNonce(nonce))\n\n  return (\n    <section className=\"panel\">\n      <h2>Safe Dashboard</h2>\n      <table>\n        <tbody>\n          <tr>\n            <th>Safe Address</th>\n            <td><ValueWithButtons value={safe.getAddress()} /></td>\n          </tr>\n          <tr className=\"text\">\n            <th>Balance</th>\n            <td>\n              {(balance / 1000000000000000000).toString()}\n              <button onClick={getBalance} className=\"icon\"><img src={refreshIcon} alt=\"Refresh\" /></button>\n            </td>\n          </tr>\n          {nonce && (\n            <tr className=\"text\">\n              <th>Nonce</th>\n              <td>\n                {nonce.toString()}\n                <button onClick={getNonce} className=\"icon\"><img src={refreshIcon} alt=\"Refresh\" /></button>\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </section>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\n\ninterface Interface {\n  value: number\n  onChange: (value: number) => void\n  numberOfOwners: number\n}\n\nconst ThresholdDropdown: React.FC<Interface> = ({ value, onChange, numberOfOwners }) => {\n  const options = []\n  for (let index = 1; index <= numberOfOwners; index++) {\n    options.push(index)\n  }\n\n  const handleChange = (evt: any) => onChange(parseInt(evt.target.value))\n\n  return (\n    <select value={value} onChange={handleChange}>\n      {options.map((number: number) => <option key={number} value={number}>{number}</option>)}\n    </select>\n  )\n}\n\nexport default ThresholdDropdown\n","import React, { useState } from 'react'\nimport ThresholdDropdown from '../../../components/ThresholdDropdown'\n\ninterface Interface {\n  numberOfOwners: number\n  currentThreshold: number\n  handleSubmit: (newThreshold: number) => void\n}\n\nconst ChangeThresholdModal: React.FC<Interface> = ({ numberOfOwners, currentThreshold, handleSubmit }) => {\n  const [newThreshold, setNewThreshold] = useState<number>(currentThreshold)\n\n  const options = []\n  for (let index = 1; index <= numberOfOwners; index++) {\n    options.push(index)\n  }\n\n  return (\n    <div>\n      <h3>Change threshold</h3>\n      <p>Change the number of approvers for a transaction to be executed</p>\n      <label>New threshold:</label>\n      <ThresholdDropdown\n        numberOfOwners={numberOfOwners}\n        value={newThreshold}\n        onChange={(value: number) => setNewThreshold(value)}\n      />\n\n      <p><button onClick={() => handleSubmit(newThreshold)}>Change threshold</button></p>\n    </div>\n  )\n}\n\nexport default ChangeThresholdModal\n","import { isAddress } from '@ethersproject/address'\nimport React, { useState } from 'react'\nimport ThresholdDropdown from '../../../components/ThresholdDropdown'\n\ninterface Interface {\n  numberOfOwners: number\n  handleSubmit: (newOwner: string, newThreshold: number) => void\n  handleError: (err: Error) => void\n}\n\nconst AddOwnerModal: React.FC<Interface> = ({ handleSubmit, handleError, numberOfOwners }) => {\n  const [newOwner, setNewOwner] = useState<string>('')\n  const [newThreshold, setNewThreshold] = useState<number>(numberOfOwners)\n\n  const validateAddress = () => {\n    isAddress(newOwner.toLowerCase())\n      ? handleSubmit(newOwner.toLowerCase(), newThreshold)\n      : handleError(new Error('Value is not an address.'))\n  }\n\n  return (\n    <div>\n      <h3>Add new owner</h3>\n      <label>\n        Address</label>\n      <input type=\"text\" className=\"newOwner\" value={newOwner} onChange={evt => setNewOwner(evt.target.value)} />\n\n      <label>New Threshold</label>\n      <ThresholdDropdown\n        numberOfOwners={numberOfOwners + 1}\n        value={newThreshold}\n        onChange={(value: number) => setNewThreshold(value)}\n      />\n\n      <p><button onClick={validateAddress}>Update</button></p>\n    </div>\n  )\n}\n\nexport default AddOwnerModal\n","import React, { useState } from 'react'\nimport ThresholdDropdown from '../../../components/ThresholdDropdown'\n\ninterface Interface {\n  numberOfOwners: number\n  handleSubmit: (address: string, threshold: number) => void\n  removeAddress: string\n}\n\nconst RemoveOwnerModal: React.FC<Interface> = ({ numberOfOwners, handleSubmit, removeAddress }) => {\n  const [threshold, setThreshold] = useState<number>(numberOfOwners - 1)\n\n  return (\n    <div>\n      <h3>Remove owner</h3>\n      <p>Are you sure you want to remove this owner?</p>\n      <input type=\"text\" defaultValue={removeAddress} />\n\n      <p>\n        <label>New threshold:</label>\n        <ThresholdDropdown\n          numberOfOwners={numberOfOwners - 1}\n          value={threshold}\n          onChange={(value: number) => setThreshold(value)} />\n      </p>\n\n      <p><button onClick={() => handleSubmit(removeAddress.toLowerCase(), threshold)}>Remove</button></p>\n    </div>\n  )\n}\n\nexport default RemoveOwnerModal\n","import { isAddress } from '@ethersproject/address'\nimport React, { useState } from 'react'\n\ninterface Interface {\n  handleError: (err: Error) => void\n  handleSubmit: (oldOwner: string, newOwner: string) => void\n  oldAddress: string\n}\n\nconst SwapOwnerModal: React.FC<Interface> = ({ oldAddress, handleError, handleSubmit }) => {\n  const [newOwner, setNewOwner] = useState<string>('')\n\n  const validateAddress = () =>\n    isAddress(newOwner)\n      ? handleSubmit(oldAddress, newOwner.toLowerCase())\n      : handleError(new Error('Address is not valid'))\n\n  return (\n    <div>\n      <h3>Swap Owner</h3>\n      <p>Swap address for a new one.</p>\n      <label>Old Address:</label>\n      <input type=\"text\" defaultValue={oldAddress} />\n      <label>New Owner</label>\n      <input type=\"text\" className=\"newAddress\" value={newOwner} onChange={evt => setNewOwner(evt.target.value)} />\n\n      <p><button onClick={validateAddress}>Swap Address</button></p>\n    </div>\n  )\n}\n\nexport default SwapOwnerModal\n","export default __webpack_public_path__ + \"static/media/delete.8970c03e.svg\";","export default __webpack_public_path__ + \"static/media/swap.29d1f400.svg\";","export default __webpack_public_path__ + \"static/media/edit.d3af4af9.svg\";","import React, { useEffect, useState } from 'react'\nimport { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport ValueWithButtons from '../../../components/ValueWithButtons'\nimport ChangeThresholdModal from './ChangeThresholdModal'\nimport AddOwnerModal from './AddOwnerModal'\nimport RemoveOwnerModal from './RemoveOwnerModal'\nimport SwapOwnerModal from './SwapOwnerModal'\nimport Modal from '../../../components/Modal'\nimport deleteIcon from '../../../images/delete.svg'\nimport swapIcon from '../../../images/swap.svg'\nimport editIcon from '../../../images/edit.svg'\n\ninterface Interface {\n  safe: Safe\n  handleError: (err: Error) => void\n  addTransaction: (transaction: SafeTransaction) => void\n}\n\nconst PolicyComponent: React.FC<Interface> = ({ safe, addTransaction, handleError }) => {\n  // Safe variables:\n  const [owners, setOwners] = useState<string[]>([])\n  const [threshold, setThreshold] = useState<number>(0)\n\n  // UI components:\n  const [addNewOwner, setAddNewOwner] = useState<boolean>(false)\n  const [changeThreshold, setChangeThreshold] = useState<boolean>(false)\n  const [removeOwner, setRemoveOwner] = useState<null | string>(null)\n  const [swapOwner, setSwapOwner] = useState<null | string>(null)\n\n  useEffect(() => {\n    safe.getOwners().then((owners: string[]) => setOwners(owners))\n    safe.getThreshold().then((result: number) => setThreshold(result))\n  }, [safe])\n\n  // Create transaction for changing the thresold:\n  const changeThresholdFunction = (newThreshold: number) =>\n    safe.getChangeThresholdTx(newThreshold)\n      .then((transaction: SafeTransaction) => {\n        addTransaction(transaction)\n        afterTransaction()\n      })\n      .catch(handleError)\n\n  // Add an owner and update threshold:\n  const addOwnerFunction = (newOwner: string, newThreshold: number) =>\n    safe.getAddOwnerTx(newOwner, newThreshold)\n      .then((transaction: SafeTransaction) => {\n        addTransaction(transaction)\n        afterTransaction()\n      })\n      .catch(handleError)\n\n  // remove an owner and update the threshold:\n  const removeOwnerFunction = (removeOwner: string, newThreshold: number) =>\n    safe.getRemoveOwnerTx(removeOwner, newThreshold)\n      .then((transaction: SafeTransaction) => {\n        addTransaction(transaction)\n        afterTransaction()\n      })\n      .catch(handleError)\n\n  // swap one owner for another:\n  const swapOwnerFunction = (swapOwner: string, newOwner: string) =>\n    safe.getSwapOwnerTx(swapOwner, newOwner)\n      .then((transaction: SafeTransaction) => {\n        addTransaction(transaction)\n        afterTransaction()\n      })\n      .catch(handleError)\n\n  // close ALL modals\n  const afterTransaction = () => {\n    setAddNewOwner(false)\n    setChangeThreshold(false)\n    setRemoveOwner(null)\n    setSwapOwner(null)\n  }\n\n  return (\n    <section className=\"section panel\">\n      <h2>Safe Policy</h2>\n      <table>\n        <tbody>\n          <tr>\n            <th>Owners</th>\n            <td>\n              <ul>\n                {owners.map((owner: string) => (\n                  <li key={owner} >\n                    <ValueWithButtons value={owner} />\n                    <button className=\"icon delete\" onClick={() => setRemoveOwner(owner)}>\n                      <img src={deleteIcon} alt=\"delete address\" />\n                    </button>\n                    <button className=\"icon\" onClick={() => setSwapOwner(owner)}>\n                      <img src={swapIcon} alt=\"swap address\" />\n                    </button>\n                  </li>\n                ))}\n              </ul>\n              <button onClick={() => setAddNewOwner(true)}>+ Add Owner</button>\n            </td>\n          </tr>\n          <tr className=\"text\">\n            <th>Threshold</th>\n            <td>\n              {threshold}\n              <button className=\"icon\" onClick={() => setChangeThreshold(true)}>\n                <img src={editIcon} alt=\"edit threshold\" />\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      {changeThreshold && <Modal handleClose={() => setChangeThreshold(false)}><ChangeThresholdModal numberOfOwners={owners.length} currentThreshold={threshold} handleSubmit={changeThresholdFunction} /></Modal>}\n      {addNewOwner && <Modal handleClose={() => setAddNewOwner(false)}><AddOwnerModal numberOfOwners={owners.length} handleSubmit={addOwnerFunction} handleError={handleError} /></Modal>}\n      {removeOwner && <Modal handleClose={() => setRemoveOwner(null)}><RemoveOwnerModal removeAddress={removeOwner} numberOfOwners={owners.length} handleSubmit={removeOwnerFunction} /></Modal>}\n      {swapOwner && <Modal handleClose={() => setSwapOwner(null)}><SwapOwnerModal oldAddress={swapOwner} handleSubmit={swapOwnerFunction} handleError={handleError} /></Modal>}\n    </section>\n  )\n}\n\nexport default PolicyComponent\n","import { isAddress } from '@ethersproject/address'\nimport React, { useState } from 'react'\n\ninterface Interface {\n  createTransaction: (recipient: string, amount: number) => void\n  handleError: (error: Error | null) => void\n}\n\nconst TransferValueModal: React.FC<Interface> = ({ createTransaction, handleError }) => {\n  const [recipient, setRecipient] = useState<string>('')\n  const [amount, setAmount] = useState<number>(10000)\n\n  const validateTransaction = () => {\n    handleError(null)\n\n    if (!isAddress(recipient)) {\n      return handleError(new Error('Recipient is not an address.'))\n    }\n\n    createTransaction(recipient.toLowerCase(), amount)\n  }\n\n  return (\n    <>\n      <h3>Create Transaction</h3>\n      <p>\n        <label>Recepient:</label>\n        <input type=\"text\" className=\"to\" value={recipient} onChange={evt => setRecipient(evt.target.value)} />\n      </p>\n      <p>\n        <label>Amount:</label>\n        <input type=\"number\" className=\"amount\" value={amount} onChange={evt => setAmount(parseInt(evt.target.value))} />\n      </p>\n      <button className=\"submit\" onClick={validateTransaction}>Create Transaction</button>\n    </>\n  )\n}\n\nexport default TransferValueModal\n","import { isAddress } from '@ethersproject/address'\nimport React, { useState } from 'react'\nimport { Erc20Token } from '.'\n\ninterface Interface {\n  token: Erc20Token\n  handleError: (err: Error | null) => void\n  createTransaction: (token: Erc20Token, amount: number, to: string) => void\n}\n\nconst TransferTokenModal: React.FC<Interface> = ({ token, createTransaction, handleError }) => {\n  const [transaction, setTransaction] = useState<{amount: number, address: string}>({ amount: 0, address: '' })\n\n  const validateTransaction = () => {\n    handleError(null)\n\n    if (!isAddress(transaction.address)) {\n      return handleError(new Error('Recipient is not an address.'))\n    }\n\n    if (transaction.amount > token.amount || transaction.amount < 1) {\n      return handleError(new Error(`Amount should be between 1 and ${token.amount}.`))\n    }\n\n    return createTransaction(token, transaction.amount, transaction.address.toLowerCase())\n  }\n\n  return (\n    <div>\n      <h2>Transfer ERC20 Token: {token.symbol}</h2>\n      <p>\n        <label>You have:</label>\n        <input type=\"text\" className=\"readonly\" defaultValue={token.amount} />\n      </p>\n      <p>\n        <label>Amount to sent:</label>\n        <input type=\"number\" className=\"amount\" value={transaction.amount} onChange={evt => setTransaction({ ...transaction, amount: parseInt(evt.target.value) })} />\n      </p>\n      <p>\n        <label>Recipient</label>\n        <input type=\"string\" className=\"recipient\" value={transaction.address} onChange={evt => setTransaction({ ...transaction, address: evt.target.value })} />\n      </p>\n\n      <p>\n        <button className=\"submit\" onClick={validateTransaction}>\n          Create Transaction\n        </button>\n      </p>\n    </div>\n  )\n}\n\nexport default TransferTokenModal\n","import local from './local.json'\nimport testnet from './testnet.json'\n\nexport const getContracts = (chainId: number) => {\n  switch (chainId) {\n    case 31: return testnet\n    default: return local\n  }\n}\n","import { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport { ERC20TransactionBuilder } from '@rsksmart/safe-transactions-sdk'\nimport { BigNumber, Contract } from 'ethers'\nimport React, { useEffect, useState } from 'react'\nimport Modal from '../../../components/Modal'\nimport TransferValueModal from './TransferValueModal'\nimport erc20Abi from './erc20.json'\nimport refreshIcon from '../../../images/refresh.svg'\nimport TransferTokenModal from './TransferTokenModal'\nimport { getContracts } from '../../../config'\n\ninterface Interface {\n  safe: Safe\n  handleError: (err: Error | null) => void\n  addTransaction: (transaction: SafeTransaction) => void\n}\n\nexport interface Erc20Token {\n  symbol: string\n  decimals: number\n  amount: number\n  contractAddress: string\n}\n\nconst AssetsComponent: React.FC<Interface> = ({ safe, addTransaction, handleError }) => {\n  const [showTransfer, setShowTransfer] = useState<boolean>(false)\n  const [showTokenTransfer, setShowTokenTransfer] = useState<Erc20Token | null>(null)\n\n  const [balance, setBalance] = useState<string>('0')\n  const [tokens, setTokens] = useState<any[]>([])\n\n  useEffect(() => {\n    getSafeBalance()\n\n    safe.getChainId().then((chainId: number) =>\n      getERC2Balance({ symbol: 'tRIF', decimals: 18, amount: 0, contractAddress: getContracts(chainId).rifToken }))\n  }, [safe])\n\n  const getSafeBalance = () => safe.getBalance().then((balance: BigNumber) => setBalance(balance.toString()))\n\n  const getERC2Balance = (token: Erc20Token) => {\n    const signer = safe.getSigner()\n    const contract = new Contract(token.contractAddress, erc20Abi, signer)\n    contract.balanceOf(safe.getAddress())\n      .then((result: BigNumber) => result.toString())\n      .then((result: string) => {\n        const updateToken = { ...token, amount: parseInt(result) / Math.pow(10, 18) }\n        const isListed = tokens.find((findToken: Erc20Token) => findToken.symbol === token.symbol)\n\n        const newTokenList = isListed\n          ? tokens.map((findToken: Erc20Token) => findToken.symbol === token.symbol ? updateToken : findToken)\n          : [...tokens, updateToken]\n\n        setTokens(newTokenList)\n      })\n      .catch((err: Error) => console.log('error', err))\n  }\n\n  // Create transaction to send rbtc or data\n  const createTransaction = (to: string, amount: number) => {\n    handleError(null)\n    safe.createTransaction({\n      to,\n      value: amount.toString(),\n      data: '0x'\n    })\n      .then((transaction: SafeTransaction) => addTransaction(transaction))\n      .catch(handleError)\n      .finally(() => setShowTransfer(false))\n  }\n\n  // Create transaction to send an ERC20 token:\n  const createTokenTransaction = (token: Erc20Token, amount: number, to: string) => {\n    handleError(null)\n    const contract = new Contract(token.contractAddress, erc20Abi, safe.getSigner())\n    const txBuilder = new ERC20TransactionBuilder(safe, contract)\n\n    const bigAmount = BigNumber.from(amount).mul(BigNumber.from(10).pow(token.decimals))\n\n    txBuilder.transfer(to, bigAmount)\n      .then((transaction: SafeTransaction) => addTransaction(transaction))\n      .catch(handleError)\n      .finally(() => setShowTokenTransfer(null))\n  }\n\n  return (\n    <>\n      <div className=\"panel\">\n        <h2>Assets</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Asset</th>\n              <th>Amount</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td><p>rBTC</p></td>\n              <td>\n                <p>\n                  {(parseInt(balance) / 1000000000000000000).toString()}\n                  <button className=\"icon\" onClick={getSafeBalance}>\n                    <img src={refreshIcon} alt=\"refresh balance\" />\n                  </button>\n                  <button className=\"icon\" onClick={() => setShowTransfer(true)}>transfer</button>\n                </p>\n              </td>\n            </tr>\n            {tokens.map((token: any) => (\n              <tr key={token.contractAddress}>\n                <td><p>{token.symbol}</p></td>\n                <td>\n                  {token.amount}\n                  <button className=\"icon\" onClick={() => getERC2Balance(token)}>\n                    <img src={refreshIcon} alt=\"refresh balance\" />\n                  </button>\n                  <button className=\"icon\" onClick={() => setShowTokenTransfer(token)}>\n                    transfer\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      {showTransfer && (\n        <Modal handleClose={() => setShowTransfer(false)}>\n          <TransferValueModal\n            createTransaction={createTransaction}\n            handleError={handleError}\n          />\n        </Modal>\n      )}\n      {showTokenTransfer && (\n        <Modal handleClose={() => setShowTokenTransfer(null)}>\n          <TransferTokenModal\n            token={showTokenTransfer}\n            handleError={handleError}\n            createTransaction={createTokenTransaction}\n          />\n        </Modal>\n      )}\n    </>\n  )\n}\n\nexport default AssetsComponent\n","import React from 'react'\nimport Modal from './Modal'\n\ninterface Interface {\n  closeModal: () => void\n  changeScreen: () => void\n}\n\nconst TransactionCreatedModal: React.FC<Interface> = ({ closeModal, changeScreen }) => {\n  return (\n    <Modal handleClose={closeModal}>\n      <h2>Transaction Created</h2>\n      <p>A transaction has been created and added to the transaction panel. You can sign the transaction there, and when enough signatures are collected, execute it.</p>\n      <p>\n        <button onClick={changeScreen}>View Transactions</button>\n      </p>\n    </Modal>\n  )\n}\n\nexport default TransactionCreatedModal\n","import React, { useState, MouseEvent } from 'react'\nimport { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport Navigation from './Navigation'\nimport TransactionsPanel from './transactions'\nimport Dashboard from './Dashboard'\nimport PolicyComponent from './policies'\nimport AssetsComponent from './assets'\nimport TransactionCreatedModal from '../../components/TransactionCreatedModal'\n\ninterface Interface {\n  safe: Safe\n  walletAddress: string\n  handleLogout: () => void\n  handleError: (err: Error | null) => void\n}\n\n// Wrapper for transaction to keep track of the status, and hash to be used as an identifier\nexport interface TransactionBundle {\n  transaction: SafeTransaction\n  hash: string\n  status: 'PENDING' | 'EXECUTED'\n}\n\nconst SafeInteraction: React.FC<Interface> = ({ safe, walletAddress, handleError, handleLogout }) => {\n  // UI Only\n  const [selectedTab, setSelectedTab] = useState<string>('dashboard')\n  const [showTransactionInfo, setShowTransactionInfo] = useState<boolean>(false)\n  const changeActive = (evt: MouseEvent<HTMLButtonElement>) => setSelectedTab(evt.currentTarget.id)\n\n  // Transaction Management, pending transactions:\n  const [transactions, setTransactions] = useState<TransactionBundle[]>([])\n  const addTransaction = (transaction: SafeTransaction) => {\n    // get the hash to be used as an identifier\n    safe.getTransactionHash(transaction)\n      .then((hash: string) => {\n        setTransactions([...transactions, { status: 'PENDING', transaction, hash }])\n        setShowTransactionInfo(true)\n      })\n  }\n\n  // update a transaction to 'EXECUTED'\n  const updateTransactionStatus = (transactionBundle: TransactionBundle) => {\n    const newTransactionList = transactions.map((item: TransactionBundle) =>\n      item.hash === transactionBundle.hash ? { ...item, status: 'EXECUTED' } : item\n    )\n    setTransactions(newTransactionList as TransactionBundle[])\n  }\n\n  const closeModalAndSwitchScreen = () => {\n    setShowTransactionInfo(false)\n    setSelectedTab('transactions')\n  }\n\n  return (\n    <section className=\"selectedSafe\">\n      <Navigation handleLogout={handleLogout} changeActive={changeActive} selected={selectedTab} />\n      {selectedTab === 'dashboard' && <Dashboard safe={safe} />}\n      {selectedTab === 'transactions' && <TransactionsPanel safe={safe} transactions={transactions} handleError={handleError} updateTransactionStatus={updateTransactionStatus} walletAddress={walletAddress} />}\n      {selectedTab === 'assets' && <AssetsComponent safe={safe} handleError={handleError} addTransaction={addTransaction} />}\n      {selectedTab === 'policy' && <PolicyComponent safe={safe} addTransaction={addTransaction} handleError={handleError} />}\n\n      {showTransactionInfo && <TransactionCreatedModal closeModal={() => setShowTransactionInfo(false)} changeScreen={closeModalAndSwitchScreen} />}\n    </section>\n  )\n}\n\nexport default SafeInteraction\n","import React, { useState } from 'react'\nimport { isAddress } from '@ethersproject/address'\n\ninterface Interface {\n  connectAddress: string | null\n  handleError: (error: Error) => void\n  createSafe: (addresses: string[], threshold: number) => void\n}\n\nconst CreateSafeComponent: React.FC<Interface> = ({ connectAddress, createSafe, handleError }) => {\n  const [addresses, setAddresses] = useState<string[]>([connectAddress ? connectAddress.toLowerCase() : ''])\n  const [threshold, setThreshold] = useState<number>(1)\n\n  const changeAddressValue = (evt: any) => {\n    const changeIndex = parseInt(evt.target.id.replace('address', ''))\n    const updateList = addresses.map((item: string, index: number) => index === changeIndex ? evt.target.value.toLowerCase() : item)\n    setAddresses(updateList)\n  }\n\n  const removeAddress = (changeIndex: number) => {\n    const updateList = addresses.filter((_item: string, index: number) => index !== changeIndex)\n    setAddresses(updateList)\n  }\n\n  const validateSafeSettings = () => {\n    const errorList: number[] = []\n    addresses.forEach((address: string, index: number) => {\n      if (!isAddress(address)) {\n        errorList.push(index + 1)\n      }\n    })\n\n    if (errorList.length !== 0) {\n      handleError(new Error(`Incorrect Addresses for: ${errorList.toString()}`))\n      return false\n    }\n\n    createSafe(addresses, threshold)\n  }\n\n  const loopOptions = (length: number) => {\n    const items = []\n    for (let index = 0; index < length; index++) {\n      items.push(<option key={index} value={index + 1}>{index + 1}</option>)\n    }\n    return items\n  }\n\n  return (\n    <div>\n      <h4>Create a new safe</h4>\n      <p>\n        A safe can have any number of owners associated with it. Your connected address has been added as the first account.<br/>\n        Click the <em>Add address</em> button to add additional addresses, and the <em>delete button</em> to remove addresses.\n      </p>\n\n      <ul>\n        {addresses.map((address: string, index: number) => (\n          <li key={index}>\n            <label>Address {index + 1}: </label>\n            <input type=\"text\"\n              id={`address${index}`}\n              value={address}\n              onChange={changeAddressValue}\n              className={`address${index}`}\n            />\n            <button className={`removeAddress${index}`} onClick={() => removeAddress(index)}>delete</button>\n          </li>\n        ))}\n      </ul>\n      <button className=\"addAddress\" onClick={() => setAddresses([...addresses, ''])}>Add address</button>\n\n      <p>Transactions require the confirmation of at least{' '}\n        <select className=\"threshold\" value={threshold.toString()} onChange={evt => setThreshold(parseInt(evt.target.value))}>\n          {loopOptions(addresses.length)}\n        </select>\n        signatures.\n      </p>\n      <button className=\"submit\" disabled={addresses.length === 0} onClick={validateSafeSettings}>Create Safe</button>\n    </div>\n  )\n}\n\nexport default CreateSafeComponent\n","import React, { useState } from 'react'\n\ninterface Interface {\n  connectToSafe: (safeAddress: string) => void\n}\n\nconst ConnectToSafeComponent: React.FC<Interface> = ({ connectToSafe }) => {\n  const [safeAddress, setSafeAddress] = useState<string>('')\n\n  return (\n    <div>\n      <h3>Connect to an existing safe</h3>\n      <label>Safe address</label>\n      <input className=\"safeAddress\" type=\"text\" value={safeAddress} onChange={evt => setSafeAddress(evt.target.value)} />\n      <button className=\"connect\" onClick={() => connectToSafe(safeAddress)}>Connect</button>\n    </div>\n  )\n}\n\nexport default ConnectToSafeComponent\n","import React, { useState } from 'react'\nimport EthersSafe, { Safe } from '@gnosis.pm/safe-core-sdk'\nimport { EthersSafeFactory } from '@rsksmart/safe-factory-sdk'\nimport { ethers } from 'ethers'\n\nimport CreateSafeComponent from './CreateSafeComponent'\nimport ConnectToSafeComponent from './ConnectToSafeComponent'\nimport { getContracts } from '../../config'\nimport LoadingComponent from '../../components/LoadingComponent'\n\ninterface Interface {\n  web3Provider: any\n  chainId: number\n  handleSetSafe: (safe: Safe | EthersSafe) => any\n  handleError: (error: Error) => void\n  address: string | null\n}\n\nconst ChooseSafe: React.FC<Interface> = ({ web3Provider, chainId, handleSetSafe, handleError, address }) => {\n  // UI variables\n  const [isCreate, setIsCreate] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n\n  // Create a new safe:\n  const createSafe = (addresses: string[], threshold: number) => {\n    setIsLoading(true)\n\n    const contracts = getContracts(chainId)\n    const provider = new ethers.providers.Web3Provider(web3Provider)\n\n    const signer = provider.getSigner()\n\n    const safeFactory = new EthersSafeFactory(\n      signer,\n      contracts.proxyFactoryAddress.toLowerCase(),\n      contracts.safeSingletonAddress.toLowerCase()\n    )\n\n    safeFactory.createSafe({ owners: addresses, threshold })\n      .then(handleSetSafe)\n      .catch(handleError)\n      .finally(() => setIsLoading(false))\n  }\n\n  // Connect to an existing safe:\n  const connectToSafe = (safeAddress: string) => {\n    setIsLoading(true)\n\n    const provider = new ethers.providers.Web3Provider(web3Provider)\n    const signer = provider.getSigner()\n\n    EthersSafe.create(ethers, safeAddress.toLowerCase(), signer)\n      .then((safe: any) => handleSetSafe(safe))\n      .catch(handleError)\n      .finally(() => setIsLoading(false))\n  }\n\n  return isLoading ? <LoadingComponent />\n    : (\n      <section className=\"connect panel\">\n        <h2>\n        Create a safe, or connect to an existing one\n          <button onClick={() => setIsCreate(!isCreate)}>\n            {isCreate ? 'Connect to Safe' : 'Create Safe'}\n          </button>\n        </h2>\n        {isCreate ? (\n          <CreateSafeComponent\n            createSafe={createSafe}\n            handleError={handleError}\n            connectAddress={address}\n          />\n        ) : (\n          <ConnectToSafeComponent\n            connectToSafe={connectToSafe}\n          />\n        )}\n      </section>\n    )\n}\n\nexport default ChooseSafe\n","import React, { useState } from 'react'\nimport RLogin from '@rsksmart/rlogin'\nimport { Safe } from '@gnosis.pm/safe-core-sdk'\n\nimport './styles/App.scss'\nimport Web3Provider from './pages/start/ConnectWalletComponent'\nimport ConnectedBar from './components/ConnectedBar'\nimport SafeInteraction from './pages/safeInteraction'\nimport ChooseSafe from './pages/connectToSafe'\n\nconst rLogin = new RLogin({\n  cacheProvider: false,\n  supportedChains: [31, 1337]\n})\n\nfunction App () {\n  const [error, setError] = useState<null | string>('')\n\n  // Web3Provider and Safe variables\n  const [rLoginResponse, setRLoginResponse] = useState<{ provider: any, disconnect: any } | null>(null)\n  const [safe, setSafe] = useState<Safe | null>(null)\n\n  // provider variables\n  const [address, setAddress] = useState<string | null>(null)\n  const [chainId, setChainId] = useState<number | null>(null)\n\n  const web3ProviderResponse = (response: any, address: string, chainId: number) => {\n    setRLoginResponse(response)\n    setAddress(address)\n    setChainId(chainId)\n\n    // listen for address change and update:\n    response.provider.on('accountsChanged', (accounts: string[]) => setAddress(accounts[0]))\n  }\n\n  const handleSetSafe = (safe: Safe) => {\n    setSafe(safe)\n    handleError(null)\n  }\n\n  const handleError = (error: Error | null) => error ? setError(error.message) : setError(null)\n\n  const handleLogout = () => {\n    rLoginResponse?.disconnect()\n    setRLoginResponse(null)\n    setSafe(null)\n    setError(null)\n    setAddress(null)\n    setChainId(null)\n  }\n\n  return (\n    <div className={rLoginResponse ? 'App' : 'App signin'}>\n      {!rLoginResponse ? (\n        <Web3Provider\n          rLogin={rLogin}\n          setRLoginResponse={web3ProviderResponse}\n          handleError={handleError}\n        />\n      ) : <ConnectedBar chainId={chainId} walletAddress={address} />\n      }\n\n      {error && (\n        <section className=\"error\">\n          <p>{error}</p>\n          <button onClick={() => handleError(null)}>x</button>\n        </section>\n      )}\n\n      {rLoginResponse && chainId && !safe && (\n        <ChooseSafe\n          web3Provider={rLoginResponse.provider}\n          chainId={chainId}\n          handleSetSafe={handleSetSafe}\n          handleError={handleError}\n          address={address}\n        />\n      )}\n\n      {rLoginResponse && address && safe && (\n        <SafeInteraction\n          safe={safe}\n          walletAddress={address}\n          handleLogout={handleLogout}\n          handleError={handleError}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}