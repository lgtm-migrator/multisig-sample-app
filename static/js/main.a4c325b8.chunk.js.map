{"version":3,"sources":["images/rif-safe.svg","images/powered-by-iov.svg","pages/start/ConnectWalletComponent.tsx","images/rif-safe-header.svg","components/ConnectedBar.tsx","pages/safeInteraction/Navigation.tsx","components/Modal.tsx","components/ViewExplorerButton.tsx","pages/safeInteraction/transactions/ApprovedModal.tsx","pages/safeInteraction/transactions/ExecutedModal.tsx","components/CopyValueButton.tsx","components/ValueWithButtons.tsx","images/refresh.svg","pages/safeInteraction/transactions/TransactionDetailComponent.tsx","pages/safeInteraction/transactions/index.tsx","pages/safeInteraction/Dashboard.tsx","components/ThresholdDropdown.tsx","pages/safeInteraction/policies/ChangeThresholdModal.tsx","pages/safeInteraction/policies/AddOwnerModal.tsx","pages/safeInteraction/policies/RemoveOwnerModal.tsx","pages/safeInteraction/policies/SwapOwnerModal.tsx","images/delete.svg","images/swap.svg","images/edit.svg","pages/safeInteraction/policies/index.tsx","pages/safeInteraction/assets/TransferValueModal.tsx","pages/safeInteraction/assets/TransferTokenModal.tsx","config/index.ts","pages/safeInteraction/assets/index.tsx","components/TransactionCreatedModal.tsx","pages/safeInteraction/index.tsx","pages/connectToSafe/CreateSafeComponent.tsx","pages/connectToSafe/ConnectToSafeComponent.tsx","pages/connectToSafe/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Web3Provider","rLogin","setRLoginResponse","handleError","className","src","rifSafeLogo","alt","onClick","connect","then","rLoginResponse","Promise","all","provider","request","method","response","parseInt","catch","poweredByLogo","ConnectedBar","walletAddress","chainId","slice","length","id","chainIdtoString","Navigation","changeActive","handleLogout","selected","Modal","handleClose","children","ViewExplorerButton","address","href","toLowerCase","target","rel","xmlns","width","height","viewBox","fill","fillRule","d","ApprovedModal","hash","type","defaultValue","ExecutedModal","CopyButton","value","copyTextField","useRef","current","select","document","execCommand","ref","style","position","left","ValueWithButtons","CopyValueButton","TransactionDetailComponent","safe","transaction","approveTransactionHash","executeTransaction","useState","showDetails","setShowDetails","setHash","signatures","setSignatures","threshold","setThreshold","isRefreshing","setIsRefreshing","formatted","setFormatted","useEffect","getTransactionHash","txHash","getApprovals","InputDataDecoder","safeAbi","decodeData","data","erc20Abi","getThreshold","safeThreshold","getOwnersWhoApprovedTx","signers","finally","to","refreshIcon","disabled","filter","nonce","JSON","stringify","map","approval","TransactionsPanel","addTransaction","transactions","showApprovedModal","setShowApprovedModal","showExecutedModal","setShowExecutedModal","result","console","log","index","Dashboard","balance","setBalance","getBalance","getAddress","toString","ThresholdDropdown","onChange","numberOfOwners","options","push","evt","number","ChangeThresholdModal","currentThreshold","handleSubmit","newThreshold","setNewThreshold","AddOwnerModal","newOwner","setNewOwner","isAddress","Error","RemoveOwnerModal","removeAddress","SwapOwnerModal","oldAddress","PolicyComponent","owners","setOwners","addNewOwner","setAddNewOwner","changeThreshold","setChangeThreshold","removeOwner","setRemoveOwner","swapOwner","setSwapOwner","getOwners","afterTransaction","owner","deleteIcon","swapIcon","editIcon","getChangeThresholdTx","getAddOwnerTx","getRemoveOwnerTx","getSwapOwnerTx","TransferValueModal","createTransaction","recipient","setRecipient","amount","setAmount","TransferTokenModal","token","setTransaction","symbol","getContracts","testnet","local","AssetsComponent","showTransfer","setShowTransfer","showTokenTransfer","setShowTokenTransfer","tokens","setTokens","getSafeBalance","getChainId","getERC2Balance","decimals","contractAddress","rifToken","signer","getSigner","Contract","balanceOf","updateToken","Math","pow","newTokenList","find","findToken","err","contract","txBuilder","ERC20TransactionBuilder","bigAmount","BigNumber","from","mul","transfer","TransactionCreatedModal","closeModal","changeScreen","SafeInteraction","selectedTab","setSelectedTab","showTransactionInfo","setShowTransactionInfo","setTransactions","currentTarget","CreateSafeComponent","connectAddress","createSafe","addresses","setAddresses","changeAddressValue","changeIndex","replace","updateList","item","_item","items","loopOptions","errorList","forEach","ConnectToSafeComponent","connectToSafe","safeAddress","setSafeAddress","ChooseSafe","web3Provider","handleSetSafe","isCreate","setIsCreate","isLoading","setIsLoading","textAlign","contracts","ethers","providers","EthersSafeFactory","proxyFactoryAddress","safeSingletonAddress","EthersSafe","create","RLogin","cacheProvider","supportedChains","App","error","setError","setSafe","setAddress","setChainId","message","clearError","on","accounts","disconnect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a4c325b8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rif-safe.6d74aa93.svg\";","export default __webpack_public_path__ + \"static/media/powered-by-iov.a0397e40.svg\";","import React from 'react'\nimport { RLoginButton } from '@rsksmart/rlogin'\nimport rifSafeLogo from '../../images/rif-safe.svg'\nimport poweredByLogo from '../../images/powered-by-iov.svg'\n\ninterface Interface {\n  rLogin: any\n  setRLoginResponse: (response: any, address: string, chainId: number) => void\n  handleError: (error: Error) => void\n}\n\nconst Web3Provider: React.FC<Interface> = ({ rLogin, setRLoginResponse, handleError }) => {\n  const handleLogin = () =>\n    rLogin.connect()\n      .then((rLoginResponse: any) => {\n        Promise.all([\n          rLoginResponse.provider.request({ method: 'eth_accounts' }),\n          rLoginResponse.provider.request({ method: 'eth_chainId' })\n        ]).then((response: any) => {\n          setRLoginResponse(rLoginResponse, response[0][0], parseInt(response[1]))\n        })\n      })\n      .catch(handleError)\n\n  return (\n    <section className=\"login\">\n      <img src={rifSafeLogo} alt=\"RIF Safe\" />\n      <h2>Login with your wallet</h2>\n      <p><RLoginButton onClick={handleLogin}>Connect with rLogin!</RLoginButton></p>\n      <img src={poweredByLogo} alt=\"Powered by IOV Labs\" />\n      <p className=\"legal\">Copyright © 2021 IOV Labs. All rights reserved.</p>\n    </section>\n  )\n}\n\nexport default Web3Provider\n","export default __webpack_public_path__ + \"static/media/rif-safe-header.ac579ff7.svg\";","import React from 'react'\nimport rifSafeLogo from '../images/rif-safe-header.svg'\n\ninterface Interface {\n  chainId: number | null\n  walletAddress: string | null\n}\n\nconst ConnectedBar: React.FC<Interface> = ({ walletAddress, chainId }) => {\n  const chainIdtoString = (id: number) => {\n    switch (id) {\n      case 31: return 'RSK Testnet'\n      case 30: return 'RSK Mainnet'\n      default: return 'Local'\n    }\n  }\n  return (\n    <section className=\"header\">\n      <ul className=\"inline\">\n        <li><img src={rifSafeLogo} alt=\"RIF Safe\" /></li>\n        {walletAddress && (\n          <li className=\"address\">\n            {`${walletAddress.slice(0, 8)}...${walletAddress.slice(walletAddress.length - 6)}`}\n          </li>\n        )}\n        <li className=\"chainId\"><span>{chainId && chainIdtoString(chainId)}</span></li>\n      </ul>\n    </section>\n  )\n}\n\nexport default ConnectedBar\n","import React, { MouseEvent } from 'react'\n\ninterface Interface {\n  handleLogout: () => void\n  changeActive: (event: MouseEvent<HTMLButtonElement>) => void\n  selected: string\n}\n\nconst Navigation: React.FC<Interface> = ({ changeActive, handleLogout, selected }) => {\n  return (\n    <ul className=\"navigation\">\n      <li><button id=\"dashboard\" className={selected === 'dashboard' ? 'selected' : ''} onClick={changeActive}>Dashboard</button></li>\n      <li><button id=\"transactions\" className={selected === 'transactions' ? 'selected' : ''} onClick={changeActive}>Transactions</button></li>\n      <li><button id=\"assets\" className={selected === 'assets' ? 'selected' : ''} onClick={changeActive}>Assets</button></li>\n      <li><button id=\"policy\" className={selected === 'policy' ? 'selected' : ''} onClick={changeActive}>Policies</button></li>\n      <li className=\"logout\"><button onClick={handleLogout}>Disconnect Wallet</button></li>\n    </ul>\n  )\n}\n\nexport default Navigation\n","import React, { ReactNode } from 'react'\n\ninterface Interface {\n  handleClose?: () => void\n  children: ReactNode\n}\n\nconst Modal: React.FC<Interface> = ({ handleClose, children }) => {\n  return (\n    <div className=\"modal\">\n      <div className=\"modalBody\">\n        <div className=\"modalHeader\">\n          {handleClose && <button className=\"close\" onClick={handleClose}>x</button>}\n        </div>\n        <div className=\"modalContent\">\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","import React from 'react'\n\ninterface Interface {\n  address: string\n}\n\nconst ViewExplorerButton: React.FC<Interface> = ({ address }) => {\n  return (\n    <a\n      href={`http://explorer.testnet.rsk.co/address/${address.toLowerCase()}`}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      className=\"icon explorerLink\"\n    >\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0H16V16H0z\"></path><path className=\"icon-color\" fillRule=\"nonzero\" d=\"M13 13v-2c0-.552.448-1 1-1s1 .448 1 1v2c0 1.105-.895 2-2 2H3c-1.105 0-2-.895-2-2V3c0-1.105.895-2 2-2h2c.552 0 1 .448 1 1s-.448 1-1 1H3v10h10z\"></path><path className=\"icon-color\" d=\"M11.586 3H9c-.552 0-1-.448-1-1s.448-1 1-1h5c.276 0 .526.112.707.293.181.18.293.43.293.707v5c0 .552-.448 1-1 1s-1-.448-1-1V4.414l-6.243 6.243c-.39.39-1.023.39-1.414 0-.39-.39-.39-1.024 0-1.414L11.586 3z\"></path></g></svg>\n    </a>\n  )\n}\n\nexport default ViewExplorerButton\n","import React from 'react'\nimport Modal from '../../../components/Modal'\nimport ViewExplorerButton from '../../../components/ViewExplorerButton'\n\ninterface Interface {\n  handleClose: () => void\n  hash: string\n}\n\nconst ApprovedModal: React.FC<Interface> = ({ hash, handleClose }) => {\n  return (\n    <Modal handleClose={handleClose}>\n      <h2>Transaction Approved</h2>\n      <p>Your signature has been added to this transaction! This is the hash of the transaction:</p>\n      <p>\n        <input type=\"text\" defaultValue={hash} />\n        <ViewExplorerButton address={hash} />\n      </p>\n      <p>Once it has been confirmed on the blockchain, you will see it under approvals.</p>\n      <p><button onClick={handleClose}>Close modal</button></p>\n    </Modal>\n  )\n}\n\nexport default ApprovedModal\n","import React from 'react'\nimport Modal from '../../../components/Modal'\nimport ViewExplorerButton from '../../../components/ViewExplorerButton'\n\ninterface Interface {\n  handleClose: () => void\n  hash: string\n}\n\nconst ExecutedModal: React.FC<Interface> = ({ handleClose, hash }) => {\n  return (\n    <Modal handleClose={handleClose}>\n      <h2>Transaction executed</h2>\n      <p>This is the hash of the transaction:</p>\n      <p>\n        <input type=\"text\" defaultValue={hash} />\n        <ViewExplorerButton address={hash} />\n      </p>\n      <p><button onClick={handleClose}>Close modal</button></p>\n    </Modal>\n  )\n}\n\nexport default ExecutedModal\n","import React, { useRef } from 'react'\n\ninterface CopyButtonInterface {\n  value: string\n}\n\nconst CopyButton: React.FC<CopyButtonInterface> = ({ value }) => {\n  const copyTextField = useRef<HTMLInputElement>(null)\n\n  const handleClick = () => {\n    copyTextField.current && copyTextField.current.select()\n    document.execCommand('copy')\n  }\n\n  return (\n    <span className=\"copyButton\">\n      <button type=\"button\" className=\"icon\" onClick={handleClick}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0H16V16H0z\"></path><path className=\"icon-color\" fillRule=\"nonzero\" d=\"M10 10h3V3H8v1c1.105 0 2 .895 2 2v4zM6 4V3c0-1.105.895-2 2-2h5c1.105 0 2 .895 2 2v7c0 1.105-.895 2-2 2h-3v1c0 1.105-.895 2-2 2H3c-1.105 0-2-.895-2-2V6c0-1.105.895-2 2-2h3zM3 6v7h5V6H3z\"></path></g></svg>\n      </button>\n\n      <input\n        type=\"text\"\n        className=\"copyText\"\n        defaultValue={value}\n        ref={copyTextField}\n        style={{ position: 'absolute', left: '-10000px' }}\n      />\n    </span>\n  )\n}\n\nexport default CopyButton\n","import React from 'react'\nimport CopyValueButton from './CopyValueButton'\nimport ViewExplorerButton from './ViewExplorerButton'\n\ninterface Interface {\n  value: string\n}\n\nconst ValueWithButtons: React.FC<Interface> = ({ value }) => {\n  return (\n    <>\n      {value}\n      <CopyValueButton value={value} />\n      <ViewExplorerButton address={value} />\n    </>\n  )\n}\n\nexport default ValueWithButtons\n","export default __webpack_public_path__ + \"static/media/refresh.7a8b3bf4.svg\";","import { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport React, { useEffect, useState } from 'react'\nimport ValueWithButtons from '../../../components/ValueWithButtons'\nimport refreshIcon from '../../../images/refresh.svg'\n\nimport safeAbi from '@gnosis.pm/safe-core-sdk/dist/src/abis/SafeAbiV1-2-0.json'\nimport erc20Abi from '../assets/erc20.json'\nimport InputDataDecoder from 'ethereum-input-data-decoder'\n\ninterface Interface {\n  safe: Safe\n  transaction: SafeTransaction\n  walletAddress: string\n  approveTransactionHash: (transaction: SafeTransaction) => Promise<any>\n  executeTransaction: (transaction: SafeTransaction) => void\n  handleError: (error: Error) => void\n}\n\nconst TransactionDetailComponent: React.FC<Interface> = ({\n  safe, transaction, walletAddress, handleError, approveTransactionHash, executeTransaction\n}) => {\n  const [showDetails, setShowDetails] = useState<boolean>(false)\n  const [hash, setHash] = useState<string>('')\n  const [signatures, setSignatures] = useState<string[]>([])\n  const [threshold, setThreshold] = useState<number>(0)\n  const [isRefreshing, setIsRefreshing] = useState<boolean>(false)\n  const [formatted, setFormatted] = useState<any>(null)\n\n  useEffect(() => {\n    safe.getTransactionHash(transaction).then((txHash: string) => {\n      setHash(txHash)\n      getApprovals(txHash)\n\n      // try to decode the data\n      const formatted = new InputDataDecoder(safeAbi).decodeData(transaction.data.data)\n      if (formatted.method) {\n        setFormatted(formatted)\n      } else {\n        setFormatted(new InputDataDecoder(erc20Abi).decodeData(transaction.data.data))\n      }\n    })\n\n    safe.getThreshold().then((safeThreshold: number) => setThreshold(safeThreshold))\n  }, [transaction])\n\n  const getApprovals = (txHash: string) => {\n    setIsRefreshing(true)\n    safe.getOwnersWhoApprovedTx(txHash)\n      .then((signers: string[]) => setSignatures(signers))\n      .catch(handleError)\n      .finally(() => setIsRefreshing(false))\n  }\n\n  const getTransactionName = () => {\n    if (transaction.data.data === '0x') {\n      return 'Send Value'\n    } else if (formatted.method) {\n      return formatted.method\n    } else {\n      return 'unknown'\n    }\n  }\n\n  return (\n    <div className=\"transaction\">\n      <div className=\"summary\">\n        <p><strong>{formatted && getTransactionName()}</strong></p>\n        <p><strong>to: </strong>\n          <ValueWithButtons value={transaction.data.to} />\n        </p>\n        {transaction.data.value !== '0' && <p><strong>value: </strong>{transaction.data.value}</p>}\n        <p><strong>approvals: </strong>\n          {isRefreshing ? 'loading...' : `${signatures.length} out of ${threshold}`}\n          <button className=\"icon\" onClick={() => getApprovals(hash)}>\n            <img src={refreshIcon} alt=\"refresh\" />\n          </button>\n        </p>\n      </div>\n      <div className=\"buttons\">\n        <button\n          onClick={() => setShowDetails(!showDetails)}>{showDetails ? 'hide ' : 'show '}details</button>\n        <button\n          disabled={signatures.filter((value: string) => value === walletAddress).length === 1}\n          onClick={() => approveTransactionHash(transaction)}>approve</button>\n        <button\n          disabled={threshold > signatures.length}\n          onClick={() => executeTransaction(transaction)}>execute</button>\n      </div>\n\n      {showDetails && (\n        <table><tbody>\n          <tr>\n            <th>Transaction Hash</th>\n            <td><ValueWithButtons value={hash} /></td>\n          </tr>\n          <tr>\n            <th>Nonce</th>\n            <td><p>{transaction.data.nonce}</p></td>\n          </tr>\n          <tr>\n            <th>Raw Data</th>\n            <td><p className=\"data\">{transaction.data.data}</p></td>\n          </tr>\n          <tr>\n            <th>Decoded Data</th>\n            <td>\n              <pre>{JSON.stringify(formatted, null, 2)}</pre>\n            </td>\n          </tr>\n          <tr>\n            <th>Approvals:</th>\n            <td>\n              {signatures.length === 0 ? <p><em>No signatures</em></p> : (\n                <ol>\n                  {signatures.map((approval: string) => <li key={approval}><ValueWithButtons value={approval} /></li>)}\n                </ol>\n              )}\n            </td>\n          </tr>\n        </tbody></table>\n      )}\n    </div>\n  )\n}\n\nexport default TransactionDetailComponent\n","import { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport { ContractTransaction } from 'ethers'\nimport React, { useState } from 'react'\nimport ApprovedModal from './ApprovedModal'\nimport ExecutedModal from './ExecutedModal'\nimport TransactionDetailComponent from './TransactionDetailComponent'\n\ninterface Interface {\n  safe: Safe\n  handleError: (err: Error) => void\n  transactions: SafeTransaction[]\n  addTransaction: (transaction: SafeTransaction) => void\n  walletAddress: string\n}\n\nconst TransactionsPanel: React.FC<Interface> = ({ safe, handleError, addTransaction, walletAddress, transactions }) => {\n  const [showApprovedModal, setShowApprovedModal] = useState<string | null>(null)\n  const [showExecutedModal, setShowExecutedModal] = useState<string | null>(null)\n\n  // Sign transaction \"on-chain\"\n  const approveTransactionHash = (transaction: SafeTransaction) =>\n    safe.getTransactionHash(transaction)\n      .then((hash: string) =>\n        safe.approveTransactionHash(hash)\n          .then((result: ContractTransaction) => setShowApprovedModal(result.hash))\n          .catch(handleError))\n\n  // Execute transaction\n  const executeTransaction = (transaction: SafeTransaction) =>\n    safe.executeTransaction(transaction)\n      .then((result: ContractTransaction) => {\n        console.log('executed:', result)\n        setShowExecutedModal(result.hash)\n        // @todo move transaction from pending to confirmed ;-)\n      })\n      .catch(handleError)\n\n  return (\n    <>\n      <section className=\"panel\">\n        <h2>Transactions</h2>\n        {transactions.map((transaction: SafeTransaction, index: number) =>\n          <TransactionDetailComponent\n            safe={safe}\n            transaction={transaction}\n            handleError={handleError}\n            approveTransactionHash={approveTransactionHash}\n            executeTransaction={executeTransaction}\n            walletAddress={walletAddress}\n            key={index}\n          />\n        )}\n      </section>\n\n      {showApprovedModal && <ApprovedModal hash={showApprovedModal} handleClose={() => setShowApprovedModal(null)} />}\n      {showExecutedModal && <ExecutedModal hash={showExecutedModal} handleClose={() => setShowExecutedModal(null)} />}\n    </>\n  )\n}\n\nexport default TransactionsPanel\n","import { Safe } from '@gnosis.pm/safe-core-sdk'\nimport React, { useEffect, useState } from 'react'\nimport ValueWithButtons from '../../components/ValueWithButtons'\n\ninterface Interface {\n  safe: Safe\n}\n\nconst Dashboard: React.FC<Interface> = ({ safe }) => {\n  const [balance, setBalance] = useState<number>(0)\n\n  useEffect(() => {\n    safe.getBalance().then((balance: any) => setBalance(balance))\n  }, [safe])\n\n  return (\n    <section className=\"panel\">\n      <h3>Safe Dashboard</h3>\n      <table>\n        <tbody>\n          <tr>\n            <th>Safe Address</th>\n            <td><ValueWithButtons value={safe.getAddress()} /></td>\n          </tr>\n          <tr className=\"text\">\n            <th>Balance</th>\n            <td>{(balance / 1000000000000000000).toString()}</td>\n          </tr>\n        </tbody>\n      </table>\n    </section>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\n\ninterface Interface {\n  value: number\n  onChange: (value: number) => void\n  numberOfOwners: number\n}\n\nconst ThresholdDropdown: React.FC<Interface> = ({ value, onChange, numberOfOwners }) => {\n  const options = []\n  for (let index = 1; index <= numberOfOwners; index++) {\n    options.push(index)\n  }\n\n  const handleChange = (evt: any) => onChange(parseInt(evt.target.value))\n\n  return (\n    <select value={value} onChange={handleChange}>\n      {options.map((number: number) => <option key={number} value={number}>{number}</option>)}\n    </select>\n  )\n}\n\nexport default ThresholdDropdown\n","import React, { useState } from 'react'\nimport ThresholdDropdown from '../../../components/ThresholdDropdown'\n\ninterface Interface {\n  numberOfOwners: number\n  currentThreshold: number\n  handleSubmit: (newThreshold: number) => void\n}\n\nconst ChangeThresholdModal: React.FC<Interface> = ({ numberOfOwners, currentThreshold, handleSubmit }) => {\n  const [newThreshold, setNewThreshold] = useState<number>(currentThreshold)\n\n  const options = []\n  for (let index = 1; index <= numberOfOwners; index++) {\n    options.push(index)\n  }\n\n  return (\n    <div>\n      <h3>Change threshold</h3>\n      <p>Change the number of approvers for a transaction to be executed</p>\n      <label>New threshold:</label>\n      <ThresholdDropdown\n        numberOfOwners={numberOfOwners}\n        value={newThreshold}\n        onChange={(value: number) => setNewThreshold(value)}\n      />\n\n      <p><button onClick={() => handleSubmit(newThreshold)}>Change threshold</button></p>\n    </div>\n  )\n}\n\nexport default ChangeThresholdModal\n","import { isAddress } from '@ethersproject/address'\nimport React, { useState } from 'react'\nimport ThresholdDropdown from '../../../components/ThresholdDropdown'\n\ninterface Interface {\n  numberOfOwners: number\n  handleSubmit: (newOwner: string, newThreshold: number) => void\n  handleError: (err: Error) => void\n}\n\nconst AddOwnerModal: React.FC<Interface> = ({ handleSubmit, handleError, numberOfOwners }) => {\n  const [newOwner, setNewOwner] = useState<string>('')\n  const [newThreshold, setNewThreshold] = useState<number>(numberOfOwners)\n\n  const validateAddress = () => {\n    isAddress(newOwner.toLowerCase())\n      ? handleSubmit(newOwner.toLowerCase(), newThreshold)\n      : handleError(new Error('Value is not an address.'))\n  }\n\n  return (\n    <div>\n      <h3>Add new owner</h3>\n      <label>\n        Address</label>\n      <input type=\"text\" className=\"newOwner\" value={newOwner} onChange={evt => setNewOwner(evt.target.value)} />\n\n      <label>New Threshold</label>\n      <ThresholdDropdown\n        numberOfOwners={numberOfOwners + 1}\n        value={newThreshold}\n        onChange={(value: number) => setNewThreshold(value)}\n      />\n\n      <p><button onClick={validateAddress}>Update</button></p>\n    </div>\n  )\n}\n\nexport default AddOwnerModal\n","import React, { useState } from 'react'\nimport ThresholdDropdown from '../../../components/ThresholdDropdown'\n\ninterface Interface {\n  numberOfOwners: number\n  handleSubmit: (address: string, threshold: number) => void\n  removeAddress: string\n}\n\nconst RemoveOwnerModal: React.FC<Interface> = ({ numberOfOwners, handleSubmit, removeAddress }) => {\n  const [threshold, setThreshold] = useState<number>(numberOfOwners - 1)\n\n  return (\n    <div>\n      <h3>Remove owner</h3>\n      <p>Are you sure you want to remove this owner?</p>\n      <input type=\"text\" defaultValue={removeAddress} />\n\n      <p>\n        <label>New threshold:</label>\n        <ThresholdDropdown\n          numberOfOwners={numberOfOwners - 1}\n          value={threshold}\n          onChange={(value: number) => setThreshold(value)} />\n      </p>\n\n      <p><button onClick={() => handleSubmit(removeAddress.toLowerCase(), threshold)}>Remove</button></p>\n    </div>\n  )\n}\n\nexport default RemoveOwnerModal\n","import { isAddress } from '@ethersproject/address'\nimport React, { useState } from 'react'\n\ninterface Interface {\n  handleError: (err: Error) => void\n  handleSubmit: (oldOwner: string, newOwner: string) => void\n  oldAddress: string\n}\n\nconst SwapOwnerModal: React.FC<Interface> = ({ oldAddress, handleError, handleSubmit }) => {\n  const [newOwner, setNewOwner] = useState<string>('')\n\n  const validateAddress = () =>\n    isAddress(newOwner)\n      ? handleSubmit(oldAddress, newOwner.toLowerCase())\n      : handleError(new Error('Address is not valid'))\n\n  return (\n    <div>\n      <h3>Swap Owner</h3>\n      <p>Swap address for a new one.</p>\n      <label>Old Address:</label>\n      <input type=\"text\" defaultValue={oldAddress} />\n      <label>New Owner</label>\n      <input type=\"text\" className=\"newAddress\" value={newOwner} onChange={evt => setNewOwner(evt.target.value)} />\n\n      <p><button onClick={validateAddress}>Swap Address</button></p>\n    </div>\n  )\n}\n\nexport default SwapOwnerModal\n","export default __webpack_public_path__ + \"static/media/delete.8970c03e.svg\";","export default __webpack_public_path__ + \"static/media/swap.29d1f400.svg\";","export default __webpack_public_path__ + \"static/media/edit.d3af4af9.svg\";","import React, { useEffect, useState } from 'react'\nimport { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport ValueWithButtons from '../../../components/ValueWithButtons'\nimport ChangeThresholdModal from './ChangeThresholdModal'\nimport AddOwnerModal from './AddOwnerModal'\nimport RemoveOwnerModal from './RemoveOwnerModal'\nimport SwapOwnerModal from './SwapOwnerModal'\nimport Modal from '../../../components/Modal'\nimport deleteIcon from '../../../images/delete.svg'\nimport swapIcon from '../../../images/swap.svg'\nimport editIcon from '../../../images/edit.svg'\n\ninterface Interface {\n  safe: Safe\n  handleError: (err: Error) => void\n  addTransaction: (transaction: SafeTransaction) => void\n}\n\nconst PolicyComponent: React.FC<Interface> = ({ safe, addTransaction, handleError }) => {\n  // Safe variables:\n  const [owners, setOwners] = useState<string[]>([])\n  const [threshold, setThreshold] = useState<number>(0)\n\n  // UI components:\n  const [addNewOwner, setAddNewOwner] = useState<boolean>(false)\n  const [changeThreshold, setChangeThreshold] = useState<boolean>(false)\n  const [removeOwner, setRemoveOwner] = useState<null | string>(null)\n  const [swapOwner, setSwapOwner] = useState<null | string>(null)\n\n  useEffect(() => {\n    safe.getOwners().then((owners: string[]) => setOwners(owners))\n    safe.getThreshold().then((result: number) => setThreshold(result))\n  }, [safe])\n\n  // Create transaction for changing the thresold:\n  const changeThresholdFunction = (newThreshold: number) =>\n    safe.getChangeThresholdTx(newThreshold)\n      .then((transaction: SafeTransaction) => {\n        addTransaction(transaction)\n        afterTransaction()\n      })\n      .catch(handleError)\n\n  // Add an owner and update threshold:\n  const addOwnerFunction = (newOwner: string, newThreshold: number) =>\n    safe.getAddOwnerTx(newOwner, newThreshold)\n      .then((transaction: SafeTransaction) => {\n        addTransaction(transaction)\n        afterTransaction()\n      })\n      .catch(handleError)\n\n  // remove an owner and update the threshold:\n  const removeOwnerFunction = (removeOwner: string, newThreshold: number) =>\n    safe.getRemoveOwnerTx(removeOwner, newThreshold)\n      .then((transaction: SafeTransaction) => {\n        addTransaction(transaction)\n        afterTransaction()\n      })\n      .catch(handleError)\n\n  // swap one owner for another:\n  const swapOwnerFunction = (swapOwner: string, newOwner: string) =>\n    safe.getSwapOwnerTx(swapOwner, newOwner)\n      .then((transaction: SafeTransaction) => {\n        addTransaction(transaction)\n        afterTransaction()\n      })\n      .catch(handleError)\n\n  // close ALL modals\n  const afterTransaction = () => {\n    setAddNewOwner(false)\n    setChangeThreshold(false)\n    setRemoveOwner(null)\n    setSwapOwner(null)\n  }\n\n  return (\n    <section className=\"section panel\">\n      <h2>Safe Policy</h2>\n      <table>\n        <tbody>\n          <tr>\n            <th>Owners</th>\n            <td>\n              <ul>\n                {owners.map((owner: string) => (\n                  <li key={owner} >\n                    <ValueWithButtons value={owner} />\n                    <button className=\"icon delete\" onClick={() => setRemoveOwner(owner)}>\n                      <img src={deleteIcon} alt=\"delete address\" />\n                    </button>\n                    <button className=\"icon\" onClick={() => setSwapOwner(owner)}>\n                      <img src={swapIcon} alt=\"swap address\" />\n                    </button>\n                  </li>\n                ))}\n              </ul>\n              <button onClick={() => setAddNewOwner(true)}>+ Add Owner</button>\n            </td>\n          </tr>\n          <tr className=\"text\">\n            <th>Threshold</th>\n            <td>\n              {threshold}\n              <button className=\"icon\" onClick={() => setChangeThreshold(true)}>\n                <img src={editIcon} alt=\"edit threshold\" />\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      {changeThreshold && <Modal handleClose={() => setChangeThreshold(false)}><ChangeThresholdModal numberOfOwners={owners.length} currentThreshold={threshold} handleSubmit={changeThresholdFunction} /></Modal>}\n      {addNewOwner && <Modal handleClose={() => setAddNewOwner(false)}><AddOwnerModal numberOfOwners={owners.length} handleSubmit={addOwnerFunction} handleError={handleError} /></Modal>}\n      {removeOwner && <Modal handleClose={() => setRemoveOwner(null)}><RemoveOwnerModal removeAddress={removeOwner} numberOfOwners={owners.length} handleSubmit={removeOwnerFunction} /></Modal>}\n      {swapOwner && <Modal handleClose={() => setSwapOwner(null)}><SwapOwnerModal oldAddress={swapOwner} handleSubmit={swapOwnerFunction} handleError={handleError} /></Modal>}\n    </section>\n  )\n}\n\nexport default PolicyComponent\n","import { isAddress } from '@ethersproject/address'\nimport React, { useState } from 'react'\n\ninterface Interface {\n  createTransaction: (recipient: string, amount: number) => void\n  handleError: (error: Error) => void\n}\n\nconst TransferValueModal: React.FC<Interface> = ({ createTransaction, handleError }) => {\n  const [recipient, setRecipient] = useState<string>('')\n  const [amount, setAmount] = useState<number>(10000)\n\n  const validateTransaction = () => {\n    if (!isAddress(recipient)) {\n      return handleError(new Error('Recipient is not an address.'))\n    }\n\n    createTransaction(recipient.toLowerCase(), amount)\n  }\n\n  return (\n    <>\n      <h3>Create Transaction</h3>\n      <p>\n        <label>Recepient:</label>\n        <input type=\"text\" className=\"to\" value={recipient} onChange={evt => setRecipient(evt.target.value)} />\n      </p>\n      <p>\n        <label>Amount:</label>\n        <input type=\"number\" className=\"amount\" value={amount} onChange={evt => setAmount(parseInt(evt.target.value))} />\n      </p>\n      <button className=\"submit\" onClick={validateTransaction}>Create Transaction</button>\n    </>\n  )\n}\n\nexport default TransferValueModal\n","import { isAddress } from '@ethersproject/address'\nimport React, { useState } from 'react'\nimport { Erc20Token } from '.'\n\ninterface Interface {\n  token: Erc20Token\n  handleError: (err: Error) => void\n  createTransaction: (token: Erc20Token, amount: number, to: string) => void\n}\n\nconst TransferTokenModal: React.FC<Interface> = ({ token, createTransaction, handleError }) => {\n  const [transaction, setTransaction] = useState<{amount: number, address: string}>({ amount: 0, address: '' })\n\n  const validateTransaction = () => {\n    if (!isAddress(transaction.address)) {\n      return handleError(new Error('Recipient is not an address.'))\n    }\n\n    if (transaction.amount > token.amount || transaction.amount < 1) {\n      return handleError(new Error(`Amount should be between 1 and ${token.amount}.`))\n    }\n\n    return createTransaction(token, transaction.amount, transaction.address.toLowerCase())\n  }\n\n  return (\n    <div>\n      <h2>Transfer ERC20 Token: {token.symbol}</h2>\n      <p>\n        <label>You have:</label>\n        <input type=\"text\" className=\"readonly\" defaultValue={token.amount} />\n      </p>\n      <p>\n        <label>Amount to sent:</label>\n        <input type=\"number\" className=\"amount\" value={transaction.amount} onChange={evt => setTransaction({ ...transaction, amount: parseInt(evt.target.value) })} />\n      </p>\n      <p>\n        <label>Recipient</label>\n        <input type=\"string\" className=\"recipient\" value={transaction.address} onChange={evt => setTransaction({ ...transaction, address: evt.target.value })} />\n      </p>\n\n      <p>\n        <button className=\"submit\" onClick={validateTransaction}>\n          Create Transaction\n        </button>\n      </p>\n    </div>\n  )\n}\n\nexport default TransferTokenModal\n","import local from './local.json'\nimport testnet from './testnet.json'\n\nexport const getContracts = (chainId: number) => {\n  switch (chainId) {\n    case 31: return testnet\n    default: return local\n  }\n}\n","import { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport { ERC20TransactionBuilder } from '@rsksmart/safe-transactions-sdk'\nimport { BigNumber, Contract } from 'ethers'\nimport React, { useEffect, useState } from 'react'\nimport Modal from '../../../components/Modal'\nimport TransferValueModal from './TransferValueModal'\nimport erc20Abi from './erc20.json'\nimport refreshIcon from '../../../images/refresh.svg'\nimport TransferTokenModal from './TransferTokenModal'\nimport { getContracts } from '../../../config'\n\ninterface Interface {\n  safe: Safe\n  handleError: (err: Error) => void\n  addTransaction: (transaction: SafeTransaction) => void\n}\n\nexport interface Erc20Token {\n  symbol: string\n  decimals: number\n  amount: number\n  contractAddress: string\n}\n\nconst AssetsComponent: React.FC<Interface> = ({ safe, addTransaction, handleError }) => {\n  const [showTransfer, setShowTransfer] = useState<boolean>(false)\n  const [showTokenTransfer, setShowTokenTransfer] = useState<Erc20Token | null>(null)\n\n  const [balance, setBalance] = useState<string>('0')\n  const [tokens, setTokens] = useState<any[]>([])\n\n  useEffect(() => {\n    getSafeBalance()\n\n    safe.getChainId().then((chainId: number) =>\n      getERC2Balance({ symbol: 'tRIF', decimals: 18, amount: 0, contractAddress: getContracts(chainId).rifToken }))\n  }, [safe])\n\n  const getSafeBalance = () => safe.getBalance().then((balance: BigNumber) => setBalance(balance.toString()))\n\n  const getERC2Balance = (token: Erc20Token) => {\n    const signer = safe.getSigner()\n    const contract = new Contract(token.contractAddress, erc20Abi, signer)\n    contract.balanceOf(safe.getAddress())\n      .then((result: BigNumber) => result.toString())\n      .then((result: string) => {\n        const updateToken = { ...token, amount: parseInt(result) / Math.pow(10, 18) }\n        const isListed = tokens.find((findToken: Erc20Token) => findToken.symbol === token.symbol)\n\n        const newTokenList = isListed\n          ? tokens.map((findToken: Erc20Token) => findToken.symbol === token.symbol ? updateToken : findToken)\n          : [...tokens, updateToken]\n\n        setTokens(newTokenList)\n      })\n      .catch((err: Error) => console.log('error', err))\n  }\n\n  // Create transaction to send rbtc or data\n  const createTransaction = (to: string, amount: number) =>\n    safe.createTransaction({\n      to,\n      value: amount.toString(),\n      data: '0x'\n    })\n      .then((transaction: SafeTransaction) => addTransaction(transaction))\n      .catch(handleError)\n      .finally(() => setShowTransfer(false))\n\n  // Create transaction to send an ERC20 token:\n  const createTokenTransaction = (token: Erc20Token, amount: number, to: string) => {\n    const contract = new Contract(token.contractAddress, erc20Abi, safe.getSigner())\n    const txBuilder = new ERC20TransactionBuilder(safe, contract)\n\n    const bigAmount = BigNumber.from(amount).mul(BigNumber.from(10).pow(token.decimals))\n\n    txBuilder.transfer(to, bigAmount)\n      .then((transaction: SafeTransaction) => addTransaction(transaction))\n      .catch(handleError)\n      .finally(() => setShowTokenTransfer(null))\n  }\n\n  return (\n    <>\n      <div className=\"panel\">\n        <h2>Assets</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Asset</th>\n              <th>Amount</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td><p>rBTC</p></td>\n              <td>\n                <p>\n                  {(parseInt(balance) / 1000000000000000000).toString()}\n                  <button className=\"icon\" onClick={getSafeBalance}>\n                    <img src={refreshIcon} alt=\"refresh balance\" />\n                  </button>\n                  <button className=\"icon\" onClick={() => setShowTransfer(true)}>transfer</button>\n                </p>\n              </td>\n            </tr>\n            {tokens.map((token: any) => (\n              <tr key={token.contractAddress}>\n                <td><p>{token.symbol}</p></td>\n                <td>\n                  {token.amount}\n                  <button className=\"icon\" onClick={() => getERC2Balance(token)}>\n                    <img src={refreshIcon} alt=\"refresh balance\" />\n                  </button>\n                  <button className=\"icon\" onClick={() => setShowTokenTransfer(token)}>\n                    transfer\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      {showTransfer && (\n        <Modal handleClose={() => setShowTransfer(false)}>\n          <TransferValueModal\n            createTransaction={createTransaction}\n            handleError={handleError}\n          />\n        </Modal>\n      )}\n      {showTokenTransfer && (\n        <Modal handleClose={() => setShowTokenTransfer(null)}>\n          <TransferTokenModal\n            token={showTokenTransfer}\n            handleError={handleError}\n            createTransaction={createTokenTransaction}\n          />\n        </Modal>\n      )}\n    </>\n  )\n}\n\nexport default AssetsComponent\n","import React from 'react'\nimport Modal from './Modal'\n\ninterface Interface {\n  closeModal: () => void\n  changeScreen: () => void\n}\n\nconst TransactionCreatedModal: React.FC<Interface> = ({ closeModal, changeScreen }) => {\n  return (\n    <Modal handleClose={closeModal}>\n      <h2>Transaction Created</h2>\n      <p>A transaction has been created and added to the transaction panel. You can sign the transaction there, and when enough signatures are collected, execute it.</p>\n      <p>\n        <button onClick={changeScreen}>View Transactions</button>\n      </p>\n    </Modal>\n  )\n}\n\nexport default TransactionCreatedModal\n","import React, { useState, MouseEvent } from 'react'\nimport { Safe, SafeTransaction } from '@gnosis.pm/safe-core-sdk'\nimport Navigation from './Navigation'\nimport TransactionsPanel from './transactions'\nimport Dashboard from './Dashboard'\nimport PolicyComponent from './policies'\nimport AssetsComponent from './assets'\nimport TransactionCreatedModal from '../../components/TransactionCreatedModal'\n\ninterface Interface {\n  safe: Safe\n  walletAddress: string\n  handleLogout: () => void\n  handleError: (err: Error) => void\n}\n\nconst SafeInteraction: React.FC<Interface> = ({ safe, walletAddress, handleError, handleLogout }) => {\n  // UI Only\n  const [selectedTab, setSelectedTab] = useState<string>('dashboard')\n  const [showTransactionInfo, setShowTransactionInfo] = useState<boolean>(false)\n  const changeActive = (evt: MouseEvent<HTMLButtonElement>) => setSelectedTab(evt.currentTarget.id)\n\n  // Transaction Management\n  const [transactions, setTransactions] = useState<SafeTransaction[]>([])\n  const addTransaction = (transaction: SafeTransaction) => {\n    console.log(transaction)\n    setTransactions([...transactions, transaction])\n    setShowTransactionInfo(true)\n  }\n\n  const closeModalAndSwitchScreen = () => {\n    setShowTransactionInfo(false)\n    setSelectedTab('transactions')\n  }\n\n  return (\n    <section className=\"selectedSafe\">\n      <Navigation handleLogout={handleLogout} changeActive={changeActive} selected={selectedTab} />\n      {selectedTab === 'dashboard' && <Dashboard safe={safe} />}\n      {selectedTab === 'transactions' && <TransactionsPanel transactions={transactions} addTransaction={addTransaction} safe={safe} handleError={handleError} walletAddress={walletAddress} />}\n      {selectedTab === 'assets' && <AssetsComponent safe={safe} handleError={handleError} addTransaction={addTransaction} />}\n      {selectedTab === 'policy' && <PolicyComponent safe={safe} addTransaction={addTransaction} handleError={handleError} />}\n\n      {showTransactionInfo && <TransactionCreatedModal closeModal={() => setShowTransactionInfo(false)} changeScreen={closeModalAndSwitchScreen} />}\n    </section>\n  )\n}\n\nexport default SafeInteraction\n","import React, { useState } from 'react'\nimport { isAddress } from '@ethersproject/address'\n\ninterface Interface {\n  connectAddress: string | null\n  handleError: (error: Error) => void\n  createSafe: (addresses: string[], threshold: number) => void\n}\n\nconst CreateSafeComponent: React.FC<Interface> = ({ connectAddress, createSafe, handleError }) => {\n  const [addresses, setAddresses] = useState<string[]>([connectAddress ? connectAddress.toLowerCase() : ''])\n  const [threshold, setThreshold] = useState<number>(1)\n\n  const changeAddressValue = (evt: any) => {\n    const changeIndex = parseInt(evt.target.id.replace('address', ''))\n    const updateList = addresses.map((item: string, index: number) => index === changeIndex ? evt.target.value.toLowerCase() : item)\n    setAddresses(updateList)\n  }\n\n  const removeAddress = (changeIndex: number) => {\n    const updateList = addresses.filter((_item: string, index: number) => index !== changeIndex)\n    setAddresses(updateList)\n  }\n\n  const validateSafeSettings = () => {\n    const errorList: number[] = []\n    addresses.forEach((address: string, index: number) => {\n      if (!isAddress(address)) {\n        errorList.push(index + 1)\n      }\n    })\n\n    if (errorList.length !== 0) {\n      handleError(new Error(`Incorrect Addresses for: ${errorList.toString()}`))\n      return false\n    }\n\n    createSafe(addresses, threshold)\n  }\n\n  const loopOptions = (length: number) => {\n    const items = []\n    for (let index = 0; index < length; index++) {\n      items.push(<option key={index} value={index + 1}>{index + 1}</option>)\n    }\n    return items\n  }\n\n  return (\n    <div>\n      <h4>Create a new safe</h4>\n      <p>\n        A safe can have any number of owners associated with it. Your connected address has been added as the first account.<br/>\n        Click the <em>Add address</em> button to add additional addresses, and the <em>delete button</em> to remove addresses.\n      </p>\n\n      <ul>\n        {addresses.map((address: string, index: number) => (\n          <li key={index}>\n            <label>Address {index + 1}: </label>\n            <input type=\"text\"\n              id={`address${index}`}\n              value={address}\n              onChange={changeAddressValue}\n              className={`address${index}`}\n            />\n            <button className={`removeAddress${index}`} onClick={() => removeAddress(index)}>delete</button>\n          </li>\n        ))}\n      </ul>\n      <button className=\"addAddress\" onClick={() => setAddresses([...addresses, ''])}>Add address</button>\n\n      <p>Transactions require the confirmation of at least\n        <select className=\"threshold\" value={threshold.toString()} onChange={evt => setThreshold(parseInt(evt.target.value))}>\n          {loopOptions(addresses.length)}\n        </select>\n        signatures.\n      </p>\n      <button className=\"submit\" disabled={addresses.length === 0} onClick={validateSafeSettings}>Create Safe</button>\n    </div>\n  )\n}\n\nexport default CreateSafeComponent\n","import React, { useState } from 'react'\n\ninterface Interface {\n  connectToSafe: (safeAddress: string) => void\n}\n\nconst ConnectToSafeComponent: React.FC<Interface> = ({ connectToSafe }) => {\n  const [safeAddress, setSafeAddress] = useState<string>('')\n\n  return (\n    <div>\n      <h3>Connect to an existing safe</h3>\n      <label>Safe address</label>\n      <input className=\"safeAddress\" type=\"text\" value={safeAddress} onChange={evt => setSafeAddress(evt.target.value)} />\n      <button className=\"connect\" onClick={() => connectToSafe(safeAddress)}>Connect</button>\n    </div>\n  )\n}\n\nexport default ConnectToSafeComponent\n","import React, { useState } from 'react'\nimport EthersSafe, { Safe } from '@gnosis.pm/safe-core-sdk'\nimport { EthersSafeFactory } from '@rsksmart/safe-factory-sdk'\nimport { ethers } from 'ethers'\n\nimport CreateSafeComponent from './CreateSafeComponent'\nimport ConnectToSafeComponent from './ConnectToSafeComponent'\nimport { getContracts } from '../../config'\n\ninterface Interface {\n  web3Provider: any\n  handleSetSafe: (safe: Safe | EthersSafe) => any\n  handleError: (error: Error) => void\n  address: string | null\n}\n\nconst ChooseSafe: React.FC<Interface> = ({ web3Provider, handleSetSafe, handleError, address }) => {\n  // UI variables\n  const [isCreate, setIsCreate] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n\n  // Create a new safe:\n  const createSafe = (addresses: string[], threshold: number) => {\n    setIsLoading(true)\n\n    const contracts = getContracts(1337)\n    const provider = new ethers.providers.Web3Provider(web3Provider)\n    const signer = provider.getSigner()\n\n    const safeFactory = new EthersSafeFactory(\n      signer,\n      contracts.proxyFactoryAddress.toLowerCase(),\n      contracts.safeSingletonAddress.toLowerCase()\n    )\n\n    safeFactory.createSafe({ owners: addresses, threshold })\n      .then(handleSetSafe)\n      .catch(handleError)\n      .finally(() => setIsLoading(false))\n  }\n\n  // Connect to an existing safe:\n  const connectToSafe = (safeAddress: string) => {\n    setIsLoading(true)\n\n    const provider = new ethers.providers.Web3Provider(web3Provider)\n    const signer = provider.getSigner()\n\n    EthersSafe.create(ethers, safeAddress.toLowerCase(), signer)\n      .then((safe: any) => handleSetSafe(safe))\n      .catch(handleError)\n      .finally(() => setIsLoading(false))\n  }\n\n  return isLoading ? <div style={{ textAlign: 'center' }}>Loading...</div>\n    : (\n      <section className=\"connect panel\">\n        <h2>\n        Create a safe, or connect to an existing one\n          <button onClick={() => setIsCreate(!isCreate)}>\n            {isCreate ? 'Connect to Safe' : 'Create Safe'}\n          </button>\n        </h2>\n        {isCreate ? (\n          <CreateSafeComponent\n            createSafe={createSafe}\n            handleError={handleError}\n            connectAddress={address}\n          />\n        ) : (\n          <ConnectToSafeComponent\n            connectToSafe={connectToSafe}\n          />\n        )}\n      </section>\n    )\n}\n\nexport default ChooseSafe\n","import React, { useState } from 'react'\nimport RLogin from '@rsksmart/rlogin'\nimport { Safe } from '@gnosis.pm/safe-core-sdk'\n\nimport './styles/App.scss'\nimport Web3Provider from './pages/start/ConnectWalletComponent'\nimport ConnectedBar from './components/ConnectedBar'\nimport SafeInteraction from './pages/safeInteraction'\nimport ChooseSafe from './pages/connectToSafe'\n\nconst rLogin = new RLogin({\n  cacheProvider: false,\n  supportedChains: [31, 1337]\n})\n\nfunction App () {\n  const [error, setError] = useState<null | string>('')\n\n  // Web3Provider and Safe variables\n  const [rLoginResponse, setRLoginResponse] = useState<{ provider: any, disconnect: any } | null>(null)\n  const [safe, setSafe] = useState<Safe | null>(null)\n\n  // provider variables\n  const [address, setAddress] = useState<string | null>(null)\n  const [chainId, setChainId] = useState<number | null>(null)\n\n  const web3ProviderResponse = (response: any, address: string, chainId: number) => {\n    setRLoginResponse(response)\n    setAddress(address)\n    setChainId(chainId)\n\n    // listen for address change and update:\n    response.provider.on('accountsChanged', (accounts: string[]) => setAddress(accounts[0]))\n  }\n\n  const handleSetSafe = (safe: any) => {\n    setSafe(safe)\n    clearError()\n  }\n\n  const handleError = (error: Error) => setError(error.message)\n  const clearError = () => setError(null)\n\n  const handleLogout = () => {\n    rLoginResponse?.disconnect()\n    setRLoginResponse(null)\n    setSafe(null)\n    setError(null)\n    setAddress(null)\n    setChainId(null)\n  }\n\n  return (\n    <div className={rLoginResponse ? 'App' : 'App signin'}>\n      {!rLoginResponse ? (\n        <Web3Provider\n          rLogin={rLogin}\n          setRLoginResponse={web3ProviderResponse}\n          handleError={handleError}\n        />\n      ) : <ConnectedBar chainId={chainId} walletAddress={address} />\n      }\n\n      {error && (\n        <section className=\"error\">\n          <p>{error}</p>\n          <button onClick={clearError}>x</button>\n        </section>\n      )}\n\n      {rLoginResponse && !safe && (\n        <ChooseSafe\n          web3Provider={rLoginResponse.provider}\n          handleSetSafe={handleSetSafe}\n          handleError={handleError}\n          address={address}\n        />\n      )}\n\n      {rLoginResponse && address && safe && (\n        <SafeInteraction\n          safe={safe}\n          walletAddress={address}\n          handleLogout={handleLogout}\n          handleError={handleError}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}